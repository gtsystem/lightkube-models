{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Documentation of Resources and Models for Kubernetes 1.29.0 to be used with lightkube.</p>"},{"location":"#table-of-content","title":"Table of content","text":"<ul> <li>Models</li> <li>Resources</li> </ul> <p>Back to lightkube documentation</p>"},{"location":"models/","title":"All models","text":"Model name Available versions APIGroup meta_v1 APIGroupList meta_v1 APIResource meta_v1 APIResourceList meta_v1 APIService apiregistration_v1 APIServiceCondition apiregistration_v1 APIServiceList apiregistration_v1 APIServiceSpec apiregistration_v1 APIServiceStatus apiregistration_v1 APIVersions meta_v1 AWSElasticBlockStoreVolumeSource core_v1 Affinity core_v1 AggregationRule rbac_v1 AllocationResult resource_v1alpha2 AttachedVolume core_v1 AuditAnnotation admissionregistration_v1beta1, admissionregistration_v1alpha1 AzureDiskVolumeSource core_v1 AzureFilePersistentVolumeSource core_v1 AzureFileVolumeSource core_v1 Binding core_v1 BoundObjectReference authentication_v1 CSIDriver storage_v1 CSIDriverList storage_v1 CSIDriverSpec storage_v1 CSINode storage_v1 CSINodeDriver storage_v1 CSINodeList storage_v1 CSINodeSpec storage_v1 CSIPersistentVolumeSource core_v1 CSIStorageCapacity storage_v1 CSIStorageCapacityList storage_v1 CSIVolumeSource core_v1 Capabilities core_v1 CephFSPersistentVolumeSource core_v1 CephFSVolumeSource core_v1 CertificateSigningRequest certificates_v1 CertificateSigningRequestCondition certificates_v1 CertificateSigningRequestList certificates_v1 CertificateSigningRequestSpec certificates_v1 CertificateSigningRequestStatus certificates_v1 CinderPersistentVolumeSource core_v1 CinderVolumeSource core_v1 ClaimSource core_v1 ClientIPConfig core_v1 ClusterRole rbac_v1 ClusterRoleBinding rbac_v1 ClusterRoleBindingList rbac_v1 ClusterRoleList rbac_v1 ClusterTrustBundle certificates_v1alpha1 ClusterTrustBundleList certificates_v1alpha1 ClusterTrustBundleProjection core_v1 ClusterTrustBundleSpec certificates_v1alpha1 ComponentCondition core_v1 ComponentStatus core_v1 ComponentStatusList core_v1 Condition meta_v1 ConfigMap core_v1 ConfigMapEnvSource core_v1 ConfigMapKeySelector core_v1 ConfigMapList core_v1 ConfigMapNodeConfigSource core_v1 ConfigMapProjection core_v1 ConfigMapVolumeSource core_v1 Container core_v1 ContainerImage core_v1 ContainerPort core_v1 ContainerResizePolicy core_v1 ContainerResourceMetricSource autoscaling_v2 ContainerResourceMetricStatus autoscaling_v2 ContainerState core_v1 ContainerStateRunning core_v1 ContainerStateTerminated core_v1 ContainerStateWaiting core_v1 ContainerStatus core_v1 ControllerRevision apps_v1 ControllerRevisionList apps_v1 CronJob batch_v1 CronJobList batch_v1 CronJobSpec batch_v1 CronJobStatus batch_v1 CrossVersionObjectReference autoscaling_v2, autoscaling_v1 CustomResourceColumnDefinition apiextensions_v1 CustomResourceConversion apiextensions_v1 CustomResourceDefinition apiextensions_v1 CustomResourceDefinitionCondition apiextensions_v1 CustomResourceDefinitionList apiextensions_v1 CustomResourceDefinitionNames apiextensions_v1 CustomResourceDefinitionSpec apiextensions_v1 CustomResourceDefinitionStatus apiextensions_v1 CustomResourceDefinitionVersion apiextensions_v1 CustomResourceSubresourceScale apiextensions_v1 CustomResourceSubresourceStatus apiextensions_v1 CustomResourceSubresources apiextensions_v1 CustomResourceValidation apiextensions_v1 DaemonEndpoint core_v1 DaemonSet apps_v1 DaemonSetCondition apps_v1 DaemonSetList apps_v1 DaemonSetSpec apps_v1 DaemonSetStatus apps_v1 DaemonSetUpdateStrategy apps_v1 DeleteOptions meta_v1 Deployment apps_v1 DeploymentCondition apps_v1 DeploymentList apps_v1 DeploymentSpec apps_v1 DeploymentStatus apps_v1 DeploymentStrategy apps_v1 DownwardAPIProjection core_v1 DownwardAPIVolumeFile core_v1 DownwardAPIVolumeSource core_v1 EmptyDirVolumeSource core_v1 Endpoint discovery_v1 EndpointAddress core_v1 EndpointConditions discovery_v1 EndpointHints discovery_v1 EndpointPort core_v1, discovery_v1 EndpointSlice discovery_v1 EndpointSliceList discovery_v1 EndpointSubset core_v1 Endpoints core_v1 EndpointsList core_v1 EnvFromSource core_v1 EnvVar core_v1 EnvVarSource core_v1 EphemeralContainer core_v1 EphemeralVolumeSource core_v1 Event core_v1, events_v1 EventList core_v1, events_v1 EventSeries core_v1, events_v1 EventSource core_v1 Eviction policy_v1 ExecAction core_v1 ExemptPriorityLevelConfiguration flowcontrol_v1, flowcontrol_v1beta3 ExpressionWarning admissionregistration_v1beta1, admissionregistration_v1alpha1 ExternalDocumentation apiextensions_v1 ExternalMetricSource autoscaling_v2 ExternalMetricStatus autoscaling_v2 FCVolumeSource core_v1 FieldsV1 meta_v1 FlexPersistentVolumeSource core_v1 FlexVolumeSource core_v1 FlockerVolumeSource core_v1 FlowDistinguisherMethod flowcontrol_v1, flowcontrol_v1beta3 FlowSchema flowcontrol_v1, flowcontrol_v1beta3 FlowSchemaCondition flowcontrol_v1, flowcontrol_v1beta3 FlowSchemaList flowcontrol_v1, flowcontrol_v1beta3 FlowSchemaSpec flowcontrol_v1, flowcontrol_v1beta3 FlowSchemaStatus flowcontrol_v1, flowcontrol_v1beta3 ForZone discovery_v1 GCEPersistentDiskVolumeSource core_v1 GRPCAction core_v1 GitRepoVolumeSource core_v1 GlusterfsPersistentVolumeSource core_v1 GlusterfsVolumeSource core_v1 GroupSubject flowcontrol_v1, flowcontrol_v1beta3 GroupVersionForDiscovery meta_v1 HPAScalingPolicy autoscaling_v2 HPAScalingRules autoscaling_v2 HTTPGetAction core_v1 HTTPHeader core_v1 HTTPIngressPath networking_v1 HTTPIngressRuleValue networking_v1 HorizontalPodAutoscaler autoscaling_v2, autoscaling_v1 HorizontalPodAutoscalerBehavior autoscaling_v2 HorizontalPodAutoscalerCondition autoscaling_v2 HorizontalPodAutoscalerList autoscaling_v2, autoscaling_v1 HorizontalPodAutoscalerSpec autoscaling_v2, autoscaling_v1 HorizontalPodAutoscalerStatus autoscaling_v2, autoscaling_v1 HostAlias core_v1 HostIP core_v1 HostPathVolumeSource core_v1 IPAddress networking_v1alpha1 IPAddressList networking_v1alpha1 IPAddressSpec networking_v1alpha1 IPBlock networking_v1 ISCSIPersistentVolumeSource core_v1 ISCSIVolumeSource core_v1 Info version Ingress networking_v1 IngressBackend networking_v1 IngressClass networking_v1 IngressClassList networking_v1 IngressClassParametersReference networking_v1 IngressClassSpec networking_v1 IngressList networking_v1 IngressLoadBalancerIngress networking_v1 IngressLoadBalancerStatus networking_v1 IngressPortStatus networking_v1 IngressRule networking_v1 IngressServiceBackend networking_v1 IngressSpec networking_v1 IngressStatus networking_v1 IngressTLS networking_v1 IntOrString util_intstr JSON apiextensions_v1 JSONSchemaProps apiextensions_v1 JSONSchemaPropsOrArray apiextensions_v1 JSONSchemaPropsOrBool apiextensions_v1 JSONSchemaPropsOrStringArray apiextensions_v1 Job batch_v1 JobCondition batch_v1 JobList batch_v1 JobSpec batch_v1 JobStatus batch_v1 JobTemplateSpec batch_v1 KeyToPath core_v1 LabelSelector meta_v1 LabelSelectorRequirement meta_v1 Lease coordination_v1 LeaseList coordination_v1 LeaseSpec coordination_v1 Lifecycle core_v1 LifecycleHandler core_v1 LimitRange core_v1 LimitRangeItem core_v1 LimitRangeList core_v1 LimitRangeSpec core_v1 LimitResponse flowcontrol_v1, flowcontrol_v1beta3 LimitedPriorityLevelConfiguration flowcontrol_v1, flowcontrol_v1beta3 ListMeta meta_v1 LoadBalancerIngress core_v1 LoadBalancerStatus core_v1 LocalObjectReference core_v1 LocalSubjectAccessReview authorization_v1 LocalVolumeSource core_v1 ManagedFieldsEntry meta_v1 MatchCondition admissionregistration_v1, admissionregistration_v1beta1, admissionregistration_v1alpha1 MatchResources admissionregistration_v1beta1, admissionregistration_v1alpha1 MetricIdentifier autoscaling_v2 MetricSpec autoscaling_v2 MetricStatus autoscaling_v2 MetricTarget autoscaling_v2 MetricValueStatus autoscaling_v2 MicroTime meta_v1 ModifyVolumeStatus core_v1 MutatingWebhook admissionregistration_v1 MutatingWebhookConfiguration admissionregistration_v1 MutatingWebhookConfigurationList admissionregistration_v1 NFSVolumeSource core_v1 NamedRuleWithOperations admissionregistration_v1beta1, admissionregistration_v1alpha1 Namespace core_v1 NamespaceCondition core_v1 NamespaceList core_v1 NamespaceSpec core_v1 NamespaceStatus core_v1 NetworkPolicy networking_v1 NetworkPolicyEgressRule networking_v1 NetworkPolicyIngressRule networking_v1 NetworkPolicyList networking_v1 NetworkPolicyPeer networking_v1 NetworkPolicyPort networking_v1 NetworkPolicySpec networking_v1 Node core_v1 NodeAddress core_v1 NodeAffinity core_v1 NodeCondition core_v1 NodeConfigSource core_v1 NodeConfigStatus core_v1 NodeDaemonEndpoints core_v1 NodeList core_v1 NodeSelector core_v1 NodeSelectorRequirement core_v1 NodeSelectorTerm core_v1 NodeSpec core_v1 NodeStatus core_v1 NodeSystemInfo core_v1 NonResourceAttributes authorization_v1 NonResourcePolicyRule flowcontrol_v1, flowcontrol_v1beta3 NonResourceRule authorization_v1 ObjectFieldSelector core_v1 ObjectMeta meta_v1 ObjectMetricSource autoscaling_v2 ObjectMetricStatus autoscaling_v2 ObjectReference core_v1 Overhead node_v1 OwnerReference meta_v1 ParamKind admissionregistration_v1beta1, admissionregistration_v1alpha1 ParamRef admissionregistration_v1beta1, admissionregistration_v1alpha1 ParentReference networking_v1alpha1 Patch meta_v1 PersistentVolume core_v1 PersistentVolumeClaim core_v1 PersistentVolumeClaimCondition core_v1 PersistentVolumeClaimList core_v1 PersistentVolumeClaimSpec core_v1 PersistentVolumeClaimStatus core_v1 PersistentVolumeClaimTemplate core_v1 PersistentVolumeClaimVolumeSource core_v1 PersistentVolumeList core_v1 PersistentVolumeSpec core_v1 PersistentVolumeStatus core_v1 PhotonPersistentDiskVolumeSource core_v1 Pod core_v1 PodAffinity core_v1 PodAffinityTerm core_v1 PodAntiAffinity core_v1 PodCondition core_v1 PodDNSConfig core_v1 PodDNSConfigOption core_v1 PodDisruptionBudget policy_v1 PodDisruptionBudgetList policy_v1 PodDisruptionBudgetSpec policy_v1 PodDisruptionBudgetStatus policy_v1 PodFailurePolicy batch_v1 PodFailurePolicyOnExitCodesRequirement batch_v1 PodFailurePolicyOnPodConditionsPattern batch_v1 PodFailurePolicyRule batch_v1 PodIP core_v1 PodList core_v1 PodOS core_v1 PodReadinessGate core_v1 PodResourceClaim core_v1 PodResourceClaimStatus core_v1 PodSchedulingContext resource_v1alpha2 PodSchedulingContextList resource_v1alpha2 PodSchedulingContextSpec resource_v1alpha2 PodSchedulingContextStatus resource_v1alpha2 PodSchedulingGate core_v1 PodSecurityContext core_v1 PodSpec core_v1 PodStatus core_v1 PodTemplate core_v1 PodTemplateList core_v1 PodTemplateSpec core_v1 PodsMetricSource autoscaling_v2 PodsMetricStatus autoscaling_v2 PolicyRule rbac_v1 PolicyRulesWithSubjects flowcontrol_v1, flowcontrol_v1beta3 PortStatus core_v1 PortworxVolumeSource core_v1 Preconditions meta_v1 PreferredSchedulingTerm core_v1 PriorityClass scheduling_v1 PriorityClassList scheduling_v1 PriorityLevelConfiguration flowcontrol_v1, flowcontrol_v1beta3 PriorityLevelConfigurationCondition flowcontrol_v1, flowcontrol_v1beta3 PriorityLevelConfigurationList flowcontrol_v1, flowcontrol_v1beta3 PriorityLevelConfigurationReference flowcontrol_v1, flowcontrol_v1beta3 PriorityLevelConfigurationSpec flowcontrol_v1, flowcontrol_v1beta3 PriorityLevelConfigurationStatus flowcontrol_v1, flowcontrol_v1beta3 Probe core_v1 ProjectedVolumeSource core_v1 Quantity resource QueuingConfiguration flowcontrol_v1, flowcontrol_v1beta3 QuobyteVolumeSource core_v1 RBDPersistentVolumeSource core_v1 RBDVolumeSource core_v1 RawExtension runtime ReplicaSet apps_v1 ReplicaSetCondition apps_v1 ReplicaSetList apps_v1 ReplicaSetSpec apps_v1 ReplicaSetStatus apps_v1 ReplicationController core_v1 ReplicationControllerCondition core_v1 ReplicationControllerList core_v1 ReplicationControllerSpec core_v1 ReplicationControllerStatus core_v1 ResourceAttributes authorization_v1 ResourceClaim core_v1, resource_v1alpha2 ResourceClaimConsumerReference resource_v1alpha2 ResourceClaimList resource_v1alpha2 ResourceClaimParametersReference resource_v1alpha2 ResourceClaimSchedulingStatus resource_v1alpha2 ResourceClaimSpec resource_v1alpha2 ResourceClaimStatus resource_v1alpha2 ResourceClaimTemplate resource_v1alpha2 ResourceClaimTemplateList resource_v1alpha2 ResourceClaimTemplateSpec resource_v1alpha2 ResourceClass resource_v1alpha2 ResourceClassList resource_v1alpha2 ResourceClassParametersReference resource_v1alpha2 ResourceFieldSelector core_v1 ResourceHandle resource_v1alpha2 ResourceMetricSource autoscaling_v2 ResourceMetricStatus autoscaling_v2 ResourcePolicyRule flowcontrol_v1, flowcontrol_v1beta3 ResourceQuota core_v1 ResourceQuotaList core_v1 ResourceQuotaSpec core_v1 ResourceQuotaStatus core_v1 ResourceRequirements core_v1 ResourceRule authorization_v1 Role rbac_v1 RoleBinding rbac_v1 RoleBindingList rbac_v1 RoleList rbac_v1 RoleRef rbac_v1 RollingUpdateDaemonSet apps_v1 RollingUpdateDeployment apps_v1 RollingUpdateStatefulSetStrategy apps_v1 RuleWithOperations admissionregistration_v1 RuntimeClass node_v1 RuntimeClassList node_v1 SELinuxOptions core_v1 Scale autoscaling_v1 ScaleIOPersistentVolumeSource core_v1 ScaleIOVolumeSource core_v1 ScaleSpec autoscaling_v1 ScaleStatus autoscaling_v1 Scheduling node_v1 ScopeSelector core_v1 ScopedResourceSelectorRequirement core_v1 SeccompProfile core_v1 Secret core_v1 SecretEnvSource core_v1 SecretKeySelector core_v1 SecretList core_v1 SecretProjection core_v1 SecretReference core_v1 SecretVolumeSource core_v1 SecurityContext core_v1 SelfSubjectAccessReview authorization_v1 SelfSubjectAccessReviewSpec authorization_v1 SelfSubjectReview authentication_v1, authentication_v1beta1, authentication_v1alpha1 SelfSubjectReviewStatus authentication_v1, authentication_v1beta1, authentication_v1alpha1 SelfSubjectRulesReview authorization_v1 SelfSubjectRulesReviewSpec authorization_v1 ServerAddressByClientCIDR meta_v1 ServerStorageVersion apiserverinternal_v1alpha1 Service core_v1 ServiceAccount core_v1 ServiceAccountList core_v1 ServiceAccountSubject flowcontrol_v1, flowcontrol_v1beta3 ServiceAccountTokenProjection core_v1 ServiceBackendPort networking_v1 ServiceCIDR networking_v1alpha1 ServiceCIDRList networking_v1alpha1 ServiceCIDRSpec networking_v1alpha1 ServiceCIDRStatus networking_v1alpha1 ServiceList core_v1 ServicePort core_v1 ServiceReference admissionregistration_v1, apiextensions_v1, apiregistration_v1 ServiceSpec core_v1 ServiceStatus core_v1 SessionAffinityConfig core_v1 SleepAction core_v1 StatefulSet apps_v1 StatefulSetCondition apps_v1 StatefulSetList apps_v1 StatefulSetOrdinals apps_v1 StatefulSetPersistentVolumeClaimRetentionPolicy apps_v1 StatefulSetSpec apps_v1 StatefulSetStatus apps_v1 StatefulSetUpdateStrategy apps_v1 Status meta_v1 StatusCause meta_v1 StatusDetails meta_v1 StorageClass storage_v1 StorageClassList storage_v1 StorageOSPersistentVolumeSource core_v1 StorageOSVolumeSource core_v1 StorageVersion apiserverinternal_v1alpha1 StorageVersionCondition apiserverinternal_v1alpha1 StorageVersionList apiserverinternal_v1alpha1 StorageVersionSpec apiserverinternal_v1alpha1 StorageVersionStatus apiserverinternal_v1alpha1 Subject flowcontrol_v1, rbac_v1, flowcontrol_v1beta3 SubjectAccessReview authorization_v1 SubjectAccessReviewSpec authorization_v1 SubjectAccessReviewStatus authorization_v1 SubjectRulesReviewStatus authorization_v1 Sysctl core_v1 TCPSocketAction core_v1 Taint core_v1 Time meta_v1 TokenRequest authentication_v1, storage_v1 TokenRequestSpec authentication_v1 TokenRequestStatus authentication_v1 TokenReview authentication_v1 TokenReviewSpec authentication_v1 TokenReviewStatus authentication_v1 Toleration core_v1 TopologySelectorLabelRequirement core_v1 TopologySelectorTerm core_v1 TopologySpreadConstraint core_v1 TypeChecking admissionregistration_v1beta1, admissionregistration_v1alpha1 TypedLocalObjectReference core_v1 TypedObjectReference core_v1 UncountedTerminatedPods batch_v1 UserInfo authentication_v1 UserSubject flowcontrol_v1, flowcontrol_v1beta3 ValidatingAdmissionPolicy admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyBinding admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyBindingList admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyBindingSpec admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyList admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicySpec admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyStatus admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingWebhook admissionregistration_v1 ValidatingWebhookConfiguration admissionregistration_v1 ValidatingWebhookConfigurationList admissionregistration_v1 Validation admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidationRule apiextensions_v1 Variable admissionregistration_v1beta1, admissionregistration_v1alpha1 Volume core_v1 VolumeAttachment storage_v1 VolumeAttachmentList storage_v1 VolumeAttachmentSource storage_v1 VolumeAttachmentSpec storage_v1 VolumeAttachmentStatus storage_v1 VolumeAttributesClass storage_v1alpha1 VolumeAttributesClassList storage_v1alpha1 VolumeDevice core_v1 VolumeError storage_v1 VolumeMount core_v1 VolumeNodeAffinity core_v1 VolumeNodeResources storage_v1 VolumeProjection core_v1 VolumeResourceRequirements core_v1 VsphereVirtualDiskVolumeSource core_v1 WatchEvent meta_v1 WebhookClientConfig admissionregistration_v1, apiextensions_v1 WebhookConversion apiextensions_v1 WeightedPodAffinityTerm core_v1 WindowsSecurityContextOptions core_v1"},{"location":"models/admissionregistration_v1/","title":"admissionregistration_v1","text":""},{"location":"models/admissionregistration_v1/#matchcondition","title":"MatchCondition","text":"class <code>lightkube.models.admissionregistration_v1.MatchCondition</code>(expression, name) <p>MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression represents the expression which will be evaluated by CEL. Must   evaluate to bool. CEL expressions have access to the contents of the   AdmissionRequest and Authorizer, organized into CEL variables:   'object' - The object from the incoming request. The value is null for DELETE   requests. 'oldObject' - The existing object. The value is null for CREATE   requests. 'request' - Attributes of the admission   request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL   Authorizer. May be used to perform authorization checks for the principal   (user or service account) of the request.     See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz   'authorizer.requestResource' - A CEL ResourceCheck constructed from the   'authorizer' and configured with the     request resource.   Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/   Required.</li> <li>name <code>str</code> - Name is an identifier for this match condition, used for strategic merging of   MatchConditions, as well as providing an identifier for logging purposes. A   good name should be descriptive of the associated expression. Name must be a   qualified name consisting of alphanumeric characters, '-', '' or '.', and   must start and end with an alphanumeric character (e.g. 'MyName',  or   'my.name',  or '123-abc', regex used for validation is   '([A-Za-z0-9][-A-Za-z0-9.]*)?[A-Za-z0-9]') with an optional DNS subdomain   prefix and '/' (e.g. 'example.com/MyName')   Required.</li> </ul>"},{"location":"models/admissionregistration_v1/#mutatingwebhook","title":"MutatingWebhook","text":"class <code>lightkube.models.admissionregistration_v1.MutatingWebhook</code>(admissionReviewVersions, clientConfig, name, sideEffects, failurePolicy=None, matchConditions=None, matchPolicy=None, namespaceSelector=None, objectSelector=None, reinvocationPolicy=None, rules=None, timeoutSeconds=None) <p>MutatingWebhook describes an admission webhook and the resources and operations it applies to.</p> <p>parameters</p> <ul> <li>admissionReviewVersions <code>List[str]</code> - AdmissionReviewVersions is an ordered list of preferred <code>AdmissionReview</code>   versions the Webhook expects. API server will try to use first version in the   list which it supports. If none of the versions specified in this list   supported by API server, validation will fail for this object. If a persisted   webhook configuration specifies allowed versions and does not include any   versions known to the API Server, calls to the webhook will fail and be   subject to the failure policy.</li> <li>clientConfig <code>WebhookClientConfig</code> - ClientConfig defines how to communicate with the hook. Required</li> <li>name <code>str</code> - The name of the admission webhook. Name should be fully qualified, e.g.,   imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and   kubernetes.io is the name of the organization. Required.</li> <li>sideEffects <code>str</code> - SideEffects states whether this webhook has side effects. Acceptable values   are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or   Unknown). Webhooks with side effects MUST implement a reconciliation system,   since a request may be rejected by a future step in the admission chain and   the side effects therefore need to be undone. Requests with the dryRun   attribute will be auto-rejected if they match a webhook with sideEffects ==   Unknown or Some.</li> <li>failurePolicy <code>Optional[str]</code> - FailurePolicy defines how unrecognized errors from the admission endpoint are   handled - allowed values are Ignore or Fail. Defaults to Fail.</li> <li>matchConditions <code>Optional[List[MatchCondition]]</code> - MatchConditions is a list of conditions that must be met for a request to be   sent to this webhook. Match conditions filter requests that have already been   matched by the rules, namespaceSelector, and objectSelector. An empty list of   matchConditions matches all requests. There are a maximum of 64 match   conditions allowed.   The exact matching logic is (in order):<ol> <li>If ANY matchCondition evaluates to FALSE, the webhook is skipped.</li> <li>If ALL matchConditions evaluate to TRUE, the webhook is called.</li> <li>If any matchCondition evaluates to an error (but none are FALSE):</li> <li>If failurePolicy=Fail, reject the request</li> <li>If failurePolicy=Ignore, the error is ignored and the webhook is   skipped   This is a beta feature and managed by the AdmissionWebhookMatchConditions   feature gate.</li> </ol> </li> <li>matchPolicy <code>Optional[str]</code> - matchPolicy defines how the \"rules\" list is used to match incoming requests.   Allowed values are \"Exact\" or \"Equivalent\".</li> <li>Exact: match a request only if it exactly matches a specified rule. For   example, if deployments can be modified via apps/v1, apps/v1beta1, and   extensions/v1beta1, but \"rules\" only included <code>apiGroups:[\"apps\"],   apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a request to apps/v1beta1 or   extensions/v1beta1 would not be sent to the webhook.</li> <li>Equivalent: match a request if modifies a resource listed in rules, even via   another API group or version. For example, if deployments can be modified via   apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included   <code>apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a   request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1   and sent to the webhook.   Defaults to \"Equivalent\"</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - NamespaceSelector decides whether to run the webhook on an object based on   whether the namespace for that object matches the selector. If the object   itself is a namespace, the matching is performed on object.metadata.labels. If   the object is another cluster scoped resource, it never skips the webhook.   For example, to run the webhook on any objects whose namespace is not   associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as   follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"runlevel\",         \"operator\": \"NotIn\",         \"values\": [           \"0\",           \"1\"         ]       }     ]   }   If instead you want to only run the webhook on any objects whose namespace is   associated with the \"environment\" of \"prod\" or \"staging\"; you will set the   selector as follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"environment\",         \"operator\": \"In\",         \"values\": [           \"prod\",           \"staging\"         ]       }     ]   }   See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/   for more examples of label selectors.   Default to the empty LabelSelector, which matches everything.</li> <li>objectSelector <code>Optional[meta_v1.LabelSelector]</code> - ObjectSelector decides whether to run the webhook based on if the object has   matching labels. objectSelector is evaluated against both the oldObject and   newObject that would be sent to the webhook, and is considered to match if   either object matches the selector. A null object (oldObject in the case of   create, or newObject in the case of delete) or an object that cannot have   labels (like a DeploymentRollback or a PodProxyOptions object) is not   considered to match. Use the object selector only if the webhook is opt-in,   because end users may skip the admission webhook by setting the labels.   Default to the empty LabelSelector, which matches everything.</li> <li>reinvocationPolicy <code>Optional[str]</code> - reinvocationPolicy indicates whether this webhook should be called multiple   times as part of a single admission evaluation. Allowed values are \"Never\" and   \"IfNeeded\".   Never: the webhook will not be called more than once in a single admission   evaluation.   IfNeeded: the webhook will be called at least one additional time as part of   the admission evaluation if the object being admitted is modified by other   admission plugins after the initial webhook call. Webhooks that specify this   option must be idempotent, able to process objects they previously admitted.   Note: * the number of additional invocations is not guaranteed to be exactly   one. * if additional invocations result in further modifications to the   object, webhooks are not guaranteed to be invoked again. * webhooks that use   this option may be reordered to minimize the number of additional invocations.</li> <li>to validate an object after all mutations are guaranteed complete, use a   validating admission webhook instead.   Defaults to \"Never\".</li> <li>rules <code>Optional[List[RuleWithOperations]]</code> - Rules describes what operations on what resources/subresources the webhook   cares about. The webhook cares about an operation if it matches any Rule.   However, in order to prevent ValidatingAdmissionWebhooks and   MutatingAdmissionWebhooks from putting the cluster in a state which cannot be   recovered from without completely disabling the plugin,   ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on   admission requests for ValidatingWebhookConfiguration and   MutatingWebhookConfiguration objects.</li> <li>timeoutSeconds <code>Optional[int]</code> - TimeoutSeconds specifies the timeout for this webhook. After the timeout   passes, the webhook call will be ignored or the API call will fail based on   the failure policy. The timeout value must be between 1 and 30 seconds.   Default to 10 seconds.</li> </ul>"},{"location":"models/admissionregistration_v1/#mutatingwebhookconfiguration","title":"MutatingWebhookConfiguration","text":"class <code>lightkube.models.admissionregistration_v1.MutatingWebhookConfiguration</code>(apiVersion=None, kind=None, metadata=None, webhooks=None) <p>MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>webhooks <code>Optional[List[MutatingWebhook]]</code> - Webhooks is a list of webhooks and the affected resources and operations.</li> </ul>"},{"location":"models/admissionregistration_v1/#mutatingwebhookconfigurationlist","title":"MutatingWebhookConfigurationList","text":"class <code>lightkube.models.admissionregistration_v1.MutatingWebhookConfigurationList</code>(items, apiVersion=None, kind=None, metadata=None) <p>MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.</p> <p>parameters</p> <ul> <li>items <code>MutatingWebhookConfiguration</code> - List of MutatingWebhookConfiguration.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1/#rulewithoperations","title":"RuleWithOperations","text":"class <code>lightkube.models.admissionregistration_v1.RuleWithOperations</code>(apiGroups=None, apiVersions=None, operations=None, resources=None, scope=None) <p>RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.</p> <p>parameters</p> <ul> <li>apiGroups <code>Optional[List[str]]</code> - APIGroups is the API groups the resources belong to. '' is all groups. If ''   is present, the length of the slice must be one. Required.</li> <li>apiVersions <code>Optional[List[str]]</code> - APIVersions is the API versions the resources belong to. '' is all versions.   If '' is present, the length of the slice must be one. Required.</li> <li>operations <code>Optional[List[str]]</code> - Operations is the operations the admission hook cares about - CREATE, UPDATE,   DELETE, CONNECT or * for all of those operations and any future admission   operations that are added. If '' is present, the length of the slice must be   one. Required. <li>resources <code>Optional[List[str]]</code> - Resources is a list of resources this rule applies to.   For example: 'pods' means pods. 'pods/log' means the log subresource of pods.   '' means all resources, but not subresources. 'pods/' means all subresources   of pods. '/scale' means all scale subresources. '/' means all resources and   their subresources.   If wildcard is present, the validation rule will ensure resources do not   overlap with each other.   Depending on the enclosing object, subresources might not be allowed.   Required.</li> <li>scope <code>Optional[str]</code> - scope specifies the scope of this rule. Valid values are \"Cluster\",   \"Namespaced\", and \"\" \"Cluster\" means that only cluster-scoped resources will   match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means   that only namespaced resources will match this rule. \"\" means that there are   no scope restrictions. Subresources match the scope of their parent resource.   Default is \"*\".</li>"},{"location":"models/admissionregistration_v1/#servicereference","title":"ServiceReference","text":"class <code>lightkube.models.admissionregistration_v1.ServiceReference</code>(name, namespace, path=None, port=None) <p>ServiceReference holds a reference to Service.legacy.k8s.io</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the name of the service. Required</li> <li>namespace <code>str</code> - <code>namespace</code> is the namespace of the service. Required</li> <li>path <code>Optional[str]</code> - <code>path</code> is an optional URL path which will be sent in any request to this   service.</li> <li>port <code>Optional[int]</code> - If specified, the port on the service that hosting webhook. Default to 443 for   backward compatibility. <code>port</code> should be a valid port number (1-65535,   inclusive).</li> </ul>"},{"location":"models/admissionregistration_v1/#validatingwebhook","title":"ValidatingWebhook","text":"class <code>lightkube.models.admissionregistration_v1.ValidatingWebhook</code>(admissionReviewVersions, clientConfig, name, sideEffects, failurePolicy=None, matchConditions=None, matchPolicy=None, namespaceSelector=None, objectSelector=None, rules=None, timeoutSeconds=None) <p>ValidatingWebhook describes an admission webhook and the resources and operations it applies to.</p> <p>parameters</p> <ul> <li>admissionReviewVersions <code>List[str]</code> - AdmissionReviewVersions is an ordered list of preferred <code>AdmissionReview</code>   versions the Webhook expects. API server will try to use first version in the   list which it supports. If none of the versions specified in this list   supported by API server, validation will fail for this object. If a persisted   webhook configuration specifies allowed versions and does not include any   versions known to the API Server, calls to the webhook will fail and be   subject to the failure policy.</li> <li>clientConfig <code>WebhookClientConfig</code> - ClientConfig defines how to communicate with the hook. Required</li> <li>name <code>str</code> - The name of the admission webhook. Name should be fully qualified, e.g.,   imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and   kubernetes.io is the name of the organization. Required.</li> <li>sideEffects <code>str</code> - SideEffects states whether this webhook has side effects. Acceptable values   are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or   Unknown). Webhooks with side effects MUST implement a reconciliation system,   since a request may be rejected by a future step in the admission chain and   the side effects therefore need to be undone. Requests with the dryRun   attribute will be auto-rejected if they match a webhook with sideEffects ==   Unknown or Some.</li> <li>failurePolicy <code>Optional[str]</code> - FailurePolicy defines how unrecognized errors from the admission endpoint are   handled - allowed values are Ignore or Fail. Defaults to Fail.</li> <li>matchConditions <code>Optional[List[MatchCondition]]</code> - MatchConditions is a list of conditions that must be met for a request to be   sent to this webhook. Match conditions filter requests that have already been   matched by the rules, namespaceSelector, and objectSelector. An empty list of   matchConditions matches all requests. There are a maximum of 64 match   conditions allowed.   The exact matching logic is (in order):<ol> <li>If ANY matchCondition evaluates to FALSE, the webhook is skipped.</li> <li>If ALL matchConditions evaluate to TRUE, the webhook is called.</li> <li>If any matchCondition evaluates to an error (but none are FALSE):</li> <li>If failurePolicy=Fail, reject the request</li> <li>If failurePolicy=Ignore, the error is ignored and the webhook is   skipped   This is a beta feature and managed by the AdmissionWebhookMatchConditions   feature gate.</li> </ol> </li> <li>matchPolicy <code>Optional[str]</code> - matchPolicy defines how the \"rules\" list is used to match incoming requests.   Allowed values are \"Exact\" or \"Equivalent\".</li> <li>Exact: match a request only if it exactly matches a specified rule. For   example, if deployments can be modified via apps/v1, apps/v1beta1, and   extensions/v1beta1, but \"rules\" only included <code>apiGroups:[\"apps\"],   apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a request to apps/v1beta1 or   extensions/v1beta1 would not be sent to the webhook.</li> <li>Equivalent: match a request if modifies a resource listed in rules, even via   another API group or version. For example, if deployments can be modified via   apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included   <code>apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a   request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1   and sent to the webhook.   Defaults to \"Equivalent\"</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - NamespaceSelector decides whether to run the webhook on an object based on   whether the namespace for that object matches the selector. If the object   itself is a namespace, the matching is performed on object.metadata.labels. If   the object is another cluster scoped resource, it never skips the webhook.   For example, to run the webhook on any objects whose namespace is not   associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as   follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"runlevel\",         \"operator\": \"NotIn\",         \"values\": [           \"0\",           \"1\"         ]       }     ]   }   If instead you want to only run the webhook on any objects whose namespace is   associated with the \"environment\" of \"prod\" or \"staging\"; you will set the   selector as follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"environment\",         \"operator\": \"In\",         \"values\": [           \"prod\",           \"staging\"         ]       }     ]   }   See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels   for more examples of label selectors.   Default to the empty LabelSelector, which matches everything.</li> <li>objectSelector <code>Optional[meta_v1.LabelSelector]</code> - ObjectSelector decides whether to run the webhook based on if the object has   matching labels. objectSelector is evaluated against both the oldObject and   newObject that would be sent to the webhook, and is considered to match if   either object matches the selector. A null object (oldObject in the case of   create, or newObject in the case of delete) or an object that cannot have   labels (like a DeploymentRollback or a PodProxyOptions object) is not   considered to match. Use the object selector only if the webhook is opt-in,   because end users may skip the admission webhook by setting the labels.   Default to the empty LabelSelector, which matches everything.</li> <li>rules <code>Optional[List[RuleWithOperations]]</code> - Rules describes what operations on what resources/subresources the webhook   cares about. The webhook cares about an operation if it matches any Rule.   However, in order to prevent ValidatingAdmissionWebhooks and   MutatingAdmissionWebhooks from putting the cluster in a state which cannot be   recovered from without completely disabling the plugin,   ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on   admission requests for ValidatingWebhookConfiguration and   MutatingWebhookConfiguration objects.</li> <li>timeoutSeconds <code>Optional[int]</code> - TimeoutSeconds specifies the timeout for this webhook. After the timeout   passes, the webhook call will be ignored or the API call will fail based on   the failure policy. The timeout value must be between 1 and 30 seconds.   Default to 10 seconds.</li> </ul>"},{"location":"models/admissionregistration_v1/#validatingwebhookconfiguration","title":"ValidatingWebhookConfiguration","text":"class <code>lightkube.models.admissionregistration_v1.ValidatingWebhookConfiguration</code>(apiVersion=None, kind=None, metadata=None, webhooks=None) <p>ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>webhooks <code>Optional[List[ValidatingWebhook]]</code> - Webhooks is a list of webhooks and the affected resources and operations.</li> </ul>"},{"location":"models/admissionregistration_v1/#validatingwebhookconfigurationlist","title":"ValidatingWebhookConfigurationList","text":"class <code>lightkube.models.admissionregistration_v1.ValidatingWebhookConfigurationList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.</p> <p>parameters</p> <ul> <li>items <code>ValidatingWebhookConfiguration</code> - List of ValidatingWebhookConfiguration.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1/#webhookclientconfig","title":"WebhookClientConfig","text":"class <code>lightkube.models.admissionregistration_v1.WebhookClientConfig</code>(caBundle=None, service=None, url=None) <p>WebhookClientConfig contains the information to make a TLS connection with the webhook</p> <p>parameters</p> <ul> <li>caBundle <code>Optional[str]</code> - <code>caBundle</code> is a PEM encoded CA bundle which will be used to validate the   webhook's server certificate. If unspecified, system trust roots on the   apiserver are used.</li> <li>service <code>Optional[ServiceReference]</code> - <code>service</code> is a reference to the service for this webhook. Either <code>service</code> or   <code>url</code> must be specified.   If the webhook is running within the cluster, then you should use <code>service</code>.</li> <li>url <code>Optional[str]</code> - <code>url</code> gives the location of the webhook, in standard URL form   (<code>scheme://host:port/path</code>). Exactly one of <code>url</code> or <code>service</code> must be   specified.   The <code>host</code> should not refer to a service running in the cluster; use the   <code>service</code> field instead. The host might be resolved via external DNS in some   apiservers (e.g., <code>kube-apiserver</code> cannot resolve in-cluster DNS as that would   be a layering violation). <code>host</code> may also be an IP address.   Please note that using <code>localhost</code> or <code>127.0.0.1</code> as a <code>host</code> is risky unless   you take great care to run this webhook on all hosts which run an apiserver   which might need to make calls to this webhook. Such installs are likely to be   non-portable, i.e., not easy to turn up in a new cluster.   The scheme must be \"https\"; the URL must begin with \"https://\".   A path is optional, and if present may be any string permissible in a URL. You   may use the path to pass an arbitrary string to the webhook, for example, a   cluster identifier.   Attempting to use a user or basic auth e.g. \"user:password@\" is not allowed.   Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/","title":"admissionregistration_v1alpha1","text":""},{"location":"models/admissionregistration_v1alpha1/#auditannotation","title":"AuditAnnotation","text":"class <code>lightkube.models.admissionregistration_v1alpha1.AuditAnnotation</code>(key, valueExpression) <p>AuditAnnotation describes how to produce an audit annotation for an API request.</p> <p>parameters</p> <ul> <li>key <code>str</code> - key specifies the audit annotation key. The audit annotation keys of a   ValidatingAdmissionPolicy must be unique. The key must be a qualified name   ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.   The key is combined with the resource name of the ValidatingAdmissionPolicy to   construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".   If an admission webhook uses the same resource name as this   ValidatingAdmissionPolicy and the same audit annotation key, the annotation   key will be identical. In this case, the first annotation written with the key   will be included in the audit event and all subsequent annotations with the   same key will be discarded.   Required.</li> <li>valueExpression <code>str</code> - valueExpression represents the expression which is evaluated by CEL to produce   an audit annotation value. The expression must evaluate to either a string or   null value. If the expression evaluates to a string, the audit annotation is   included with the string value. If the expression evaluates to null or empty   string the audit annotation will be omitted. The valueExpression may be no   longer than 5kb in length. If the result of the valueExpression is more than   10kb in length, it will be truncated to 10kb.   If multiple ValidatingAdmissionPolicyBinding resources match an API request,   then the valueExpression will be evaluated for each binding. All unique values   produced by the valueExpressions will be joined together in a comma-separated   list.   Required.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#expressionwarning","title":"ExpressionWarning","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ExpressionWarning</code>(fieldRef, warning) <p>ExpressionWarning is a warning information that targets a specific expression.</p> <p>parameters</p> <ul> <li>fieldRef <code>str</code> - The path to the field that refers the expression. For example, the reference   to the expression of the first item of validations is   \"spec.validations[0].expression\"</li> <li>warning <code>str</code> - The content of type checking information in a human-readable form. Each line   of the warning contains the type that the expression is checked against,   followed by the type check error from the compiler.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#matchcondition","title":"MatchCondition","text":"class <code>lightkube.models.admissionregistration_v1alpha1.MatchCondition</code>(expression, name) <p>parameters</p> <ul> <li>expression <code>str</code> - Expression represents the expression which will be evaluated by CEL. Must   evaluate to bool. CEL expressions have access to the contents of the   AdmissionRequest and Authorizer, organized into CEL variables:   'object' - The object from the incoming request. The value is null for DELETE   requests. 'oldObject' - The existing object. The value is null for CREATE   requests. 'request' - Attributes of the admission   request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL   Authorizer. May be used to perform authorization checks for the principal   (user or service account) of the request.     See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz   'authorizer.requestResource' - A CEL ResourceCheck constructed from the   'authorizer' and configured with the     request resource.   Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/   Required.</li> <li>name <code>str</code> - Name is an identifier for this match condition, used for strategic merging of   MatchConditions, as well as providing an identifier for logging purposes. A   good name should be descriptive of the associated expression. Name must be a   qualified name consisting of alphanumeric characters, '-', '' or '.', and   must start and end with an alphanumeric character (e.g. 'MyName',  or   'my.name',  or '123-abc', regex used for validation is   '([A-Za-z0-9][-A-Za-z0-9.]*)?[A-Za-z0-9]') with an optional DNS subdomain   prefix and '/' (e.g. 'example.com/MyName')   Required.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#matchresources","title":"MatchResources","text":"class <code>lightkube.models.admissionregistration_v1alpha1.MatchResources</code>(excludeResourceRules=None, matchPolicy=None, namespaceSelector=None, objectSelector=None, resourceRules=None) <p>MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)</p> <p>parameters</p> <ul> <li>excludeResourceRules <code>Optional[List[NamedRuleWithOperations]]</code> - ExcludeResourceRules describes what operations on what resources/subresources   the ValidatingAdmissionPolicy should not care about. The exclude rules take   precedence over include rules (if a resource matches both, it is excluded)</li> <li>matchPolicy <code>Optional[str]</code> - matchPolicy defines how the \"MatchResources\" list is used to match incoming   requests. Allowed values are \"Exact\" or \"Equivalent\".</li> <li>Exact: match a request only if it exactly matches a specified rule. For   example, if deployments can be modified via apps/v1, apps/v1beta1, and   extensions/v1beta1, but \"rules\" only included <code>apiGroups:[\"apps\"],   apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a request to apps/v1beta1 or   extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.</li> <li>Equivalent: match a request if modifies a resource listed in rules, even via   another API group or version. For example, if deployments can be modified via   apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included   <code>apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a   request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1   and sent to the ValidatingAdmissionPolicy.   Defaults to \"Equivalent\"</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - NamespaceSelector decides whether to run the admission control policy on an   object based on whether the namespace for that object matches the selector. If   the object itself is a namespace, the matching is performed on   object.metadata.labels. If the object is another cluster scoped resource, it   never skips the policy.   For example, to run the webhook on any objects whose namespace is not   associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as   follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"runlevel\",         \"operator\": \"NotIn\",         \"values\": [           \"0\",           \"1\"         ]       }     ]   }   If instead you want to only run the policy on any objects whose namespace is   associated with the \"environment\" of \"prod\" or \"staging\"; you will set the   selector as follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"environment\",         \"operator\": \"In\",         \"values\": [           \"prod\",           \"staging\"         ]       }     ]   }   See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/   for more examples of label selectors.   Default to the empty LabelSelector, which matches everything.</li> <li>objectSelector <code>Optional[meta_v1.LabelSelector]</code> - ObjectSelector decides whether to run the validation based on if the object   has matching labels. objectSelector is evaluated against both the oldObject   and newObject that would be sent to the cel validation, and is considered to   match if either object matches the selector. A null object (oldObject in the   case of create, or newObject in the case of delete) or an object that cannot   have labels (like a DeploymentRollback or a PodProxyOptions object) is not   considered to match. Use the object selector only if the webhook is opt-in,   because end users may skip the admission webhook by setting the labels.   Default to the empty LabelSelector, which matches everything.</li> <li>resourceRules <code>Optional[List[NamedRuleWithOperations]]</code> - ResourceRules describes what operations on what resources/subresources the   ValidatingAdmissionPolicy matches. The policy cares about an operation if it   matches any Rule.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#namedrulewithoperations","title":"NamedRuleWithOperations","text":"class <code>lightkube.models.admissionregistration_v1alpha1.NamedRuleWithOperations</code>(apiGroups=None, apiVersions=None, operations=None, resourceNames=None, resources=None, scope=None) <p>NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.</p> <p>parameters</p> <ul> <li>apiGroups <code>Optional[List[str]]</code> - APIGroups is the API groups the resources belong to. '' is all groups. If ''   is present, the length of the slice must be one. Required.</li> <li>apiVersions <code>Optional[List[str]]</code> - APIVersions is the API versions the resources belong to. '' is all versions.   If '' is present, the length of the slice must be one. Required.</li> <li>operations <code>Optional[List[str]]</code> - Operations is the operations the admission hook cares about - CREATE, UPDATE,   DELETE, CONNECT or * for all of those operations and any future admission   operations that are added. If '' is present, the length of the slice must be   one. Required. <li>resourceNames <code>Optional[List[str]]</code> - ResourceNames is an optional white list of names that the rule applies to.  An   empty set means that everything is allowed.</li> <li>resources <code>Optional[List[str]]</code> - Resources is a list of resources this rule applies to.   For example: 'pods' means pods. 'pods/log' means the log subresource of pods.   '' means all resources, but not subresources. 'pods/' means all subresources   of pods. '/scale' means all scale subresources. '/' means all resources and   their subresources.   If wildcard is present, the validation rule will ensure resources do not   overlap with each other.   Depending on the enclosing object, subresources might not be allowed.   Required.</li> <li>scope <code>Optional[str]</code> - scope specifies the scope of this rule. Valid values are \"Cluster\",   \"Namespaced\", and \"\" \"Cluster\" means that only cluster-scoped resources will   match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means   that only namespaced resources will match this rule. \"\" means that there are   no scope restrictions. Subresources match the scope of their parent resource.   Default is \"*\".</li>"},{"location":"models/admissionregistration_v1alpha1/#paramkind","title":"ParamKind","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ParamKind</code>(apiVersion=None, kind=None) <p>ParamKind is a tuple of Group Kind and Version.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion is the API group version the resources belong to. In format of   \"group/version\". Required.</li> <li>kind <code>Optional[str]</code> - Kind is the API kind the resources belong to. Required.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#paramref","title":"ParamRef","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ParamRef</code>(name=None, namespace=None, parameterNotFoundAction=None, selector=None) <p>ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - <code>name</code> is the name of the resource being referenced.   <code>name</code> and <code>selector</code> are mutually exclusive properties. If one is set, the   other must be unset.</li> <li>namespace <code>Optional[str]</code> - namespace is the namespace of the referenced resource. Allows limiting the   search for params to a specific namespace. Applies to both <code>name</code> and   <code>selector</code> fields.   A per-namespace parameter may be used by specifying a namespace-scoped   <code>paramKind</code> in the policy and leaving this field empty.</li> <li>If <code>paramKind</code> is cluster-scoped, this field MUST be unset. Setting this   field results in a configuration error.</li> <li>If <code>paramKind</code> is namespace-scoped, the namespace of the object being   evaluated for admission will be used when this field is left unset. Take care   that if this is left empty the binding must not match any cluster-scoped   resources, which will result in an error.</li> <li>parameterNotFoundAction <code>Optional[str]</code> - <code>parameterNotFoundAction</code> controls the behavior of the binding when the   resource exists, and name or selector is valid, but there are no parameters   matched by the binding. If the value is set to <code>Allow</code>, then no matched   parameters will be treated as successful validation by the binding. If set to   <code>Deny</code>, then no matched parameters will be subject to the <code>failurePolicy</code> of   the policy.   Allowed values are <code>Allow</code> or <code>Deny</code> Default to <code>Deny</code></li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - selector can be used to match multiple param objects based on their labels.   Supply selector: {} to match all resources of the ParamKind.   If multiple params are found, they are all evaluated with the policy   expressions and the results are ANDed together.   One of <code>name</code> or <code>selector</code> must be set, but <code>name</code> and <code>selector</code> are   mutually exclusive properties. If one is set, the other must be unset.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#typechecking","title":"TypeChecking","text":"class <code>lightkube.models.admissionregistration_v1alpha1.TypeChecking</code>(expressionWarnings=None) <p>TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy</p> <p>parameters</p> <ul> <li>expressionWarnings <code>Optional[List[ExpressionWarning]]</code> - The type checking warnings for each expression.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicy","title":"ValidatingAdmissionPolicy","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>spec <code>Optional[ValidatingAdmissionPolicySpec]</code> - Specification of the desired behavior of the ValidatingAdmissionPolicy.</li> <li>status <code>Optional[ValidatingAdmissionPolicyStatus]</code> - The status of the ValidatingAdmissionPolicy, including warnings that are   useful to determine if the policy behaves in the expected way. Populated by   the system. Read-only.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicybinding","title":"ValidatingAdmissionPolicyBinding","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyBinding</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.</p> <p>For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.</p> <p>The CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>spec <code>Optional[ValidatingAdmissionPolicyBindingSpec]</code> - Specification of the desired behavior of the ValidatingAdmissionPolicyBinding.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicybindinglist","title":"ValidatingAdmissionPolicyBindingList","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyBindingList</code>(apiVersion=None, items=None, kind=None, metadata=None) <p>ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>items <code>Optional[List[ValidatingAdmissionPolicyBinding]]</code> - List of PolicyBinding.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicybindingspec","title":"ValidatingAdmissionPolicyBindingSpec","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyBindingSpec</code>(matchResources=None, paramRef=None, policyName=None, validationActions=None) <p>ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.</p> <p>parameters</p> <ul> <li>matchResources <code>Optional[MatchResources]</code> - MatchResources declares what resources match this binding and will be   validated by it. Note that this is intersected with the policy's   matchConstraints, so only requests that are matched by the policy can be   selected by this. If this is unset, all resources matched by the policy are   validated by this binding When resourceRules is unset, it does not constrain   resource matching. If a resource is matched by the other fields of this   object, it will be validated. Note that this is differs from   ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.</li> <li>paramRef <code>Optional[ParamRef]</code> - paramRef specifies the parameter resource used to configure the admission   control policy. It should point to a resource of the type specified in   ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a   ParamKind and the resource referred to by ParamRef does not exist, this   binding is considered mis-configured and the FailurePolicy of the   ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind   then this field is ignored, and the rules are evaluated without a param.</li> <li>policyName <code>Optional[str]</code> - PolicyName references a ValidatingAdmissionPolicy name which the   ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not   exist, this binding is considered invalid and will be ignored Required.</li> <li>validationActions <code>Optional[List[str]]</code> - validationActions declares how Validations of the referenced   ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it   is always enforced according to these actions.   Failures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced   according to these actions only if the FailurePolicy is set to Fail, otherwise   the failures are ignored. This includes compilation errors, runtime errors and   misconfigurations of the policy.   validationActions is declared as a set of action values. Order does not   matter. validationActions may not contain duplicates of the same action.   The supported actions values are:   \"Deny\" specifies that a validation failure results in a denied request.   \"Warn\" specifies that a validation failure is reported to the request client   in HTTP Warning headers, with a warning code of 299. Warnings can be sent both   for allowed or denied admission responses.   \"Audit\" specifies that a validation failure is included in the published audit   event for the request. The audit event will contain a   <code>validation.policy.admission.k8s.io/validation_failure</code> audit annotation with   a value containing the details of the validation failures, formatted as a JSON   list of objects, each with the following fields: - message: The validation   failure message string - policy: The resource name of the   ValidatingAdmissionPolicy - binding: The resource name of the   ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed   validations in the ValidatingAdmissionPolicy - validationActions: The   enforcement actions enacted for the validation failure Example audit   annotation: <code>\"validation.policy.admission.k8s.io/validation_failure\":   \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\":   \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\":   [\"Audit\"]}]\"</code>   Clients should expect to handle additional values by ignoring any values not   recognized.   \"Deny\" and \"Warn\" may not be used together since this combination needlessly   duplicates the validation failure both in the API response body and the HTTP   warning headers.   Required.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicylist","title":"ValidatingAdmissionPolicyList","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyList</code>(apiVersion=None, items=None, kind=None, metadata=None) <p>ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>items <code>Optional[List[ValidatingAdmissionPolicy]]</code> - List of ValidatingAdmissionPolicy.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicyspec","title":"ValidatingAdmissionPolicySpec","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicySpec</code>(auditAnnotations=None, failurePolicy=None, matchConditions=None, matchConstraints=None, paramKind=None, validations=None, variables=None) <p>ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.</p> <p>parameters</p> <ul> <li>auditAnnotations <code>Optional[List[AuditAnnotation]]</code> - auditAnnotations contains CEL expressions which are used to produce audit   annotations for the audit event of the API request. validations and   auditAnnotations may not both be empty; a least one of validations or   auditAnnotations is required.</li> <li>failurePolicy <code>Optional[str]</code> - failurePolicy defines how to handle failures for the admission policy.   Failures can occur from CEL expression parse errors, type check errors,   runtime errors and invalid or mis-configured policy definitions or bindings.   A policy is invalid if spec.paramKind refers to a non-existent Kind. A binding   is invalid if spec.paramRef.name refers to a non-existent resource.   failurePolicy does not define how validations that evaluate to false are   handled.   When failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding   validationActions define how failures are enforced.   Allowed values are Ignore or Fail. Defaults to Fail.</li> <li>matchConditions <code>Optional[List[MatchCondition]]</code> - MatchConditions is a list of conditions that must be met for a request to be   validated. Match conditions filter requests that have already been matched by   the rules, namespaceSelector, and objectSelector. An empty list of   matchConditions matches all requests. There are a maximum of 64 match   conditions allowed.   If a parameter object is provided, it can be accessed via the <code>params</code> handle   in the same manner as validation expressions.   The exact matching logic is (in order):<ol> <li>If ANY matchCondition evaluates to FALSE, the policy is skipped.</li> <li>If ALL matchConditions evaluate to TRUE, the policy is evaluated.</li> <li>If any matchCondition evaluates to an error (but none are FALSE):</li> <li>If failurePolicy=Fail, reject the request</li> <li>If failurePolicy=Ignore, the policy is skipped</li> </ol> </li> <li>matchConstraints <code>Optional[MatchResources]</code> - MatchConstraints specifies what resources this policy is designed to validate.   The AdmissionPolicy cares about a request if it matches all Constraints.   However, in order to prevent clusters from being put into an unstable state   that cannot be recovered from via the API ValidatingAdmissionPolicy cannot   match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding.   Required.</li> <li>paramKind <code>Optional[ParamKind]</code> - ParamKind specifies the kind of resources used to parameterize this policy. If   absent, there are no parameters for this policy and the param CEL variable   will not be provided to validation expressions. If ParamKind refers to a   non-existent kind, this policy definition is mis-configured and the   FailurePolicy is applied. If paramKind is specified but paramRef is unset in   ValidatingAdmissionPolicyBinding, the params variable will be null.</li> <li>validations <code>Optional[List[Validation]]</code> - Validations contain CEL expressions which is used to apply the validation.   Validations and AuditAnnotations may not both be empty; a minimum of one   Validations or AuditAnnotations is required.</li> <li>variables <code>Optional[List[Variable]]</code> - Variables contain definitions of variables that can be used in composition of   other expressions. Each variable is defined as a named CEL expression. The   variables defined here will be available under <code>variables</code> in other   expressions of the policy except MatchConditions because MatchConditions are   evaluated before the rest of the policy.   The expression of a variable can refer to other variables defined earlier in   the list but not those after. Thus, Variables must be sorted by the order of   first appearance and acyclic.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validatingadmissionpolicystatus","title":"ValidatingAdmissionPolicyStatus","text":"class <code>lightkube.models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyStatus</code>(conditions=None, observedGeneration=None, typeChecking=None) <p>ValidatingAdmissionPolicyStatus represents the status of a ValidatingAdmissionPolicy.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[meta_v1.Condition]]</code> - The conditions represent the latest available observations of a policy's   current state.</li> <li>observedGeneration <code>Optional[int]</code> - The generation observed by the controller.</li> <li>typeChecking <code>Optional[TypeChecking]</code> - The results of type checking for each expression. Presence of this field   indicates the completion of the type checking.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#validation","title":"Validation","text":"class <code>lightkube.models.admissionregistration_v1alpha1.Validation</code>(expression, message=None, messageExpression=None, reason=None) <p>Validation specifies the CEL expression which is used to apply the validation.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression represents the expression which will be evaluated by CEL. ref:   https://github.com/google/cel-spec CEL expressions have access to the contents   of the API request/response, organized into CEL variables as well as some   other useful variables:</li> <li>'object' - The object from the incoming request. The value is null for   DELETE requests. - 'oldObject' - The existing object. The value is null for   CREATE requests. - 'request' - Attributes of the API   request(ref). - 'params' -   Parameter resource referred to by the policy binding being evaluated. Only   populated if the policy has a ParamKind. - 'namespaceObject' - The namespace   object that the incoming object belongs to. The value is null for   cluster-scoped resources. - 'variables' - Map of composited variables, from   its name to its lazily evaluated value.     For example, a variable named 'foo' can be accessed as 'variables.foo'.</li> <li>'authorizer' - A CEL Authorizer. May be used to perform authorization checks   for the principal (user or service account) of the request.     See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz</li> <li>'authorizer.requestResource' - A CEL ResourceCheck constructed from the   'authorizer' and configured with the     request resource.   The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are   always accessible from the root of the object. No other metadata properties   are accessible.   Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible.   Accessible property names are escaped according to the following rules when   accessed in the expression: - '' escapes to '__underscores' - '.' escapes   to 'dot' - '-' escapes to 'dash' - '/' escapes to 'slash' -   Property names that exactly match a CEL RESERVED keyword escape to   '{keyword}'. The keywords are:             \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\",   \"for\", \"function\", \"if\",             \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".   Examples:<ul> <li>Expression accessing a property named \"namespace\": {\"Expression\":   \"object.namespace &gt; 0\"}</li> <li>Expression accessing a property named \"x-prop\": {\"Expression\":   \"object.x__dash__prop &gt; 0\"}</li> <li>Expression accessing a property named \"redact__d\": {\"Expression\":   \"object.redact__underscores__d &gt; 0\"}   Equality on arrays with list type of 'set' or 'map' ignores element order,   i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use   the semantics of the list type:</li> <li>'set': <code>X + Y</code> performs a union where the array positions of all elements   in <code>X</code> are preserved and   non-intersecting elements in <code>Y</code> are appended, retaining their partial   order.</li> <li>'map': <code>X + Y</code> performs a merge where the array positions of all keys in   <code>X</code> are preserved but the values   are overwritten by values in <code>Y</code> when the key sets of <code>X</code> and <code>Y</code>   intersect. Elements in <code>Y</code> with   non-intersecting keys are appended, retaining their partial order.   Required.</li> </ul> </li> <li>message <code>Optional[str]</code> - Message represents the message displayed when validation fails. The message is   required if the Expression contains line breaks. The message must not contain   line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a   URL with the host matching spec.host\" If the Expression contains line breaks.   Message is required. The message must not contain line breaks. If unset, the   message is \"failed Expression: {Expression}\".</li> <li>messageExpression <code>Optional[str]</code> - messageExpression declares a CEL expression that evaluates to the validation   failure message that is returned when this rule fails. Since messageExpression   is used as a failure message, it must evaluate to a string. If both message   and messageExpression are present on a validation, then messageExpression will   be used if validation fails. If messageExpression results in a runtime error,   the runtime error is logged, and the validation failure message is produced as   if the messageExpression field were unset. If messageExpression evaluates to   an empty string, a string with only spaces, or a string that contains line   breaks, then the validation failure message will also be produced as if the   messageExpression field were unset, and the fact that messageExpression   produced an empty string/string with only spaces/string with line breaks will   be logged. messageExpression has access to all the same variables as the   <code>expression</code> except for 'authorizer' and 'authorizer.requestResource'.   Example: \"object.x must be less than max (\"+string(params.max)+\")\"</li> <li>reason <code>Optional[str]</code> - Reason represents a machine-readable description of why this validation   failed. If this is the first validation in the list to fail, this reason, as   well as the corresponding HTTP response code, are used in the HTTP response to   the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\",   \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in   the response to the client.</li> </ul>"},{"location":"models/admissionregistration_v1alpha1/#variable","title":"Variable","text":"class <code>lightkube.models.admissionregistration_v1alpha1.Variable</code>(expression, name) <p>Variable is the definition of a variable that is used for composition.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression is the expression that will be evaluated as the value of the   variable. The CEL expression has access to the same identifiers as the CEL   expressions in Validation.</li> <li>name <code>str</code> - Name is the name of the variable. The name must be a valid CEL identifier and   unique among all variables. The variable can be accessed in other expressions   through <code>variables</code> For example, if name is \"foo\", the variable will be   available as <code>variables.foo</code></li> </ul>"},{"location":"models/admissionregistration_v1beta1/","title":"admissionregistration_v1beta1","text":""},{"location":"models/admissionregistration_v1beta1/#auditannotation","title":"AuditAnnotation","text":"class <code>lightkube.models.admissionregistration_v1beta1.AuditAnnotation</code>(key, valueExpression) <p>AuditAnnotation describes how to produce an audit annotation for an API request.</p> <p>parameters</p> <ul> <li>key <code>str</code> - key specifies the audit annotation key. The audit annotation keys of a   ValidatingAdmissionPolicy must be unique. The key must be a qualified name   ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.   The key is combined with the resource name of the ValidatingAdmissionPolicy to   construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".   If an admission webhook uses the same resource name as this   ValidatingAdmissionPolicy and the same audit annotation key, the annotation   key will be identical. In this case, the first annotation written with the key   will be included in the audit event and all subsequent annotations with the   same key will be discarded.   Required.</li> <li>valueExpression <code>str</code> - valueExpression represents the expression which is evaluated by CEL to produce   an audit annotation value. The expression must evaluate to either a string or   null value. If the expression evaluates to a string, the audit annotation is   included with the string value. If the expression evaluates to null or empty   string the audit annotation will be omitted. The valueExpression may be no   longer than 5kb in length. If the result of the valueExpression is more than   10kb in length, it will be truncated to 10kb.   If multiple ValidatingAdmissionPolicyBinding resources match an API request,   then the valueExpression will be evaluated for each binding. All unique values   produced by the valueExpressions will be joined together in a comma-separated   list.   Required.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#expressionwarning","title":"ExpressionWarning","text":"class <code>lightkube.models.admissionregistration_v1beta1.ExpressionWarning</code>(fieldRef, warning) <p>ExpressionWarning is a warning information that targets a specific expression.</p> <p>parameters</p> <ul> <li>fieldRef <code>str</code> - The path to the field that refers the expression. For example, the reference   to the expression of the first item of validations is   \"spec.validations[0].expression\"</li> <li>warning <code>str</code> - The content of type checking information in a human-readable form. Each line   of the warning contains the type that the expression is checked against,   followed by the type check error from the compiler.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#matchcondition","title":"MatchCondition","text":"class <code>lightkube.models.admissionregistration_v1beta1.MatchCondition</code>(expression, name) <p>MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression represents the expression which will be evaluated by CEL. Must   evaluate to bool. CEL expressions have access to the contents of the   AdmissionRequest and Authorizer, organized into CEL variables:   'object' - The object from the incoming request. The value is null for DELETE   requests. 'oldObject' - The existing object. The value is null for CREATE   requests. 'request' - Attributes of the admission   request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL   Authorizer. May be used to perform authorization checks for the principal   (user or service account) of the request.     See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz   'authorizer.requestResource' - A CEL ResourceCheck constructed from the   'authorizer' and configured with the     request resource.   Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/   Required.</li> <li>name <code>str</code> - Name is an identifier for this match condition, used for strategic merging of   MatchConditions, as well as providing an identifier for logging purposes. A   good name should be descriptive of the associated expression. Name must be a   qualified name consisting of alphanumeric characters, '-', '' or '.', and   must start and end with an alphanumeric character (e.g. 'MyName',  or   'my.name',  or '123-abc', regex used for validation is   '([A-Za-z0-9][-A-Za-z0-9.]*)?[A-Za-z0-9]') with an optional DNS subdomain   prefix and '/' (e.g. 'example.com/MyName')   Required.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#matchresources","title":"MatchResources","text":"class <code>lightkube.models.admissionregistration_v1beta1.MatchResources</code>(excludeResourceRules=None, matchPolicy=None, namespaceSelector=None, objectSelector=None, resourceRules=None) <p>MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)</p> <p>parameters</p> <ul> <li>excludeResourceRules <code>Optional[List[NamedRuleWithOperations]]</code> - ExcludeResourceRules describes what operations on what resources/subresources   the ValidatingAdmissionPolicy should not care about. The exclude rules take   precedence over include rules (if a resource matches both, it is excluded)</li> <li>matchPolicy <code>Optional[str]</code> - matchPolicy defines how the \"MatchResources\" list is used to match incoming   requests. Allowed values are \"Exact\" or \"Equivalent\".</li> <li>Exact: match a request only if it exactly matches a specified rule. For   example, if deployments can be modified via apps/v1, apps/v1beta1, and   extensions/v1beta1, but \"rules\" only included <code>apiGroups:[\"apps\"],   apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a request to apps/v1beta1 or   extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.</li> <li>Equivalent: match a request if modifies a resource listed in rules, even via   another API group or version. For example, if deployments can be modified via   apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included   <code>apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]</code>, a   request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1   and sent to the ValidatingAdmissionPolicy.   Defaults to \"Equivalent\"</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - NamespaceSelector decides whether to run the admission control policy on an   object based on whether the namespace for that object matches the selector. If   the object itself is a namespace, the matching is performed on   object.metadata.labels. If the object is another cluster scoped resource, it   never skips the policy.   For example, to run the webhook on any objects whose namespace is not   associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as   follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"runlevel\",         \"operator\": \"NotIn\",         \"values\": [           \"0\",           \"1\"         ]       }     ]   }   If instead you want to only run the policy on any objects whose namespace is   associated with the \"environment\" of \"prod\" or \"staging\"; you will set the   selector as follows: \"namespaceSelector\": {     \"matchExpressions\": [       {         \"key\": \"environment\",         \"operator\": \"In\",         \"values\": [           \"prod\",           \"staging\"         ]       }     ]   }   See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/   for more examples of label selectors.   Default to the empty LabelSelector, which matches everything.</li> <li>objectSelector <code>Optional[meta_v1.LabelSelector]</code> - ObjectSelector decides whether to run the validation based on if the object   has matching labels. objectSelector is evaluated against both the oldObject   and newObject that would be sent to the cel validation, and is considered to   match if either object matches the selector. A null object (oldObject in the   case of create, or newObject in the case of delete) or an object that cannot   have labels (like a DeploymentRollback or a PodProxyOptions object) is not   considered to match. Use the object selector only if the webhook is opt-in,   because end users may skip the admission webhook by setting the labels.   Default to the empty LabelSelector, which matches everything.</li> <li>resourceRules <code>Optional[List[NamedRuleWithOperations]]</code> - ResourceRules describes what operations on what resources/subresources the   ValidatingAdmissionPolicy matches. The policy cares about an operation if it   matches any Rule.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#namedrulewithoperations","title":"NamedRuleWithOperations","text":"class <code>lightkube.models.admissionregistration_v1beta1.NamedRuleWithOperations</code>(apiGroups=None, apiVersions=None, operations=None, resourceNames=None, resources=None, scope=None) <p>NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.</p> <p>parameters</p> <ul> <li>apiGroups <code>Optional[List[str]]</code> - APIGroups is the API groups the resources belong to. '' is all groups. If ''   is present, the length of the slice must be one. Required.</li> <li>apiVersions <code>Optional[List[str]]</code> - APIVersions is the API versions the resources belong to. '' is all versions.   If '' is present, the length of the slice must be one. Required.</li> <li>operations <code>Optional[List[str]]</code> - Operations is the operations the admission hook cares about - CREATE, UPDATE,   DELETE, CONNECT or * for all of those operations and any future admission   operations that are added. If '' is present, the length of the slice must be   one. Required. <li>resourceNames <code>Optional[List[str]]</code> - ResourceNames is an optional white list of names that the rule applies to.  An   empty set means that everything is allowed.</li> <li>resources <code>Optional[List[str]]</code> - Resources is a list of resources this rule applies to.   For example: 'pods' means pods. 'pods/log' means the log subresource of pods.   '' means all resources, but not subresources. 'pods/' means all subresources   of pods. '/scale' means all scale subresources. '/' means all resources and   their subresources.   If wildcard is present, the validation rule will ensure resources do not   overlap with each other.   Depending on the enclosing object, subresources might not be allowed.   Required.</li> <li>scope <code>Optional[str]</code> - scope specifies the scope of this rule. Valid values are \"Cluster\",   \"Namespaced\", and \"\" \"Cluster\" means that only cluster-scoped resources will   match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means   that only namespaced resources will match this rule. \"\" means that there are   no scope restrictions. Subresources match the scope of their parent resource.   Default is \"*\".</li>"},{"location":"models/admissionregistration_v1beta1/#paramkind","title":"ParamKind","text":"class <code>lightkube.models.admissionregistration_v1beta1.ParamKind</code>(apiVersion=None, kind=None) <p>ParamKind is a tuple of Group Kind and Version.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion is the API group version the resources belong to. In format of   \"group/version\". Required.</li> <li>kind <code>Optional[str]</code> - Kind is the API kind the resources belong to. Required.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#paramref","title":"ParamRef","text":"class <code>lightkube.models.admissionregistration_v1beta1.ParamRef</code>(name=None, namespace=None, parameterNotFoundAction=None, selector=None) <p>ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - name is the name of the resource being referenced.   One of <code>name</code> or <code>selector</code> must be set, but <code>name</code> and <code>selector</code> are   mutually exclusive properties. If one is set, the other must be unset.   A single parameter used for all admission requests can be configured by   setting the <code>name</code> field, leaving <code>selector</code> blank, and setting namespace if   <code>paramKind</code> is namespace-scoped.</li> <li>namespace <code>Optional[str]</code> - namespace is the namespace of the referenced resource. Allows limiting the   search for params to a specific namespace. Applies to both <code>name</code> and   <code>selector</code> fields.   A per-namespace parameter may be used by specifying a namespace-scoped   <code>paramKind</code> in the policy and leaving this field empty.</li> <li>If <code>paramKind</code> is cluster-scoped, this field MUST be unset. Setting this   field results in a configuration error.</li> <li>If <code>paramKind</code> is namespace-scoped, the namespace of the object being   evaluated for admission will be used when this field is left unset. Take care   that if this is left empty the binding must not match any cluster-scoped   resources, which will result in an error.</li> <li>parameterNotFoundAction <code>Optional[str]</code> - <code>parameterNotFoundAction</code> controls the behavior of the binding when the   resource exists, and name or selector is valid, but there are no parameters   matched by the binding. If the value is set to <code>Allow</code>, then no matched   parameters will be treated as successful validation by the binding. If set to   <code>Deny</code>, then no matched parameters will be subject to the <code>failurePolicy</code> of   the policy.   Allowed values are <code>Allow</code> or <code>Deny</code>   Required</li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - selector can be used to match multiple param objects based on their labels.   Supply selector: {} to match all resources of the ParamKind.   If multiple params are found, they are all evaluated with the policy   expressions and the results are ANDed together.   One of <code>name</code> or <code>selector</code> must be set, but <code>name</code> and <code>selector</code> are   mutually exclusive properties. If one is set, the other must be unset.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#typechecking","title":"TypeChecking","text":"class <code>lightkube.models.admissionregistration_v1beta1.TypeChecking</code>(expressionWarnings=None) <p>TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy</p> <p>parameters</p> <ul> <li>expressionWarnings <code>Optional[List[ExpressionWarning]]</code> - The type checking warnings for each expression.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicy","title":"ValidatingAdmissionPolicy","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>spec <code>Optional[ValidatingAdmissionPolicySpec]</code> - Specification of the desired behavior of the ValidatingAdmissionPolicy.</li> <li>status <code>Optional[ValidatingAdmissionPolicyStatus]</code> - The status of the ValidatingAdmissionPolicy, including warnings that are   useful to determine if the policy behaves in the expected way. Populated by   the system. Read-only.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicybinding","title":"ValidatingAdmissionPolicyBinding","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicyBinding</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.</p> <p>For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.</p> <p>The CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>spec <code>Optional[ValidatingAdmissionPolicyBindingSpec]</code> - Specification of the desired behavior of the ValidatingAdmissionPolicyBinding.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicybindinglist","title":"ValidatingAdmissionPolicyBindingList","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicyBindingList</code>(apiVersion=None, items=None, kind=None, metadata=None) <p>ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>items <code>Optional[List[ValidatingAdmissionPolicyBinding]]</code> - List of PolicyBinding.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicybindingspec","title":"ValidatingAdmissionPolicyBindingSpec","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicyBindingSpec</code>(matchResources=None, paramRef=None, policyName=None, validationActions=None) <p>ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.</p> <p>parameters</p> <ul> <li>matchResources <code>Optional[MatchResources]</code> - MatchResources declares what resources match this binding and will be   validated by it. Note that this is intersected with the policy's   matchConstraints, so only requests that are matched by the policy can be   selected by this. If this is unset, all resources matched by the policy are   validated by this binding When resourceRules is unset, it does not constrain   resource matching. If a resource is matched by the other fields of this   object, it will be validated. Note that this is differs from   ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.</li> <li>paramRef <code>Optional[ParamRef]</code> - paramRef specifies the parameter resource used to configure the admission   control policy. It should point to a resource of the type specified in   ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a   ParamKind and the resource referred to by ParamRef does not exist, this   binding is considered mis-configured and the FailurePolicy of the   ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind   then this field is ignored, and the rules are evaluated without a param.</li> <li>policyName <code>Optional[str]</code> - PolicyName references a ValidatingAdmissionPolicy name which the   ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not   exist, this binding is considered invalid and will be ignored Required.</li> <li>validationActions <code>Optional[List[str]]</code> - validationActions declares how Validations of the referenced   ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it   is always enforced according to these actions.   Failures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced   according to these actions only if the FailurePolicy is set to Fail, otherwise   the failures are ignored. This includes compilation errors, runtime errors and   misconfigurations of the policy.   validationActions is declared as a set of action values. Order does not   matter. validationActions may not contain duplicates of the same action.   The supported actions values are:   \"Deny\" specifies that a validation failure results in a denied request.   \"Warn\" specifies that a validation failure is reported to the request client   in HTTP Warning headers, with a warning code of 299. Warnings can be sent both   for allowed or denied admission responses.   \"Audit\" specifies that a validation failure is included in the published audit   event for the request. The audit event will contain a   <code>validation.policy.admission.k8s.io/validation_failure</code> audit annotation with   a value containing the details of the validation failures, formatted as a JSON   list of objects, each with the following fields: - message: The validation   failure message string - policy: The resource name of the   ValidatingAdmissionPolicy - binding: The resource name of the   ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed   validations in the ValidatingAdmissionPolicy - validationActions: The   enforcement actions enacted for the validation failure Example audit   annotation: <code>\"validation.policy.admission.k8s.io/validation_failure\":   \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\":   \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\":   [\"Audit\"]}]\"</code>   Clients should expect to handle additional values by ignoring any values not   recognized.   \"Deny\" and \"Warn\" may not be used together since this combination needlessly   duplicates the validation failure both in the API response body and the HTTP   warning headers.   Required.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicylist","title":"ValidatingAdmissionPolicyList","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicyList</code>(apiVersion=None, items=None, kind=None, metadata=None) <p>ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>items <code>Optional[List[ValidatingAdmissionPolicy]]</code> - List of ValidatingAdmissionPolicy.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicyspec","title":"ValidatingAdmissionPolicySpec","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicySpec</code>(auditAnnotations=None, failurePolicy=None, matchConditions=None, matchConstraints=None, paramKind=None, validations=None, variables=None) <p>ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.</p> <p>parameters</p> <ul> <li>auditAnnotations <code>Optional[List[AuditAnnotation]]</code> - auditAnnotations contains CEL expressions which are used to produce audit   annotations for the audit event of the API request. validations and   auditAnnotations may not both be empty; a least one of validations or   auditAnnotations is required.</li> <li>failurePolicy <code>Optional[str]</code> - failurePolicy defines how to handle failures for the admission policy.   Failures can occur from CEL expression parse errors, type check errors,   runtime errors and invalid or mis-configured policy definitions or bindings.   A policy is invalid if spec.paramKind refers to a non-existent Kind. A binding   is invalid if spec.paramRef.name refers to a non-existent resource.   failurePolicy does not define how validations that evaluate to false are   handled.   When failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding   validationActions define how failures are enforced.   Allowed values are Ignore or Fail. Defaults to Fail.</li> <li>matchConditions <code>Optional[List[MatchCondition]]</code> - MatchConditions is a list of conditions that must be met for a request to be   validated. Match conditions filter requests that have already been matched by   the rules, namespaceSelector, and objectSelector. An empty list of   matchConditions matches all requests. There are a maximum of 64 match   conditions allowed.   If a parameter object is provided, it can be accessed via the <code>params</code> handle   in the same manner as validation expressions.   The exact matching logic is (in order):<ol> <li>If ANY matchCondition evaluates to FALSE, the policy is skipped.</li> <li>If ALL matchConditions evaluate to TRUE, the policy is evaluated.</li> <li>If any matchCondition evaluates to an error (but none are FALSE):</li> <li>If failurePolicy=Fail, reject the request</li> <li>If failurePolicy=Ignore, the policy is skipped</li> </ol> </li> <li>matchConstraints <code>Optional[MatchResources]</code> - MatchConstraints specifies what resources this policy is designed to validate.   The AdmissionPolicy cares about a request if it matches all Constraints.   However, in order to prevent clusters from being put into an unstable state   that cannot be recovered from via the API ValidatingAdmissionPolicy cannot   match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding.   Required.</li> <li>paramKind <code>Optional[ParamKind]</code> - ParamKind specifies the kind of resources used to parameterize this policy. If   absent, there are no parameters for this policy and the param CEL variable   will not be provided to validation expressions. If ParamKind refers to a   non-existent kind, this policy definition is mis-configured and the   FailurePolicy is applied. If paramKind is specified but paramRef is unset in   ValidatingAdmissionPolicyBinding, the params variable will be null.</li> <li>validations <code>Optional[List[Validation]]</code> - Validations contain CEL expressions which is used to apply the validation.   Validations and AuditAnnotations may not both be empty; a minimum of one   Validations or AuditAnnotations is required.</li> <li>variables <code>Optional[List[Variable]]</code> - Variables contain definitions of variables that can be used in composition of   other expressions. Each variable is defined as a named CEL expression. The   variables defined here will be available under <code>variables</code> in other   expressions of the policy except MatchConditions because MatchConditions are   evaluated before the rest of the policy.   The expression of a variable can refer to other variables defined earlier in   the list but not those after. Thus, Variables must be sorted by the order of   first appearance and acyclic.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validatingadmissionpolicystatus","title":"ValidatingAdmissionPolicyStatus","text":"class <code>lightkube.models.admissionregistration_v1beta1.ValidatingAdmissionPolicyStatus</code>(conditions=None, observedGeneration=None, typeChecking=None) <p>ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[meta_v1.Condition]]</code> - The conditions represent the latest available observations of a policy's   current state.</li> <li>observedGeneration <code>Optional[int]</code> - The generation observed by the controller.</li> <li>typeChecking <code>Optional[TypeChecking]</code> - The results of type checking for each expression. Presence of this field   indicates the completion of the type checking.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#validation","title":"Validation","text":"class <code>lightkube.models.admissionregistration_v1beta1.Validation</code>(expression, message=None, messageExpression=None, reason=None) <p>Validation specifies the CEL expression which is used to apply the validation.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression represents the expression which will be evaluated by CEL. ref:   https://github.com/google/cel-spec CEL expressions have access to the contents   of the API request/response, organized into CEL variables as well as some   other useful variables:</li> <li>'object' - The object from the incoming request. The value is null for   DELETE requests. - 'oldObject' - The existing object. The value is null for   CREATE requests. - 'request' - Attributes of the API   request(ref). - 'params' -   Parameter resource referred to by the policy binding being evaluated. Only   populated if the policy has a ParamKind. - 'namespaceObject' - The namespace   object that the incoming object belongs to. The value is null for   cluster-scoped resources. - 'variables' - Map of composited variables, from   its name to its lazily evaluated value.     For example, a variable named 'foo' can be accessed as 'variables.foo'.</li> <li>'authorizer' - A CEL Authorizer. May be used to perform authorization checks   for the principal (user or service account) of the request.     See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz</li> <li>'authorizer.requestResource' - A CEL ResourceCheck constructed from the   'authorizer' and configured with the     request resource.   The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are   always accessible from the root of the object. No other metadata properties   are accessible.   Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible.   Accessible property names are escaped according to the following rules when   accessed in the expression: - '' escapes to '__underscores' - '.' escapes   to 'dot' - '-' escapes to 'dash' - '/' escapes to 'slash' -   Property names that exactly match a CEL RESERVED keyword escape to   '{keyword}'. The keywords are:             \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\",   \"for\", \"function\", \"if\",             \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".   Examples:<ul> <li>Expression accessing a property named \"namespace\": {\"Expression\":   \"object.namespace &gt; 0\"}</li> <li>Expression accessing a property named \"x-prop\": {\"Expression\":   \"object.x__dash__prop &gt; 0\"}</li> <li>Expression accessing a property named \"redact__d\": {\"Expression\":   \"object.redact__underscores__d &gt; 0\"}   Equality on arrays with list type of 'set' or 'map' ignores element order,   i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use   the semantics of the list type:</li> <li>'set': <code>X + Y</code> performs a union where the array positions of all elements   in <code>X</code> are preserved and   non-intersecting elements in <code>Y</code> are appended, retaining their partial   order.</li> <li>'map': <code>X + Y</code> performs a merge where the array positions of all keys in   <code>X</code> are preserved but the values   are overwritten by values in <code>Y</code> when the key sets of <code>X</code> and <code>Y</code>   intersect. Elements in <code>Y</code> with   non-intersecting keys are appended, retaining their partial order.   Required.</li> </ul> </li> <li>message <code>Optional[str]</code> - Message represents the message displayed when validation fails. The message is   required if the Expression contains line breaks. The message must not contain   line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a   URL with the host matching spec.host\" If the Expression contains line breaks.   Message is required. The message must not contain line breaks. If unset, the   message is \"failed Expression: {Expression}\".</li> <li>messageExpression <code>Optional[str]</code> - messageExpression declares a CEL expression that evaluates to the validation   failure message that is returned when this rule fails. Since messageExpression   is used as a failure message, it must evaluate to a string. If both message   and messageExpression are present on a validation, then messageExpression will   be used if validation fails. If messageExpression results in a runtime error,   the runtime error is logged, and the validation failure message is produced as   if the messageExpression field were unset. If messageExpression evaluates to   an empty string, a string with only spaces, or a string that contains line   breaks, then the validation failure message will also be produced as if the   messageExpression field were unset, and the fact that messageExpression   produced an empty string/string with only spaces/string with line breaks will   be logged. messageExpression has access to all the same variables as the   <code>expression</code> except for 'authorizer' and 'authorizer.requestResource'.   Example: \"object.x must be less than max (\"+string(params.max)+\")\"</li> <li>reason <code>Optional[str]</code> - Reason represents a machine-readable description of why this validation   failed. If this is the first validation in the list to fail, this reason, as   well as the corresponding HTTP response code, are used in the HTTP response to   the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\",   \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in   the response to the client.</li> </ul>"},{"location":"models/admissionregistration_v1beta1/#variable","title":"Variable","text":"class <code>lightkube.models.admissionregistration_v1beta1.Variable</code>(expression, name) <p>Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.</p> <p>parameters</p> <ul> <li>expression <code>str</code> - Expression is the expression that will be evaluated as the value of the   variable. The CEL expression has access to the same identifiers as the CEL   expressions in Validation.</li> <li>name <code>str</code> - Name is the name of the variable. The name must be a valid CEL identifier and   unique among all variables. The variable can be accessed in other expressions   through <code>variables</code> For example, if name is \"foo\", the variable will be   available as <code>variables.foo</code></li> </ul>"},{"location":"models/apiextensions_v1/","title":"apiextensions_v1","text":""},{"location":"models/apiextensions_v1/#customresourcecolumndefinition","title":"CustomResourceColumnDefinition","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceColumnDefinition</code>(jsonPath, name, type, description=None, format=None, priority=None) <p>CustomResourceColumnDefinition specifies a column for server side printing.</p> <p>parameters</p> <ul> <li>jsonPath <code>str</code> - jsonPath is a simple JSON path (i.e. with array notation) which is evaluated   against each custom resource to produce the value for this column.</li> <li>name <code>str</code> - name is a human readable name for the column.</li> <li>type <code>str</code> - type is an OpenAPI type definition for this column. See   https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types   for details.</li> <li>description <code>Optional[str]</code> - description is a human readable description of this column.</li> <li>format <code>Optional[str]</code> - format is an optional OpenAPI type definition for this column. The 'name'   format is applied to the primary identifier column to assist in clients   identifying column is the resource name. See   https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types   for details.</li> <li>priority <code>Optional[int]</code> - priority is an integer defining the relative importance of this column   compared to others. Lower numbers are considered higher priority. Columns that   may be omitted in limited space scenarios should be given a priority greater   than 0.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourceconversion","title":"CustomResourceConversion","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceConversion</code>(strategy, webhook=None) <p>CustomResourceConversion describes how to convert different versions of a CR.</p> <p>parameters</p> <ul> <li>strategy <code>str</code> - strategy specifies how custom resources are converted between versions.   Allowed values are: - <code>\"None\"</code>: The converter only change the apiVersion and   would not touch any other field in the custom resource. - <code>\"Webhook\"</code>: API   Server will call to an external webhook to do the conversion. Additional   information     is needed for this option. This requires spec.preserveUnknownFields to be   false, and spec.conversion.webhook to be set.</li> <li>webhook <code>Optional[WebhookConversion]</code> - webhook describes how to call the conversion webhook. Required when <code>strategy</code>   is set to <code>\"Webhook\"</code>.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinition","title":"CustomResourceDefinition","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinition</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format &lt;.spec.name&gt;.&lt;.spec.group&gt;.</p> <p>parameters</p> <ul> <li>spec <code>CustomResourceDefinitionSpec</code> - spec describes how the user wants the resources to appear</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata More info</li> <li>status <code>Optional[CustomResourceDefinitionStatus]</code> - status indicates the actual state of the CustomResourceDefinition</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitioncondition","title":"CustomResourceDefinitionCondition","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>CustomResourceDefinitionCondition contains details for the current condition of this pod.</p> <p>parameters</p> <ul> <li>status <code>str</code> - status is the status of the condition. Can be True, False, Unknown.</li> <li>type <code>str</code> - type is the type of the condition. Types include Established, NamesAccepted   and Terminating.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - lastTransitionTime last time the condition transitioned from one status to   another.</li> <li>message <code>Optional[str]</code> - message is a human-readable message indicating details about last transition.</li> <li>reason <code>Optional[str]</code> - reason is a unique, one-word, CamelCase reason for the condition's last   transition.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitionlist","title":"CustomResourceDefinitionList","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CustomResourceDefinitionList is a list of CustomResourceDefinition objects.</p> <p>parameters</p> <ul> <li>items <code>CustomResourceDefinition</code> - items list individual CustomResourceDefinition objects</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata More info</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitionnames","title":"CustomResourceDefinitionNames","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionNames</code>(kind, plural, categories=None, listKind=None, shortNames=None, singular=None) <p>CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition</p> <p>parameters</p> <ul> <li>kind <code>str</code> - kind is the serialized kind of the resource. It is normally CamelCase and   singular. Custom resource instances will use this value as the <code>kind</code>   attribute in API calls.</li> <li>plural <code>str</code> - plural is the plural name of the resource to serve. The custom resources are   served under <code>/apis/&lt;group&gt;/&lt;version&gt;/.../&lt;plural&gt;</code>. Must match the name of   the CustomResourceDefinition (in the form <code>&lt;names.plural&gt;.&lt;group&gt;</code>). Must be   all lowercase.</li> <li>categories <code>Optional[List[str]]</code> - categories is a list of grouped resources this custom resource belongs to   (e.g. 'all'). This is published in API discovery documents, and used by   clients to support invocations like <code>kubectl get all</code>.</li> <li>listKind <code>Optional[str]</code> - listKind is the serialized kind of the list for this resource. Defaults to   \"<code>kind</code>List\".</li> <li>shortNames <code>Optional[List[str]]</code> - shortNames are short names for the resource, exposed in API discovery   documents, and used by clients to support invocations like <code>kubectl get   &lt;shortname&gt;</code>. It must be all lowercase.</li> <li>singular <code>Optional[str]</code> - singular is the singular name of the resource. It must be all lowercase.   Defaults to lowercased <code>kind</code>.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitionspec","title":"CustomResourceDefinitionSpec","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionSpec</code>(group, names, scope, versions, conversion=None, preserveUnknownFields=None) <p>CustomResourceDefinitionSpec describes how a user wants their resource to appear</p> <p>parameters</p> <ul> <li>group <code>str</code> - group is the API group of the defined custom resource. The custom resources   are served under <code>/apis/&lt;group&gt;/...</code>. Must match the name of the   CustomResourceDefinition (in the form <code>&lt;names.plural&gt;.&lt;group&gt;</code>).</li> <li>names <code>CustomResourceDefinitionNames</code> - names specify the resource and kind names for the custom resource.</li> <li>scope <code>str</code> - scope indicates whether the defined custom resource is cluster- or   namespace-scoped. Allowed values are <code>Cluster</code> and <code>Namespaced</code>.</li> <li>versions <code>CustomResourceDefinitionVersion</code> - versions is the list of all API versions of the defined custom resource.   Version names are used to compute the order in which served versions are   listed in API discovery. If the version string is \"kube-like\", it will sort   above non \"kube-like\" version strings, which are ordered lexicographically.   \"Kube-like\" versions start with a \"v\", then are followed by a number (the   major version), then optionally the string \"alpha\" or \"beta\" and another   number (the minor version). These are sorted first by GA &gt; beta &gt; alpha (where   GA is a version with no suffix such as beta or alpha), and then by comparing   major version, then minor version. An example sorted list of versions: v10,   v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.</li> <li>conversion <code>Optional[CustomResourceConversion]</code> - conversion defines conversion settings for the CRD.</li> <li>preserveUnknownFields <code>Optional[bool]</code> - preserveUnknownFields indicates that object fields which are not specified in   the OpenAPI schema should be preserved when persisting to storage. apiVersion,   kind, metadata and known fields inside metadata are always preserved. This   field is deprecated in favor of setting <code>x-preserve-unknown-fields</code> to true in   <code>spec.versions[*].schema.openAPIV3Schema</code>. See   https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning   for details.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitionstatus","title":"CustomResourceDefinitionStatus","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionStatus</code>(acceptedNames=None, conditions=None, storedVersions=None) <p>CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition</p> <p>parameters</p> <ul> <li>acceptedNames <code>Optional[CustomResourceDefinitionNames]</code> - acceptedNames are the names that are actually being used to serve discovery.   They may be different than the names in spec.</li> <li>conditions <code>Optional[List[CustomResourceDefinitionCondition]]</code> - conditions indicate state for particular aspects of a CustomResourceDefinition</li> <li>storedVersions <code>Optional[List[str]]</code> - storedVersions lists all versions of CustomResources that were ever persisted.   Tracking these versions allows a migration path for stored versions in etcd.   The field is mutable so a migration controller can finish a migration to   another version (ensuring no old objects are left in storage), and then remove   the rest of the versions from this list. Versions may not be removed from   <code>spec.versions</code> while they exist in this list.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcedefinitionversion","title":"CustomResourceDefinitionVersion","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceDefinitionVersion</code>(name, served, storage, additionalPrinterColumns=None, deprecated=None, deprecationWarning=None, schema=None, subresources=None) <p>CustomResourceDefinitionVersion describes a version for CRD.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the version name, e.g. \u201cv1\u201d, \u201cv2beta1\u201d, etc. The custom resources are   served under this version at <code>/apis/&lt;group&gt;/&lt;version&gt;/...</code> if <code>served</code> is   true.</li> <li>served <code>bool</code> - served is a flag enabling/disabling this version from being served via REST   APIs</li> <li>storage <code>bool</code> - storage indicates this version should be used when persisting custom resources   to storage. There must be exactly one version with storage=true.</li> <li>additionalPrinterColumns <code>Optional[List[CustomResourceColumnDefinition]]</code> - additionalPrinterColumns specifies additional columns returned in Table   output. See   https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables   for details. If no columns are specified, a single column displaying the age   of the custom resource is used.</li> <li>deprecated <code>Optional[bool]</code> - deprecated indicates this version of the custom resource API is deprecated.   When set to true, API requests to this version receive a warning header in the   server response. Defaults to false.</li> <li>deprecationWarning <code>Optional[str]</code> - deprecationWarning overrides the default warning returned to API clients. May   only be set when <code>deprecated</code> is true. The default warning indicates this   version is deprecated and recommends use of the newest served version of equal   or greater stability, if one exists.</li> <li>schema <code>Optional[CustomResourceValidation]</code> - schema describes the schema used for validation, pruning, and defaulting of   this version of the custom resource.</li> <li>subresources <code>Optional[CustomResourceSubresources]</code> - subresources specify what subresources this version of the defined custom   resource have.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcesubresourcescale","title":"CustomResourceSubresourceScale","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceSubresourceScale</code>(specReplicasPath, statusReplicasPath, labelSelectorPath=None) <p>CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.</p> <p>parameters</p> <ul> <li>specReplicasPath <code>str</code> - specReplicasPath defines the JSON path inside of a custom resource that   corresponds to Scale <code>spec.replicas</code>. Only JSON paths without the array   notation are allowed. Must be a JSON Path under <code>.spec</code>. If there is no value   under the given path in the custom resource, the <code>/scale</code> subresource will   return an error on GET.</li> <li>statusReplicasPath <code>str</code> - statusReplicasPath defines the JSON path inside of a custom resource that   corresponds to Scale <code>status.replicas</code>. Only JSON paths without the array   notation are allowed. Must be a JSON Path under <code>.status</code>. If there is no   value under the given path in the custom resource, the <code>status.replicas</code> value   in the <code>/scale</code> subresource will default to 0.</li> <li>labelSelectorPath <code>Optional[str]</code> - labelSelectorPath defines the JSON path inside of a custom resource that   corresponds to Scale <code>status.selector</code>. Only JSON paths without the array   notation are allowed. Must be a JSON Path under <code>.status</code> or <code>.spec</code>. Must be   set to work with HorizontalPodAutoscaler. The field pointed by this JSON path   must be a string field (not a complex selector struct) which contains a   serialized label selector in string form. More info   If there is no value under the given path in the custom resource, the   <code>status.selector</code> value in the <code>/scale</code> subresource will default to the empty   string.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcesubresourcestatus","title":"CustomResourceSubresourceStatus","text":""},{"location":"models/apiextensions_v1/#customresourcesubresources","title":"CustomResourceSubresources","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceSubresources</code>(scale=None, status=None) <p>CustomResourceSubresources defines the status and scale subresources for CustomResources.</p> <p>parameters</p> <ul> <li>scale <code>Optional[CustomResourceSubresourceScale]</code> - scale indicates the custom resource should serve a <code>/scale</code> subresource that   returns an <code>autoscaling/v1</code> Scale object.</li> <li>status <code>Optional[CustomResourceSubresourceStatus]</code> - status indicates the custom resource should serve a <code>/status</code> subresource.   When enabled: 1. requests to the custom resource primary endpoint ignore   changes to the <code>status</code> stanza of the object. 2. requests to the custom   resource <code>/status</code> subresource ignore changes to anything other than the   <code>status</code> stanza of the object.</li> </ul>"},{"location":"models/apiextensions_v1/#customresourcevalidation","title":"CustomResourceValidation","text":"class <code>lightkube.models.apiextensions_v1.CustomResourceValidation</code>(openAPIV3Schema=None) <p>CustomResourceValidation is a list of validation methods for CustomResources.</p> <p>parameters</p> <ul> <li>openAPIV3Schema <code>Optional[JSONSchemaProps]</code> - openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.</li> </ul>"},{"location":"models/apiextensions_v1/#externaldocumentation","title":"ExternalDocumentation","text":"class <code>lightkube.models.apiextensions_v1.ExternalDocumentation</code>(description=None, url=None) <p>ExternalDocumentation allows referencing an external resource for extended documentation.</p> <p>parameters</p> <ul> <li>description <code>Optional[str]</code> -</li> <li>url <code>Optional[str]</code> -</li> </ul>"},{"location":"models/apiextensions_v1/#json","title":"JSON","text":""},{"location":"models/apiextensions_v1/#jsonschemaprops","title":"JSONSchemaProps","text":"class <code>lightkube.models.apiextensions_v1.JSONSchemaProps</code>(d_ref=None, d_schema=None, additionalItems=None, additionalProperties=None, allOf=None, anyOf=None, default=None, definitions=None, dependencies=None, description=None, enum=None, example=None, exclusiveMaximum=None, exclusiveMinimum=None, externalDocs=None, format=None, id=None, items=None, maxItems=None, maxLength=None, maxProperties=None, maximum=None, minItems=None, minLength=None, minProperties=None, minimum=None, multipleOf=None, not_=None, nullable=None, oneOf=None, pattern=None, patternProperties=None, properties=None, required=None, title=None, type=None, uniqueItems=None, x_kubernetes_embedded_resource=None, x_kubernetes_int_or_string=None, x_kubernetes_list_map_keys=None, x_kubernetes_list_type=None, x_kubernetes_map_type=None, x_kubernetes_preserve_unknown_fields=None, x_kubernetes_validations=None) <p>JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).</p> <p>parameters</p> <ul> <li>d_ref <code>Optional[str]</code> -</li> <li>d_schema <code>Optional[str]</code> -</li> <li>additionalItems <code>Optional[JSONSchemaPropsOrBool]</code> -</li> <li>additionalProperties <code>Optional[JSONSchemaPropsOrBool]</code> -</li> <li>allOf <code>Optional[List[JSONSchemaProps]]</code> -</li> <li>anyOf <code>Optional[List[JSONSchemaProps]]</code> -</li> <li>default <code>Optional[JSON]</code> - default is a default value for undefined object fields. Defaulting is a beta   feature under the CustomResourceDefaulting feature gate. Defaulting requires   spec.preserveUnknownFields to be false.</li> <li>definitions <code>Optional[dict]</code> -</li> <li>dependencies <code>Optional[dict]</code> -</li> <li>description <code>Optional[str]</code> -</li> <li>enum <code>Optional[List[JSON]]</code> -</li> <li>example <code>Optional[JSON]</code> -</li> <li>exclusiveMaximum <code>Optional[bool]</code> -</li> <li>exclusiveMinimum <code>Optional[bool]</code> -</li> <li>externalDocs <code>Optional[ExternalDocumentation]</code> -</li> <li>format <code>Optional[str]</code> - format is an OpenAPI v3 format string. Unknown formats are ignored. The   following formats are validated:</li> <li>bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an   URI as parsed by Golang net/url.ParseRequestURI - email: an email address as   parsed by Golang net/mail.ParseAddress - hostname: a valid representation for   an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4:   an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by   Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a   MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows   uppercase defined by the regex   (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ -   uuid3: an UUID3 that allows uppercase defined by the regex   (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ -   uuid4: an UUID4 that allows uppercase defined by the regex   (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$</li> <li>uuid5: an UUID5 that allows uppercase defined by the regex   (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$</li> <li>isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or   \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13:   an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card   number defined by the regex   ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$   with any non digit characters mixed in - ssn: a U.S. social security number   following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal   color code like \"#FFFFFF: following the regex   ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb   like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any   kind of string - date: a date string like \"2006-01-02\" as defined by full-date   in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang   time.ParseDuration or compatible with Scala duration format - datetime: a date   time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in   RFC3339.</li> <li>id <code>Optional[str]</code> -</li> <li>items <code>Optional[JSONSchemaPropsOrArray]</code> -</li> <li>maxItems <code>Optional[int]</code> -</li> <li>maxLength <code>Optional[int]</code> -</li> <li>maxProperties <code>Optional[int]</code> -</li> <li>maximum <code>Optional[float]</code> -</li> <li>minItems <code>Optional[int]</code> -</li> <li>minLength <code>Optional[int]</code> -</li> <li>minProperties <code>Optional[int]</code> -</li> <li>minimum <code>Optional[float]</code> -</li> <li>multipleOf <code>Optional[float]</code> -</li> <li>not_ <code>Optional[JSONSchemaProps]</code> -</li> <li>nullable <code>Optional[bool]</code> -</li> <li>oneOf <code>Optional[List[JSONSchemaProps]]</code> -</li> <li>pattern <code>Optional[str]</code> -</li> <li>patternProperties <code>Optional[dict]</code> -</li> <li>properties <code>Optional[dict]</code> -</li> <li>required <code>Optional[List[str]]</code> -</li> <li>title <code>Optional[str]</code> -</li> <li>type <code>Optional[str]</code> -</li> <li>uniqueItems <code>Optional[bool]</code> -</li> <li>x_kubernetes_embedded_resource <code>Optional[bool]</code> - x-kubernetes-embedded-resource defines that the value is an embedded   Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be   object. It is allowed to further restrict the embedded object. kind,   apiVersion and metadata are validated automatically.   x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have   to be if the object is fully specified (up to kind, apiVersion, metadata).</li> <li>x_kubernetes_int_or_string <code>Optional[bool]</code> - x-kubernetes-int-or-string specifies that this value is either an integer or a   string. If this is true, an empty type is allowed and type as child of anyOf   is permitted if following one of the following patterns:   1) anyOf:<ul> <li>type: integer</li> <li>type: string   2) allOf:</li> <li>anyOf:</li> <li>type: integer</li> <li>type: string</li> <li>... zero or more</li> </ul> </li> <li>x_kubernetes_list_map_keys <code>Optional[List[str]]</code> - x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type   <code>map</code> by specifying the keys used as the index of the map.   This tag MUST only be used on lists that have the \"x-kubernetes-list-type\"   extension set to \"map\". Also, the values specified for this attribute must be   a scalar typed field of the child structure (no nesting is supported).   The properties specified must either be required or have a default value, to   ensure those properties are present for all list items.</li> <li>x_kubernetes_list_type <code>Optional[str]</code> - x-kubernetes-list-type annotates an array to further describe its topology.   This extension must only be used on lists and may have 3 possible values:   1) <code>atomic</code>: the list is treated as a single entity, like a scalar.        Atomic lists will be entirely replaced when updated. This extension        may be used on any type of list (struct, scalar, ...).   2) <code>set</code>:        Sets are lists that must not have multiple items with the same value.   Each        value must be a scalar, an object with x-kubernetes-map-type <code>atomic</code> or   an        array with x-kubernetes-list-type <code>atomic</code>.   3) <code>map</code>:        These lists are like maps in that their elements have a non-index key        used to identify them. Order is preserved upon merge. The map tag        must only be used on a list with elements of type object.   Defaults to atomic for arrays.</li> <li>x_kubernetes_map_type <code>Optional[str]</code> - x-kubernetes-map-type annotates an object to further describe its topology.   This extension must only be used when type is object and may have 2 possible   values:   1) <code>granular</code>:        These maps are actual maps (key-value pairs) and each fields are   independent        from each other (they can each be manipulated by separate actors). This   is        the default behaviour for all maps.   2) <code>atomic</code>: the list is treated as a single entity, like a scalar.        Atomic maps will be entirely replaced when updated.</li> <li>x_kubernetes_preserve_unknown_fields <code>Optional[bool]</code> - x-kubernetes-preserve-unknown-fields stops the API server decoding step from   pruning fields which are not specified in the validation schema. This affects   fields recursively, but switches back to normal pruning behaviour if nested   properties or additionalProperties are specified in the schema. This can   either be true or undefined. False is forbidden.</li> <li>x_kubernetes_validations <code>Optional[List[ValidationRule]]</code> - x-kubernetes-validations describes a list of validation rules written in the   CEL expression language. This field is an alpha-level. Using this field   requires the feature gate <code>CustomResourceValidationExpressions</code> to be enabled.</li> </ul>"},{"location":"models/apiextensions_v1/#jsonschemapropsorarray","title":"JSONSchemaPropsOrArray","text":""},{"location":"models/apiextensions_v1/#jsonschemapropsorbool","title":"JSONSchemaPropsOrBool","text":""},{"location":"models/apiextensions_v1/#jsonschemapropsorstringarray","title":"JSONSchemaPropsOrStringArray","text":""},{"location":"models/apiextensions_v1/#servicereference","title":"ServiceReference","text":"class <code>lightkube.models.apiextensions_v1.ServiceReference</code>(name, namespace, path=None, port=None) <p>ServiceReference holds a reference to Service.legacy.k8s.io</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the name of the service. Required</li> <li>namespace <code>str</code> - namespace is the namespace of the service. Required</li> <li>path <code>Optional[str]</code> - path is an optional URL path at which the webhook will be contacted.</li> <li>port <code>Optional[int]</code> - port is an optional service port at which the webhook will be contacted.   <code>port</code> should be a valid port number (1-65535, inclusive). Defaults to 443 for   backward compatibility.</li> </ul>"},{"location":"models/apiextensions_v1/#validationrule","title":"ValidationRule","text":"class <code>lightkube.models.apiextensions_v1.ValidationRule</code>(rule, fieldPath=None, message=None, messageExpression=None, optionalOldSelf=None, reason=None) <p>ValidationRule describes a validation rule written in the CEL expression language.</p> <p>parameters</p> <ul> <li>rule <code>str</code> - Rule represents the expression which will be evaluated by CEL. ref:   https://github.com/google/cel-spec The Rule is scoped to the location of the   x-kubernetes-validations extension in the schema. The <code>self</code> variable in the   CEL expression is bound to the scoped value. Example: - Rule scoped to the   root of a resource with a status subresource: {\"rule\": \"self.status.actual &lt;=   self.spec.maxDesired\"}   If the Rule is scoped to an object with properties, the accessible properties   of the object are field selectable via <code>self.field</code> and field presence can be   checked via <code>has(self.field)</code>. Null valued fields are treated as absent fields   in CEL expressions. If the Rule is scoped to an object with   additionalProperties (i.e. a map) the value of the map are accessible via   <code>self[mapKey]</code>, map containment can be checked via <code>mapKey in self</code> and all   entries of the map are accessible via CEL macros and functions such as   <code>self.all(...)</code>. If the Rule is scoped to an array, the elements of the array   are accessible via <code>self[i]</code> and also by macros and functions. If the Rule is   scoped to a scalar, <code>self</code> is bound to the scalar value. Examples: - Rule   scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority &lt;   10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value,   value &gt;= 0 &amp;&amp; value &lt; 100)\"} - Rule scoped to a string value: {\"rule\":   \"self.startsWith('kube')\"}   The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are   always accessible from the root of the object and from any   x-kubernetes-embedded-resource annotated objects. No other metadata properties   are accessible.   Unknown data preserved in custom resources via   x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions.   This includes: - Unknown field values that are preserved by object schemas   with x-kubernetes-preserve-unknown-fields. - Object properties where the   property schema is of an \"unknown type\". An \"unknown type\" is recursively   defined as:<ul> <li>A schema with no type and x-kubernetes-preserve-unknown-fields set to true</li> <li>An array where the items schema is of an \"unknown type\"</li> <li>An object where the additionalProperties schema is of an \"unknown type\"   Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible.   Accessible property names are escaped according to the following rules when   accessed in the expression: - '' escapes to '__underscores' - '.' escapes   to 'dot' - '-' escapes to 'dash' - '/' escapes to 'slash' -   Property names that exactly match a CEL RESERVED keyword escape to   '{keyword}'. The keywords are:         \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\",   \"for\", \"function\", \"if\",         \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".   Examples:</li> <li>Rule accessing a property named \"namespace\": {\"rule\": \"self.namespace <p>0\"}</p> </li> <li>Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop &gt;   0\"}</li> <li>Rule accessing a property named \"redact__d\": {\"rule\":   \"self.redact__underscores__d &gt; 0\"}   Equality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores   element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with   x-kubernetes-list-type use the semantics of the list type:</li> <li>'set': <code>X + Y</code> performs a union where the array positions of all elements   in <code>X</code> are preserved and   non-intersecting elements in <code>Y</code> are appended, retaining their partial   order.</li> <li>'map': <code>X + Y</code> performs a merge where the array positions of all keys in   <code>X</code> are preserved but the values   are overwritten by values in <code>Y</code> when the key sets of <code>X</code> and <code>Y</code>   intersect. Elements in <code>Y</code> with   non-intersecting keys are appended, retaining their partial order.   If <code>rule</code> makes use of the <code>oldSelf</code> variable it is implicitly a <code>transition   rule</code>.   By default, the <code>oldSelf</code> variable is the same type as <code>self</code>. When   <code>optionalOldSelf</code> is true, the <code>oldSelf</code> variable is a CEL optional    variable whose value() is the same type as <code>self</code>.   See the documentation for the <code>optionalOldSelf</code> field for details.   Transition rules by default are applied only on UPDATE requests and are   skipped if an old value could not be found. You can opt a transition rule into   unconditional evaluation by setting <code>optionalOldSelf</code> to true.</li> </ul> </li> <li>fieldPath <code>Optional[str]</code> - fieldPath represents the field path returned when the validation fails. It   must be a relative JSON path (i.e. with array notation) scoped to the location   of this x-kubernetes-validations extension in the schema and refer to an   existing field. e.g. when validation checks if a specific attribute <code>foo</code>   under a map <code>testMap</code>, the fieldPath could be set to <code>.testMap.foo</code> If the   validation checks two lists must have unique attributes, the fieldPath could   be set to either of the list: e.g. <code>.testList</code> It does not support list   numeric index. It supports child operation to refer to an existing field   currently. Refer to JSONPath support in   Kubernetes for more   info. Numeric index of array is not supported. For field name which contains   special characters, use <code>['specialName']</code> to refer the field name. e.g. for   attribute <code>foo.34$</code> appears in a list <code>testList</code>, the fieldPath could be set   to <code>.testList['foo.34$']</code></li> <li>message <code>Optional[str]</code> - Message represents the message displayed when validation fails. The message is   required if the Rule contains line breaks. The message must not contain line   breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL   with the host matching spec.host\"</li> <li>messageExpression <code>Optional[str]</code> - MessageExpression declares a CEL expression that evaluates to the validation   failure message that is returned when this rule fails. Since messageExpression   is used as a failure message, it must evaluate to a string. If both message   and messageExpression are present on a rule, then messageExpression will be   used if validation fails. If messageExpression results in a runtime error, the   runtime error is logged, and the validation failure message is produced as if   the messageExpression field were unset. If messageExpression evaluates to an   empty string, a string with only spaces, or a string that contains line   breaks, then the validation failure message will also be produced as if the   messageExpression field were unset, and the fact that messageExpression   produced an empty string/string with only spaces/string with line breaks will   be logged. messageExpression has access to all the same variables as the rule;   the only difference is the return type. Example: \"x must be less than max   (\"+string(self.max)+\")\"</li> <li>optionalOldSelf <code>Optional[bool]</code> - optionalOldSelf is used to opt a transition rule into evaluation even when the   object is first created, or if the old object is missing the value.   When enabled <code>oldSelf</code> will be a CEL optional whose value will be <code>None</code> if   there is no old value, or when the object is initially created.   You may check for presence of oldSelf using <code>oldSelf.hasValue()</code> and unwrap it   after checking using <code>oldSelf.value()</code>. Check the CEL documentation for   Optional types for more information:   https://pkg.go.dev/github.com/google/cel-go/cel#OptionalTypes   May not be set unless <code>oldSelf</code> is used in <code>rule</code>.</li> <li>reason <code>Optional[str]</code> - reason provides a machine-readable validation failure reason that is returned   to the caller when a request fails this validation rule. The HTTP status code   returned to the caller will match the reason of the reason of the first failed   validation rule. The currently supported reasons are: \"FieldValueInvalid\",   \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\". If not   set, default to use \"FieldValueInvalid\". All future added reasons must be   accepted by clients when reading this value and unknown reasons should be   treated as FieldValueInvalid.</li> </ul>"},{"location":"models/apiextensions_v1/#webhookclientconfig","title":"WebhookClientConfig","text":"class <code>lightkube.models.apiextensions_v1.WebhookClientConfig</code>(caBundle=None, service=None, url=None) <p>WebhookClientConfig contains the information to make a TLS connection with the webhook.</p> <p>parameters</p> <ul> <li>caBundle <code>Optional[str]</code> - caBundle is a PEM encoded CA bundle which will be used to validate the   webhook's server certificate. If unspecified, system trust roots on the   apiserver are used.</li> <li>service <code>Optional[ServiceReference]</code> - service is a reference to the service for this webhook. Either service or url   must be specified.   If the webhook is running within the cluster, then you should use <code>service</code>.</li> <li>url <code>Optional[str]</code> - url gives the location of the webhook, in standard URL form   (<code>scheme://host:port/path</code>). Exactly one of <code>url</code> or <code>service</code> must be   specified.   The <code>host</code> should not refer to a service running in the cluster; use the   <code>service</code> field instead. The host might be resolved via external DNS in some   apiservers (e.g., <code>kube-apiserver</code> cannot resolve in-cluster DNS as that would   be a layering violation). <code>host</code> may also be an IP address.   Please note that using <code>localhost</code> or <code>127.0.0.1</code> as a <code>host</code> is risky unless   you take great care to run this webhook on all hosts which run an apiserver   which might need to make calls to this webhook. Such installs are likely to be   non-portable, i.e., not easy to turn up in a new cluster.   The scheme must be \"https\"; the URL must begin with \"https://\".   A path is optional, and if present may be any string permissible in a URL. You   may use the path to pass an arbitrary string to the webhook, for example, a   cluster identifier.   Attempting to use a user or basic auth e.g. \"user:password@\" is not allowed.   Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.</li> </ul>"},{"location":"models/apiextensions_v1/#webhookconversion","title":"WebhookConversion","text":"class <code>lightkube.models.apiextensions_v1.WebhookConversion</code>(conversionReviewVersions, clientConfig=None) <p>WebhookConversion describes how to call a conversion webhook</p> <p>parameters</p> <ul> <li>conversionReviewVersions <code>List[str]</code> - conversionReviewVersions is an ordered list of preferred <code>ConversionReview</code>   versions the Webhook expects. The API server will use the first version in the   list which it supports. If none of the versions specified in this list are   supported by API server, conversion will fail for the custom resource. If a   persisted Webhook configuration specifies allowed versions and does not   include any versions known to the API Server, calls to the webhook will fail.</li> <li>clientConfig <code>Optional[WebhookClientConfig]</code> - clientConfig is the instructions for how to call the webhook if strategy is   <code>Webhook</code>.</li> </ul>"},{"location":"models/apiregistration_v1/","title":"apiregistration_v1","text":""},{"location":"models/apiregistration_v1/#apiservice","title":"APIService","text":"class <code>lightkube.models.apiregistration_v1.APIService</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>APIService represents a server for a particular GroupVersion. Name must be \"version.group\".</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[APIServiceSpec]</code> - Spec contains information for locating and communicating with a server</li> <li>status <code>Optional[APIServiceStatus]</code> - Status contains derived information about an API server</li> </ul>"},{"location":"models/apiregistration_v1/#apiservicecondition","title":"APIServiceCondition","text":"class <code>lightkube.models.apiregistration_v1.APIServiceCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>APIServiceCondition describes the state of an APIService at a particular point</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status is the status of the condition. Can be True, False, Unknown.</li> <li>type <code>str</code> - Type is the type of the condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - Human-readable message indicating details about last transition.</li> <li>reason <code>Optional[str]</code> - Unique, one-word, CamelCase reason for the condition's last transition.</li> </ul>"},{"location":"models/apiregistration_v1/#apiservicelist","title":"APIServiceList","text":"class <code>lightkube.models.apiregistration_v1.APIServiceList</code>(items, apiVersion=None, kind=None, metadata=None) <p>APIServiceList is a list of APIService objects.</p> <p>parameters</p> <ul> <li>items <code>APIService</code> - Items is the list of APIService</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/apiregistration_v1/#apiservicespec","title":"APIServiceSpec","text":"class <code>lightkube.models.apiregistration_v1.APIServiceSpec</code>(groupPriorityMinimum, versionPriority, caBundle=None, group=None, insecureSkipTLSVerify=None, service=None, version=None) <p>APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.</p> <p>parameters</p> <ul> <li>groupPriorityMinimum <code>int</code> - GroupPriorityMinimum is the priority this group should have at least. Higher   priority means that the group is preferred by clients over lower priority   ones. Note that other versions of this group might specify even higher   GroupPriorityMinimum values such that the whole group gets a higher priority.   The primary sort is based on GroupPriorityMinimum, ordered highest number to   lowest (20 before 10). The secondary sort is based on the alphabetical   comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend   something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift,   Deis) are recommended to be in the 2000s</li> <li>versionPriority <code>int</code> - VersionPriority controls the ordering of this API version inside of its group.   Must be greater than zero. The primary sort is based on VersionPriority,   ordered highest to lowest (20 before 10). Since it's inside of a group, the   number can be small, probably in the 10s. In case of equal version priorities,   the version string will be used to compute the order inside a group. If the   version string is \"kube-like\", it will sort above non \"kube-like\" version   strings, which are ordered lexicographically. \"Kube-like\" versions start with   a \"v\", then are followed by a number (the major version), then optionally the   string \"alpha\" or \"beta\" and another number (the minor version). These are   sorted first by GA &gt; beta &gt; alpha (where GA is a version with no suffix such   as beta or alpha), and then by comparing major version, then minor version. An   example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1,   v12alpha1, v11alpha2, foo1, foo10.</li> <li>caBundle <code>Optional[str]</code> - CABundle is a PEM encoded CA bundle which will be used to validate an API   server's serving certificate. If unspecified, system trust roots on the   apiserver are used.</li> <li>group <code>Optional[str]</code> - Group is the API group name this server hosts</li> <li>insecureSkipTLSVerify <code>Optional[bool]</code> - InsecureSkipTLSVerify disables TLS certificate verification when communicating   with this server. This is strongly discouraged.  You should use the CABundle   instead.</li> <li>service <code>Optional[ServiceReference]</code> - Service is a reference to the service for this API server.  It must   communicate on port 443. If the Service is nil, that means the handling for   the API groupversion is handled locally on this server. The call will simply   delegate to the normal handler chain to be fulfilled.</li> <li>version <code>Optional[str]</code> - Version is the API version this server hosts.  For example, \"v1\"</li> </ul>"},{"location":"models/apiregistration_v1/#apiservicestatus","title":"APIServiceStatus","text":"class <code>lightkube.models.apiregistration_v1.APIServiceStatus</code>(conditions=None) <p>APIServiceStatus contains derived information about an API server</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[APIServiceCondition]]</code> - Current service state of apiService.</li> </ul>"},{"location":"models/apiregistration_v1/#servicereference","title":"ServiceReference","text":"class <code>lightkube.models.apiregistration_v1.ServiceReference</code>(name=None, namespace=None, port=None) <p>ServiceReference holds a reference to Service.legacy.k8s.io</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Name is the name of the service</li> <li>namespace <code>Optional[str]</code> - Namespace is the namespace of the service</li> <li>port <code>Optional[int]</code> - If specified, the port on the service that hosting webhook. Default to 443 for   backward compatibility. <code>port</code> should be a valid port number (1-65535,   inclusive).</li> </ul>"},{"location":"models/apiserverinternal_v1alpha1/","title":"apiserverinternal_v1alpha1","text":""},{"location":"models/apiserverinternal_v1alpha1/#serverstorageversion","title":"ServerStorageVersion","text":"class <code>lightkube.models.apiserverinternal_v1alpha1.ServerStorageVersion</code>(apiServerID=None, decodableVersions=None, encodingVersion=None, servedVersions=None) <p>An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.</p> <p>parameters</p> <ul> <li>apiServerID <code>Optional[str]</code> - The ID of the reporting API server.</li> <li>decodableVersions <code>Optional[List[str]]</code> - The API server can decode objects encoded in these versions. The   encodingVersion must be included in the decodableVersions.</li> <li>encodingVersion <code>Optional[str]</code> - The API server encodes the object to this version when persisting it in the   backend (e.g., etcd).</li> <li>servedVersions <code>Optional[List[str]]</code> - The API server can serve these versions. DecodableVersions must include all   ServedVersions.</li> </ul>"},{"location":"models/apiserverinternal_v1alpha1/#storageversion","title":"StorageVersion","text":"class <code>lightkube.models.apiserverinternal_v1alpha1.StorageVersion</code>(spec, status, apiVersion=None, kind=None, metadata=None) <p>Storage version of a specific resource.</p> <p>parameters</p> <ul> <li>spec <code>StorageVersionSpec</code> - Spec is an empty spec. It is here to comply with Kubernetes API style.</li> <li>status <code>StorageVersionStatus</code> - API server instances report the version they can decode and the version they   encode objects to when persisting objects in the backend.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - The name is .."},{"location":"models/apiserverinternal_v1alpha1/#storageversioncondition","title":"StorageVersionCondition","text":"class <code>lightkube.models.apiserverinternal_v1alpha1.StorageVersionCondition</code>(reason, status, type, lastTransitionTime=None, message=None, observedGeneration=None) <p>Describes the state of the storageVersion at a certain point.</p> <p>parameters</p> <ul> <li>reason <code>str</code> - The reason for the condition's last transition.</li> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of the condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>observedGeneration <code>Optional[int]</code> - If set, this represents the .metadata.generation that the condition was set   based upon.</li> </ul>"},{"location":"models/apiserverinternal_v1alpha1/#storageversionlist","title":"StorageVersionList","text":"class <code>lightkube.models.apiserverinternal_v1alpha1.StorageVersionList</code>(items, apiVersion=None, kind=None, metadata=None) <p>A list of StorageVersions.</p> <p>parameters</p> <ul> <li>items <code>StorageVersion</code> - Items holds a list of StorageVersion</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/apiserverinternal_v1alpha1/#storageversionspec","title":"StorageVersionSpec","text":""},{"location":"models/apiserverinternal_v1alpha1/#storageversionstatus","title":"StorageVersionStatus","text":"class <code>lightkube.models.apiserverinternal_v1alpha1.StorageVersionStatus</code>(commonEncodingVersion=None, conditions=None, storageVersions=None) <p>API server instances report the versions they can decode and the version they encode objects to when persisting objects in the backend.</p> <p>parameters</p> <ul> <li>commonEncodingVersion <code>Optional[str]</code> - If all API server instances agree on the same encoding storage version, then   this field is set to that version. Otherwise this field is left empty. API   servers should finish updating its storageVersionStatus entry before serving   write operations, so that this field will be in sync with the reality.</li> <li>conditions <code>Optional[List[StorageVersionCondition]]</code> - The latest available observations of the storageVersion's state.</li> <li>storageVersions <code>Optional[List[ServerStorageVersion]]</code> - The reported versions per API server instance.</li> </ul>"},{"location":"models/apps_v1/","title":"apps_v1","text":""},{"location":"models/apps_v1/#controllerrevision","title":"ControllerRevision","text":"class <code>lightkube.models.apps_v1.ControllerRevision</code>(revision, apiVersion=None, data=None, kind=None, metadata=None) <p>ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.</p> <p>parameters</p> <ul> <li>revision <code>int</code> - Revision indicates the revision of the state represented by Data.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>data <code>Optional[runtime.RawExtension]</code> - Data is the serialized representation of the state.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/apps_v1/#controllerrevisionlist","title":"ControllerRevisionList","text":"class <code>lightkube.models.apps_v1.ControllerRevisionList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ControllerRevisionList is a resource containing a list of ControllerRevision objects.</p> <p>parameters</p> <ul> <li>items <code>ControllerRevision</code> - Items is the list of ControllerRevisions</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - More info</li> </ul>"},{"location":"models/apps_v1/#daemonset","title":"DaemonSet","text":"class <code>lightkube.models.apps_v1.DaemonSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>DaemonSet represents the configuration of a daemon set.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[DaemonSetSpec]</code> - The desired behavior of this daemon set. More info</li> <li>status <code>Optional[DaemonSetStatus]</code> - The current status of this daemon set. This data may be out of date by some   window of time. Populated by the system. Read-only. More info</li> </ul>"},{"location":"models/apps_v1/#daemonsetcondition","title":"DaemonSetCondition","text":"class <code>lightkube.models.apps_v1.DaemonSetCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>DaemonSetCondition describes the state of a DaemonSet at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of DaemonSet condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>reason <code>Optional[str]</code> - The reason for the condition's last transition.</li> </ul>"},{"location":"models/apps_v1/#daemonsetlist","title":"DaemonSetList","text":"class <code>lightkube.models.apps_v1.DaemonSetList</code>(items, apiVersion=None, kind=None, metadata=None) <p>DaemonSetList is a collection of daemon sets.</p> <p>parameters</p> <ul> <li>items <code>DaemonSet</code> - A list of daemon sets.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/apps_v1/#daemonsetspec","title":"DaemonSetSpec","text":"class <code>lightkube.models.apps_v1.DaemonSetSpec</code>(selector, template, minReadySeconds=None, revisionHistoryLimit=None, updateStrategy=None) <p>DaemonSetSpec is the specification of a daemon set.</p> <p>parameters</p> <ul> <li>selector <code>meta_v1.LabelSelector</code> - A label query over pods that are managed by the daemon set. Must match in   order to be controlled. It must match the pod template's labels. More info</li> <li>template <code>core_v1.PodTemplateSpec</code> - An object that describes the pod that will be created. The DaemonSet will   create exactly one copy of this pod on every node that matches the template's   node selector (or on every node if no node selector is specified). The only   allowed template.spec.restartPolicy value is \"Always\". More info</li> <li>minReadySeconds <code>Optional[int]</code> - The minimum number of seconds for which a newly created DaemonSet pod should   be ready without any of its container crashing, for it to be considered   available. Defaults to 0 (pod will be considered available as soon as it is   ready).</li> <li>revisionHistoryLimit <code>Optional[int]</code> - The number of old history to retain to allow rollback. This is a pointer to   distinguish between explicit zero and not specified. Defaults to 10.</li> <li>updateStrategy <code>Optional[DaemonSetUpdateStrategy]</code> - An update strategy to replace existing DaemonSet pods with new pods.</li> </ul>"},{"location":"models/apps_v1/#daemonsetstatus","title":"DaemonSetStatus","text":"class <code>lightkube.models.apps_v1.DaemonSetStatus</code>(currentNumberScheduled, desiredNumberScheduled, numberMisscheduled, numberReady, collisionCount=None, conditions=None, numberAvailable=None, numberUnavailable=None, observedGeneration=None, updatedNumberScheduled=None) <p>DaemonSetStatus represents the current status of a daemon set.</p> <p>parameters</p> <ul> <li>currentNumberScheduled <code>int</code> - The number of nodes that are running at least 1 daemon pod and are supposed to   run the daemon pod. More info</li> <li>desiredNumberScheduled <code>int</code> - The total number of nodes that should be running the daemon pod (including   nodes correctly running the daemon pod). More info</li> <li>numberMisscheduled <code>int</code> - The number of nodes that are running the daemon pod, but are not supposed to   run the daemon pod. More info</li> <li>numberReady <code>int</code> - numberReady is the number of nodes that should be running the daemon pod and   have one or more of the daemon pod running with a Ready Condition.</li> <li>collisionCount <code>Optional[int]</code> - Count of hash collisions for the DaemonSet. The DaemonSet controller uses this   field as a collision avoidance mechanism when it needs to create the name for   the newest ControllerRevision.</li> <li>conditions <code>Optional[List[DaemonSetCondition]]</code> - Represents the latest available observations of a DaemonSet's current state.</li> <li>numberAvailable <code>Optional[int]</code> - The number of nodes that should be running the daemon pod and have one or more   of the daemon pod running and available (ready for at least   spec.minReadySeconds)</li> <li>numberUnavailable <code>Optional[int]</code> - The number of nodes that should be running the daemon pod and have none of the   daemon pod running and available (ready for at least spec.minReadySeconds)</li> <li>observedGeneration <code>Optional[int]</code> - The most recent generation observed by the daemon set controller.</li> <li>updatedNumberScheduled <code>Optional[int]</code> - The total number of nodes that are running updated daemon pod</li> </ul>"},{"location":"models/apps_v1/#daemonsetupdatestrategy","title":"DaemonSetUpdateStrategy","text":"class <code>lightkube.models.apps_v1.DaemonSetUpdateStrategy</code>(rollingUpdate=None, type=None) <p>DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.</p> <p>parameters</p> <ul> <li>rollingUpdate <code>Optional[RollingUpdateDaemonSet]</code> - Rolling update config params. Present only if type = \"RollingUpdate\".</li> <li>type <code>Optional[str]</code> - Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is   RollingUpdate.</li> </ul>"},{"location":"models/apps_v1/#deployment","title":"Deployment","text":"class <code>lightkube.models.apps_v1.Deployment</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Deployment enables declarative updates for Pods and ReplicaSets.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[DeploymentSpec]</code> - Specification of the desired behavior of the Deployment.</li> <li>status <code>Optional[DeploymentStatus]</code> - Most recently observed status of the Deployment.</li> </ul>"},{"location":"models/apps_v1/#deploymentcondition","title":"DeploymentCondition","text":"class <code>lightkube.models.apps_v1.DeploymentCondition</code>(status, type, lastTransitionTime=None, lastUpdateTime=None, message=None, reason=None) <p>DeploymentCondition describes the state of a deployment at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of deployment condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>lastUpdateTime <code>Optional[meta_v1.Time]</code> - The last time this condition was updated.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>reason <code>Optional[str]</code> - The reason for the condition's last transition.</li> </ul>"},{"location":"models/apps_v1/#deploymentlist","title":"DeploymentList","text":"class <code>lightkube.models.apps_v1.DeploymentList</code>(items, apiVersion=None, kind=None, metadata=None) <p>DeploymentList is a list of Deployments.</p> <p>parameters</p> <ul> <li>items <code>Deployment</code> - Items is the list of Deployments.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata.</li> </ul>"},{"location":"models/apps_v1/#deploymentspec","title":"DeploymentSpec","text":"class <code>lightkube.models.apps_v1.DeploymentSpec</code>(selector, template, minReadySeconds=None, paused=None, progressDeadlineSeconds=None, replicas=None, revisionHistoryLimit=None, strategy=None) <p>DeploymentSpec is the specification of the desired behavior of the Deployment.</p> <p>parameters</p> <ul> <li>selector <code>meta_v1.LabelSelector</code> - Label selector for pods. Existing ReplicaSets whose pods are selected by this   will be the ones affected by this deployment. It must match the pod template's   labels.</li> <li>template <code>core_v1.PodTemplateSpec</code> - Template describes the pods that will be created. The only allowed   template.spec.restartPolicy value is \"Always\".</li> <li>minReadySeconds <code>Optional[int]</code> - Minimum number of seconds for which a newly created pod should be ready   without any of its container crashing, for it to be considered available.   Defaults to 0 (pod will be considered available as soon as it is ready)</li> <li>paused <code>Optional[bool]</code> - Indicates that the deployment is paused.</li> <li>progressDeadlineSeconds <code>Optional[int]</code> - The maximum time in seconds for a deployment to make progress before it is   considered to be failed. The deployment controller will continue to process   failed deployments and a condition with a ProgressDeadlineExceeded reason will   be surfaced in the deployment status. Note that progress will not be estimated   during the time a deployment is paused. Defaults to 600s.</li> <li>replicas <code>Optional[int]</code> - Number of desired pods. This is a pointer to distinguish between explicit zero   and not specified. Defaults to 1.</li> <li>revisionHistoryLimit <code>Optional[int]</code> - The number of old ReplicaSets to retain to allow rollback. This is a pointer   to distinguish between explicit zero and not specified. Defaults to 10.</li> <li>strategy <code>Optional[DeploymentStrategy]</code> - The deployment strategy to use to replace existing pods with new ones.</li> </ul>"},{"location":"models/apps_v1/#deploymentstatus","title":"DeploymentStatus","text":"class <code>lightkube.models.apps_v1.DeploymentStatus</code>(availableReplicas=None, collisionCount=None, conditions=None, observedGeneration=None, readyReplicas=None, replicas=None, unavailableReplicas=None, updatedReplicas=None) <p>DeploymentStatus is the most recently observed status of the Deployment.</p> <p>parameters</p> <ul> <li>availableReplicas <code>Optional[int]</code> - Total number of available pods (ready for at least minReadySeconds) targeted   by this deployment.</li> <li>collisionCount <code>Optional[int]</code> - Count of hash collisions for the Deployment. The Deployment controller uses   this field as a collision avoidance mechanism when it needs to create the name   for the newest ReplicaSet.</li> <li>conditions <code>Optional[List[DeploymentCondition]]</code> - Represents the latest available observations of a deployment's current state.</li> <li>observedGeneration <code>Optional[int]</code> - The generation observed by the deployment controller.</li> <li>readyReplicas <code>Optional[int]</code> - readyReplicas is the number of pods targeted by this Deployment with a Ready   Condition.</li> <li>replicas <code>Optional[int]</code> - Total number of non-terminated pods targeted by this deployment (their labels   match the selector).</li> <li>unavailableReplicas <code>Optional[int]</code> - Total number of unavailable pods targeted by this deployment. This is the   total number of pods that are still required for the deployment to have 100%   available capacity. They may either be pods that are running but not yet   available or pods that still have not been created.</li> <li>updatedReplicas <code>Optional[int]</code> - Total number of non-terminated pods targeted by this deployment that have the   desired template spec.</li> </ul>"},{"location":"models/apps_v1/#deploymentstrategy","title":"DeploymentStrategy","text":"class <code>lightkube.models.apps_v1.DeploymentStrategy</code>(rollingUpdate=None, type=None) <p>DeploymentStrategy describes how to replace existing pods with new ones.</p> <p>parameters</p> <ul> <li>rollingUpdate <code>Optional[RollingUpdateDeployment]</code> - Rolling update config params. Present only if DeploymentStrategyType =   RollingUpdate.</li> <li>type <code>Optional[str]</code> - Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is   RollingUpdate.</li> </ul>"},{"location":"models/apps_v1/#replicaset","title":"ReplicaSet","text":"class <code>lightkube.models.apps_v1.ReplicaSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ReplicaSet ensures that a specified number of pod replicas are running at any given time.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - If the Labels of a ReplicaSet are empty, they are defaulted to be the same as   the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info</li> <li>spec <code>Optional[ReplicaSetSpec]</code> - Spec defines the specification of the desired behavior of the ReplicaSet. More info</li> <li>status <code>Optional[ReplicaSetStatus]</code> - Status is the most recently observed status of the ReplicaSet. This data may   be out of date by some window of time. Populated by the system. Read-only.   More info</li> </ul>"},{"location":"models/apps_v1/#replicasetcondition","title":"ReplicaSetCondition","text":"class <code>lightkube.models.apps_v1.ReplicaSetCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>ReplicaSetCondition describes the state of a replica set at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of replica set condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - The last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>reason <code>Optional[str]</code> - The reason for the condition's last transition.</li> </ul>"},{"location":"models/apps_v1/#replicasetlist","title":"ReplicaSetList","text":"class <code>lightkube.models.apps_v1.ReplicaSetList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ReplicaSetList is a collection of ReplicaSets.</p> <p>parameters</p> <ul> <li>items <code>ReplicaSet</code> - List of ReplicaSets. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/apps_v1/#replicasetspec","title":"ReplicaSetSpec","text":"class <code>lightkube.models.apps_v1.ReplicaSetSpec</code>(selector, minReadySeconds=None, replicas=None, template=None) <p>ReplicaSetSpec is the specification of a ReplicaSet.</p> <p>parameters</p> <ul> <li>selector <code>meta_v1.LabelSelector</code> - Selector is a label query over pods that should match the replica count. Label   keys and values that must match in order to be controlled by this replica set.   It must match the pod template's labels. More info</li> <li>minReadySeconds <code>Optional[int]</code> - Minimum number of seconds for which a newly created pod should be ready   without any of its container crashing, for it to be considered available.   Defaults to 0 (pod will be considered available as soon as it is ready)</li> <li>replicas <code>Optional[int]</code> - Replicas is the number of desired replicas. This is a pointer to distinguish   between explicit zero and unspecified. Defaults to 1. More info</li> <li>template <code>Optional[core_v1.PodTemplateSpec]</code> - Template is the object that describes the pod that will be created if   insufficient replicas are detected. More info</li> </ul>"},{"location":"models/apps_v1/#replicasetstatus","title":"ReplicaSetStatus","text":"class <code>lightkube.models.apps_v1.ReplicaSetStatus</code>(replicas, availableReplicas=None, conditions=None, fullyLabeledReplicas=None, observedGeneration=None, readyReplicas=None) <p>ReplicaSetStatus represents the current status of a ReplicaSet.</p> <p>parameters</p> <ul> <li>replicas <code>int</code> - Replicas is the most recently observed number of replicas. More info</li> <li>availableReplicas <code>Optional[int]</code> - The number of available replicas (ready for at least minReadySeconds) for this   replica set.</li> <li>conditions <code>Optional[List[ReplicaSetCondition]]</code> - Represents the latest available observations of a replica set's current state.</li> <li>fullyLabeledReplicas <code>Optional[int]</code> - The number of pods that have labels matching the labels of the pod template of   the replicaset.</li> <li>observedGeneration <code>Optional[int]</code> - ObservedGeneration reflects the generation of the most recently observed   ReplicaSet.</li> <li>readyReplicas <code>Optional[int]</code> - readyReplicas is the number of pods targeted by this ReplicaSet with a Ready   Condition.</li> </ul>"},{"location":"models/apps_v1/#rollingupdatedaemonset","title":"RollingUpdateDaemonSet","text":"class <code>lightkube.models.apps_v1.RollingUpdateDaemonSet</code>(maxSurge=None, maxUnavailable=None) <p>Spec to control the desired behavior of daemon set rolling update.</p> <p>parameters</p> <ul> <li>maxSurge <code>Optional[util_intstr.IntOrString]</code> - The maximum number of nodes with an existing available DaemonSet pod that can   have an updated DaemonSet pod during during an update. Value can be an   absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can   not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage   by rounding up to a minimum of 1. Default value is 0. Example: when this is   set to 30%, at most 30% of the total number of nodes that should be running   the daemon pod (i.e. status.desiredNumberScheduled) can have their a new pod   created before the old pod is marked as deleted. The update starts by   launching new pods on 30% of nodes. Once an updated pod is available (Ready   for at least minReadySeconds) the old DaemonSet pod on that node is marked   deleted. If the old pod becomes unavailable for any reason (Ready transitions   to false, is evicted, or is drained) an updated pod is immediatedly created on   that node without considering surge limits. Allowing surge implies the   possibility that the resources consumed by the daemonset on any given node can   double if the readiness check fails, and so resource intensive daemonsets   should take into account that they may cause evictions during disruption.</li> <li>maxUnavailable <code>Optional[util_intstr.IntOrString]</code> - The maximum number of DaemonSet pods that can be unavailable during the   update. Value can be an absolute number (ex: 5) or a percentage of total   number of DaemonSet pods at the start of the update (ex: 10%). Absolute number   is calculated from percentage by rounding up. This cannot be 0 if MaxSurge is   0 Default value is 1. Example: when this is set to 30%, at most 30% of the   total number of nodes that should be running the daemon pod (i.e.   status.desiredNumberScheduled) can have their pods stopped for an update at   any given time. The update starts by stopping at most 30% of those DaemonSet   pods and then brings up new DaemonSet pods in their place. Once the new pods   are available, it then proceeds onto other DaemonSet pods, thus ensuring that   at least 70% of original number of DaemonSet pods are available at all times   during the update.</li> </ul>"},{"location":"models/apps_v1/#rollingupdatedeployment","title":"RollingUpdateDeployment","text":"class <code>lightkube.models.apps_v1.RollingUpdateDeployment</code>(maxSurge=None, maxUnavailable=None) <p>Spec to control the desired behavior of rolling update.</p> <p>parameters</p> <ul> <li>maxSurge <code>Optional[util_intstr.IntOrString]</code> - The maximum number of pods that can be scheduled above the desired number of   pods. Value can be an absolute number (ex: 5) or a percentage of desired pods   (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is   calculated from percentage by rounding up. Defaults to 25%. Example: when this   is set to 30%, the new ReplicaSet can be scaled up immediately when the   rolling update starts, such that the total number of old and new pods do not   exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet   can be scaled up further, ensuring that total number of pods running at any   time during the update is at most 130% of desired pods.</li> <li>maxUnavailable <code>Optional[util_intstr.IntOrString]</code> - The maximum number of pods that can be unavailable during the update. Value   can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).   Absolute number is calculated from percentage by rounding down. This can not   be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the   old ReplicaSet can be scaled down to 70% of desired pods immediately when the   rolling update starts. Once new pods are ready, old ReplicaSet can be scaled   down further, followed by scaling up the new ReplicaSet, ensuring that the   total number of pods available at all times during the update is at least 70%   of desired pods.</li> </ul>"},{"location":"models/apps_v1/#rollingupdatestatefulsetstrategy","title":"RollingUpdateStatefulSetStrategy","text":"class <code>lightkube.models.apps_v1.RollingUpdateStatefulSetStrategy</code>(maxUnavailable=None, partition=None) <p>RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.</p> <p>parameters</p> <ul> <li>maxUnavailable <code>Optional[util_intstr.IntOrString]</code> - The maximum number of pods that can be unavailable during the update. Value   can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).   Absolute number is calculated from percentage by rounding up. This can not be</li> <li>Defaults to 1. This field is alpha-level and is only honored by servers   that enable the MaxUnavailableStatefulSet feature. The field applies to all   pods in the range 0 to Replicas-1. That means if there is any unavailable pod   in the range 0 to Replicas-1, it will be counted towards MaxUnavailable.</li> <li>partition <code>Optional[int]</code> - Partition indicates the ordinal at which the StatefulSet should be partitioned   for updates. During a rolling update, all pods from ordinal Replicas-1 to   Partition are updated. All pods from ordinal Partition-1 to 0 remain   untouched. This is helpful in being able to do a canary based deployment. The   default value is 0.</li> </ul>"},{"location":"models/apps_v1/#statefulset","title":"StatefulSet","text":"class <code>lightkube.models.apps_v1.StatefulSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>StatefulSet represents a set of pods with consistent identities. Identities are defined as:   - Network: A single stable DNS and hostname.   - Storage: As many VolumeClaims as requested.</p> <p>The StatefulSet guarantees that a given network identity will always map to the same storage identity.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[StatefulSetSpec]</code> - Spec defines the desired identities of pods in this set.</li> <li>status <code>Optional[StatefulSetStatus]</code> - Status is the current status of Pods in this StatefulSet. This data may be out   of date by some window of time.</li> </ul>"},{"location":"models/apps_v1/#statefulsetcondition","title":"StatefulSetCondition","text":"class <code>lightkube.models.apps_v1.StatefulSetCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>StatefulSetCondition describes the state of a statefulset at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of statefulset condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>reason <code>Optional[str]</code> - The reason for the condition's last transition.</li> </ul>"},{"location":"models/apps_v1/#statefulsetlist","title":"StatefulSetList","text":"class <code>lightkube.models.apps_v1.StatefulSetList</code>(items, apiVersion=None, kind=None, metadata=None) <p>StatefulSetList is a collection of StatefulSets.</p> <p>parameters</p> <ul> <li>items <code>StatefulSet</code> - Items is the list of stateful sets.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list's metadata. More info</li> </ul>"},{"location":"models/apps_v1/#statefulsetordinals","title":"StatefulSetOrdinals","text":"class <code>lightkube.models.apps_v1.StatefulSetOrdinals</code>(start=None) <p>StatefulSetOrdinals describes the policy used for replica ordinal assignment in this StatefulSet.</p> <p>parameters</p> <ul> <li>start <code>Optional[int]</code> - start is the number representing the first replica's index. It may be used to   number replicas from an alternate index (eg: 1-indexed) over the default   0-indexed names, or to orchestrate progressive movement of replicas from one   StatefulSet to another. If set, replica indices will be in the range:     [.spec.ordinals.start, .spec.ordinals.start + .spec.replicas).   If unset, defaults to 0. Replica indices will be in the range:     [0, .spec.replicas).</li> </ul>"},{"location":"models/apps_v1/#statefulsetpersistentvolumeclaimretentionpolicy","title":"StatefulSetPersistentVolumeClaimRetentionPolicy","text":"class <code>lightkube.models.apps_v1.StatefulSetPersistentVolumeClaimRetentionPolicy</code>(whenDeleted=None, whenScaled=None) <p>StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.</p> <p>parameters</p> <ul> <li>whenDeleted <code>Optional[str]</code> - WhenDeleted specifies what happens to PVCs created from StatefulSet   VolumeClaimTemplates when the StatefulSet is deleted. The default policy of   <code>Retain</code> causes PVCs to not be affected by StatefulSet deletion. The <code>Delete</code>   policy causes those PVCs to be deleted.</li> <li>whenScaled <code>Optional[str]</code> - WhenScaled specifies what happens to PVCs created from StatefulSet   VolumeClaimTemplates when the StatefulSet is scaled down. The default policy   of <code>Retain</code> causes PVCs to not be affected by a scaledown. The <code>Delete</code> policy   causes the associated PVCs for any excess pods above the replica count to be   deleted.</li> </ul>"},{"location":"models/apps_v1/#statefulsetspec","title":"StatefulSetSpec","text":"class <code>lightkube.models.apps_v1.StatefulSetSpec</code>(selector, serviceName, template, minReadySeconds=None, ordinals=None, persistentVolumeClaimRetentionPolicy=None, podManagementPolicy=None, replicas=None, revisionHistoryLimit=None, updateStrategy=None, volumeClaimTemplates=None) <p>A StatefulSetSpec is the specification of a StatefulSet.</p> <p>parameters</p> <ul> <li>selector <code>meta_v1.LabelSelector</code> - selector is a label query over pods that should match the replica count. It   must match the pod template's labels. More info</li> <li>serviceName <code>str</code> - serviceName is the name of the service that governs this StatefulSet. This   service must exist before the StatefulSet, and is responsible for the network   identity of the set. Pods get DNS/hostnames that follow the pattern:   pod-specific-string.serviceName.default.svc.cluster.local where   \"pod-specific-string\" is managed by the StatefulSet controller.</li> <li>template <code>core_v1.PodTemplateSpec</code> - template is the object that describes the pod that will be created if   insufficient replicas are detected. Each pod stamped out by the StatefulSet   will fulfill this Template, but have a unique identity from the rest of the   StatefulSet. Each pod will be named with the format   -. For example, a pod in a StatefulSet named \"web\"   with index number \"3\" would be named \"web-3\". The only allowed   template.spec.restartPolicy value is \"Always\". <li>minReadySeconds <code>Optional[int]</code> - Minimum number of seconds for which a newly created pod should be ready   without any of its container crashing for it to be considered available.   Defaults to 0 (pod will be considered available as soon as it is ready)</li> <li>ordinals <code>Optional[StatefulSetOrdinals]</code> - ordinals controls the numbering of replica indices in a StatefulSet. The   default ordinals behavior assigns a \"0\" index to the first replica and   increments the index by one for each additional replica requested. Using the   ordinals field requires the StatefulSetStartOrdinal feature gate to be   enabled, which is beta.</li> <li>persistentVolumeClaimRetentionPolicy <code>Optional[StatefulSetPersistentVolumeClaimRetentionPolicy]</code> - persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent   volume claims created from volumeClaimTemplates. By default, all persistent   volume claims are created as needed and retained until manually deleted. This   policy allows the lifecycle to be altered, for example by deleting persistent   volume claims when their stateful set is deleted, or when their pod is scaled   down. This requires the StatefulSetAutoDeletePVC feature gate to be enabled,   which is alpha.  +optional</li> <li>podManagementPolicy <code>Optional[str]</code> - podManagementPolicy controls how pods are created during initial scale up,   when replacing pods on nodes, or when scaling down. The default policy is   <code>OrderedReady</code>, where pods are created in increasing order (pod-0, then pod-1,   etc) and the controller will wait until each pod is ready before continuing.   When scaling down, the pods are removed in the opposite order. The alternative   policy is <code>Parallel</code> which will create pods in parallel to match the desired   scale without waiting, and on scale down will delete all pods at once.</li> <li>replicas <code>Optional[int]</code> - replicas is the desired number of replicas of the given Template. These are   replicas in the sense that they are instantiations of the same Template, but   individual replicas also have a consistent identity. If unspecified, defaults   to 1.</li> <li>revisionHistoryLimit <code>Optional[int]</code> - revisionHistoryLimit is the maximum number of revisions that will be   maintained in the StatefulSet's revision history. The revision history   consists of all revisions not represented by a currently applied   StatefulSetSpec version. The default value is 10.</li> <li>updateStrategy <code>Optional[StatefulSetUpdateStrategy]</code> - updateStrategy indicates the StatefulSetUpdateStrategy that will be employed   to update Pods in the StatefulSet when a revision is made to Template.</li> <li>volumeClaimTemplates <code>Optional[List[core_v1.PersistentVolumeClaim]]</code> - volumeClaimTemplates is a list of claims that pods are allowed to reference.   The StatefulSet controller is responsible for mapping network identities to   claims in a way that maintains the identity of a pod. Every claim in this list   must have at least one matching (by name) volumeMount in one container in the   template. A claim in this list takes precedence over any volumes in the   template, with the same name.</li>"},{"location":"models/apps_v1/#statefulsetstatus","title":"StatefulSetStatus","text":"class <code>lightkube.models.apps_v1.StatefulSetStatus</code>(replicas, availableReplicas=None, collisionCount=None, conditions=None, currentReplicas=None, currentRevision=None, observedGeneration=None, readyReplicas=None, updateRevision=None, updatedReplicas=None) <p>StatefulSetStatus represents the current state of a StatefulSet.</p> <p>parameters</p> <ul> <li>replicas <code>int</code> - replicas is the number of Pods created by the StatefulSet controller.</li> <li>availableReplicas <code>Optional[int]</code> - Total number of available pods (ready for at least minReadySeconds) targeted   by this statefulset.</li> <li>collisionCount <code>Optional[int]</code> - collisionCount is the count of hash collisions for the StatefulSet. The   StatefulSet controller uses this field as a collision avoidance mechanism when   it needs to create the name for the newest ControllerRevision.</li> <li>conditions <code>Optional[List[StatefulSetCondition]]</code> - Represents the latest available observations of a statefulset's current state.</li> <li>currentReplicas <code>Optional[int]</code> - currentReplicas is the number of Pods created by the StatefulSet controller   from the StatefulSet version indicated by currentRevision.</li> <li>currentRevision <code>Optional[str]</code> - currentRevision, if not empty, indicates the version of the StatefulSet used   to generate Pods in the sequence [0,currentReplicas).</li> <li>observedGeneration <code>Optional[int]</code> - observedGeneration is the most recent generation observed for this   StatefulSet. It corresponds to the StatefulSet's generation, which is updated   on mutation by the API Server.</li> <li>readyReplicas <code>Optional[int]</code> - readyReplicas is the number of pods created for this StatefulSet with a Ready   Condition.</li> <li>updateRevision <code>Optional[str]</code> - updateRevision, if not empty, indicates the version of the StatefulSet used to   generate Pods in the sequence [replicas-updatedReplicas,replicas)</li> <li>updatedReplicas <code>Optional[int]</code> - updatedReplicas is the number of Pods created by the StatefulSet controller   from the StatefulSet version indicated by updateRevision.</li> </ul>"},{"location":"models/apps_v1/#statefulsetupdatestrategy","title":"StatefulSetUpdateStrategy","text":"class <code>lightkube.models.apps_v1.StatefulSetUpdateStrategy</code>(rollingUpdate=None, type=None) <p>StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.</p> <p>parameters</p> <ul> <li>rollingUpdate <code>Optional[RollingUpdateStatefulSetStrategy]</code> - RollingUpdate is used to communicate parameters when Type is   RollingUpdateStatefulSetStrategyType.</li> <li>type <code>Optional[str]</code> - Type indicates the type of the StatefulSetUpdateStrategy. Default is   RollingUpdate.</li> </ul>"},{"location":"models/authentication_v1/","title":"authentication_v1","text":""},{"location":"models/authentication_v1/#boundobjectreference","title":"BoundObjectReference","text":"class <code>lightkube.models.authentication_v1.BoundObjectReference</code>(apiVersion=None, kind=None, name=None, uid=None) <p>BoundObjectReference is a reference to an object that a token is bound to.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - API version of the referent.</li> <li>kind <code>Optional[str]</code> - Kind of the referent. Valid kinds are 'Pod' and 'Secret'.</li> <li>name <code>Optional[str]</code> - Name of the referent.</li> <li>uid <code>Optional[str]</code> - UID of the referent.</li> </ul>"},{"location":"models/authentication_v1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.models.authentication_v1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <p>SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>status <code>Optional[SelfSubjectReviewStatus]</code> - Status is filled in by the server with the user attributes.</li> </ul>"},{"location":"models/authentication_v1/#selfsubjectreviewstatus","title":"SelfSubjectReviewStatus","text":"class <code>lightkube.models.authentication_v1.SelfSubjectReviewStatus</code>(userInfo=None) <p>SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.</p> <p>parameters</p> <ul> <li>userInfo <code>Optional[UserInfo]</code> - User attributes of the user making this request.</li> </ul>"},{"location":"models/authentication_v1/#tokenrequest","title":"TokenRequest","text":"class <code>lightkube.models.authentication_v1.TokenRequest</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>TokenRequest requests a token for a given service account.</p> <p>parameters</p> <ul> <li>spec <code>TokenRequestSpec</code> - Spec holds information about the request being evaluated</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>status <code>Optional[TokenRequestStatus]</code> - Status is filled in by the server and indicates whether the token can be   authenticated.</li> </ul>"},{"location":"models/authentication_v1/#tokenrequestspec","title":"TokenRequestSpec","text":"class <code>lightkube.models.authentication_v1.TokenRequestSpec</code>(audiences, boundObjectRef=None, expirationSeconds=None) <p>TokenRequestSpec contains client provided parameters of a token request.</p> <p>parameters</p> <ul> <li>audiences <code>List[str]</code> - Audiences are the intendend audiences of the token. A recipient of a token   must identify themself with an identifier in the list of audiences of the   token, and otherwise should reject the token. A token issued for multiple   audiences may be used to authenticate against any of the audiences listed but   implies a high degree of trust between the target audiences.</li> <li>boundObjectRef <code>Optional[BoundObjectReference]</code> - BoundObjectRef is a reference to an object that the token will be bound to.   The token will only be valid for as long as the bound object exists. NOTE: The   API server's TokenReview endpoint will validate the BoundObjectRef, but other   audiences may not. Keep ExpirationSeconds small if you want prompt revocation.</li> <li>expirationSeconds <code>Optional[int]</code> - ExpirationSeconds is the requested duration of validity of the request. The   token issuer may return a token with a different validity duration so a client   needs to check the 'expiration' field in a response.</li> </ul>"},{"location":"models/authentication_v1/#tokenrequeststatus","title":"TokenRequestStatus","text":"class <code>lightkube.models.authentication_v1.TokenRequestStatus</code>(expirationTimestamp, token) <p>TokenRequestStatus is the result of a token request.</p> <p>parameters</p> <ul> <li>expirationTimestamp <code>meta_v1.Time</code> - ExpirationTimestamp is the time of expiration of the returned token.</li> <li>token <code>str</code> - Token is the opaque bearer token.</li> </ul>"},{"location":"models/authentication_v1/#tokenreview","title":"TokenReview","text":"class <code>lightkube.models.authentication_v1.TokenReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.</p> <p>parameters</p> <ul> <li>spec <code>TokenReviewSpec</code> - Spec holds information about the request being evaluated</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>status <code>Optional[TokenReviewStatus]</code> - Status is filled in by the server and indicates whether the request can be   authenticated.</li> </ul>"},{"location":"models/authentication_v1/#tokenreviewspec","title":"TokenReviewSpec","text":"class <code>lightkube.models.authentication_v1.TokenReviewSpec</code>(audiences=None, token=None) <p>TokenReviewSpec is a description of the token authentication request.</p> <p>parameters</p> <ul> <li>audiences <code>Optional[List[str]]</code> - Audiences is a list of the identifiers that the resource server presented with   the token identifies as. Audience-aware token authenticators will verify that   the token was intended for at least one of the audiences in this list. If no   audiences are provided, the audience will default to the audience of the   Kubernetes apiserver.</li> <li>token <code>Optional[str]</code> - Token is the opaque bearer token.</li> </ul>"},{"location":"models/authentication_v1/#tokenreviewstatus","title":"TokenReviewStatus","text":"class <code>lightkube.models.authentication_v1.TokenReviewStatus</code>(audiences=None, authenticated=None, error=None, user=None) <p>TokenReviewStatus is the result of the token authentication request.</p> <p>parameters</p> <ul> <li>audiences <code>Optional[List[str]]</code> - Audiences are audience identifiers chosen by the authenticator that are   compatible with both the TokenReview and token. An identifier is any   identifier in the intersection of the TokenReviewSpec audiences and the   token's audiences. A client of the TokenReview API that sets the   spec.audiences field should validate that a compatible audience identifier is   returned in the status.audiences field to ensure that the TokenReview server   is audience aware. If a TokenReview returns an empty status.audience field   where status.authenticated is \"true\", the token is valid against the audience   of the Kubernetes API server.</li> <li>authenticated <code>Optional[bool]</code> - Authenticated indicates that the token was associated with a known user.</li> <li>error <code>Optional[str]</code> - Error indicates that the token couldn't be checked</li> <li>user <code>Optional[UserInfo]</code> - User is the UserInfo associated with the provided token.</li> </ul>"},{"location":"models/authentication_v1/#userinfo","title":"UserInfo","text":"class <code>lightkube.models.authentication_v1.UserInfo</code>(extra=None, groups=None, uid=None, username=None) <p>UserInfo holds the information about the user needed to implement the user.Info interface.</p> <p>parameters</p> <ul> <li>extra <code>Optional[dict]</code> - Any additional information provided by the authenticator.</li> <li>groups <code>Optional[List[str]]</code> - The names of groups this user is a part of.</li> <li>uid <code>Optional[str]</code> - A unique value that identifies this user across time. If this user is deleted   and another user by the same name is added, they will have different UIDs.</li> <li>username <code>Optional[str]</code> - The name that uniquely identifies this user among all active users.</li> </ul>"},{"location":"models/authentication_v1alpha1/","title":"authentication_v1alpha1","text":""},{"location":"models/authentication_v1alpha1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.models.authentication_v1alpha1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <p>SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>status <code>Optional[SelfSubjectReviewStatus]</code> - Status is filled in by the server with the user attributes.</li> </ul>"},{"location":"models/authentication_v1alpha1/#selfsubjectreviewstatus","title":"SelfSubjectReviewStatus","text":"class <code>lightkube.models.authentication_v1alpha1.SelfSubjectReviewStatus</code>(userInfo=None) <p>SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.</p> <p>parameters</p> <ul> <li>userInfo <code>Optional[authentication_v1.UserInfo]</code> - User attributes of the user making this request.</li> </ul>"},{"location":"models/authentication_v1beta1/","title":"authentication_v1beta1","text":""},{"location":"models/authentication_v1beta1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.models.authentication_v1beta1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <p>SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>status <code>Optional[SelfSubjectReviewStatus]</code> - Status is filled in by the server with the user attributes.</li> </ul>"},{"location":"models/authentication_v1beta1/#selfsubjectreviewstatus","title":"SelfSubjectReviewStatus","text":"class <code>lightkube.models.authentication_v1beta1.SelfSubjectReviewStatus</code>(userInfo=None) <p>SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.</p> <p>parameters</p> <ul> <li>userInfo <code>Optional[authentication_v1.UserInfo]</code> - User attributes of the user making this request.</li> </ul>"},{"location":"models/authorization_v1/","title":"authorization_v1","text":""},{"location":"models/authorization_v1/#localsubjectaccessreview","title":"LocalSubjectAccessReview","text":"class <code>lightkube.models.authorization_v1.LocalSubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.</p> <p>parameters</p> <ul> <li>spec <code>SubjectAccessReviewSpec</code> - Spec holds information about the request being evaluated.  spec.namespace must   be equal to the namespace you made the request against.  If empty, it is   defaulted.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard list metadata. More info</li> <li>status <code>Optional[SubjectAccessReviewStatus]</code> - Status is filled in by the server and indicates whether the request is allowed   or not</li> </ul>"},{"location":"models/authorization_v1/#nonresourceattributes","title":"NonResourceAttributes","text":"class <code>lightkube.models.authorization_v1.NonResourceAttributes</code>(path=None, verb=None) <p>NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface</p> <p>parameters</p> <ul> <li>path <code>Optional[str]</code> - Path is the URL path of the request</li> <li>verb <code>Optional[str]</code> - Verb is the standard HTTP verb</li> </ul>"},{"location":"models/authorization_v1/#nonresourcerule","title":"NonResourceRule","text":"class <code>lightkube.models.authorization_v1.NonResourceRule</code>(verbs, nonResourceURLs=None) <p>NonResourceRule holds information that describes a rule for the non-resource</p> <p>parameters</p> <ul> <li>verbs <code>List[str]</code> - Verb is a list of kubernetes non-resource API verbs, like: get, post, put,   delete, patch, head, options.  \"*\" means all.</li> <li>nonResourceURLs <code>Optional[List[str]]</code> - NonResourceURLs is a set of partial urls that a user should have access to.   s are allowed, but only as the full, final step in the path.  \"\" means all.</li> </ul>"},{"location":"models/authorization_v1/#resourceattributes","title":"ResourceAttributes","text":"class <code>lightkube.models.authorization_v1.ResourceAttributes</code>(group=None, name=None, namespace=None, resource=None, subresource=None, verb=None, version=None) <p>ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface</p> <p>parameters</p> <ul> <li>group <code>Optional[str]</code> - Group is the API Group of the Resource.  \"\" means all. <li>name <code>Optional[str]</code> - Name is the name of the resource being requested for a \"get\" or deleted for a   \"delete\". \"\" (empty) means all.</li> <li>namespace <code>Optional[str]</code> - Namespace is the namespace of the action being requested.  Currently, there is   no distinction between no namespace and all namespaces \"\" (empty) is defaulted   for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources   \"\" (empty) means \"all\" for namespace scoped resources from a   SubjectAccessReview or SelfSubjectAccessReview</li> <li>resource <code>Optional[str]</code> - Resource is one of the existing resource types.  \"\" means all.</li> <li>subresource <code>Optional[str]</code> - Subresource is one of the existing resource types.  \"\" means none.</li> <li>verb <code>Optional[str]</code> - Verb is a kubernetes resource API verb, like: get, list, watch, create,   update, delete, proxy.  \"\" means all. <li>version <code>Optional[str]</code> - Version is the API Version of the Resource.  \"\" means all.</li>"},{"location":"models/authorization_v1/#resourcerule","title":"ResourceRule","text":"class <code>lightkube.models.authorization_v1.ResourceRule</code>(verbs, apiGroups=None, resourceNames=None, resources=None) <p>ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.</p> <p>parameters</p> <ul> <li>verbs <code>List[str]</code> - Verb is a list of kubernetes resource API verbs, like: get, list, watch,   create, update, delete, proxy.  \"\" means all. <li>apiGroups <code>Optional[List[str]]</code> - APIGroups is the name of the APIGroup that contains the resources.  If   multiple API groups are specified, any action requested against one of the   enumerated resources in any API group will be allowed.  \"\" means all.</li> <li>resourceNames <code>Optional[List[str]]</code> - ResourceNames is an optional white list of names that the rule applies to.  An   empty set means that everything is allowed.  \"*\" means all.</li> <li>resources <code>Optional[List[str]]</code> - Resources is a list of resources this rule applies to.  \"\" means all in the   specified apiGroups.    \"/foo\" represents the subresource 'foo' for all resources in the specified   apiGroups.</li>"},{"location":"models/authorization_v1/#selfsubjectaccessreview","title":"SelfSubjectAccessReview","text":"class <code>lightkube.models.authorization_v1.SelfSubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action</p> <p>parameters</p> <ul> <li>spec <code>SelfSubjectAccessReviewSpec</code> - Spec holds information about the request being evaluated.  user and groups   must be empty</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard list metadata. More info</li> <li>status <code>Optional[SubjectAccessReviewStatus]</code> - Status is filled in by the server and indicates whether the request is allowed   or not</li> </ul>"},{"location":"models/authorization_v1/#selfsubjectaccessreviewspec","title":"SelfSubjectAccessReviewSpec","text":"class <code>lightkube.models.authorization_v1.SelfSubjectAccessReviewSpec</code>(nonResourceAttributes=None, resourceAttributes=None) <p>SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set</p> <p>parameters</p> <ul> <li>nonResourceAttributes <code>Optional[NonResourceAttributes]</code> - NonResourceAttributes describes information for a non-resource access request</li> <li>resourceAttributes <code>Optional[ResourceAttributes]</code> - ResourceAuthorizationAttributes describes information for a resource access   request</li> </ul>"},{"location":"models/authorization_v1/#selfsubjectrulesreview","title":"SelfSubjectRulesReview","text":"class <code>lightkube.models.authorization_v1.SelfSubjectRulesReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.</p> <p>parameters</p> <ul> <li>spec <code>SelfSubjectRulesReviewSpec</code> - Spec holds information about the request being evaluated.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard list metadata. More info</li> <li>status <code>Optional[SubjectRulesReviewStatus]</code> - Status is filled in by the server and indicates the set of actions a user can   perform.</li> </ul>"},{"location":"models/authorization_v1/#selfsubjectrulesreviewspec","title":"SelfSubjectRulesReviewSpec","text":"class <code>lightkube.models.authorization_v1.SelfSubjectRulesReviewSpec</code>(namespace=None) <p>SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.</p> <p>parameters</p> <ul> <li>namespace <code>Optional[str]</code> - Namespace to evaluate rules for. Required.</li> </ul>"},{"location":"models/authorization_v1/#subjectaccessreview","title":"SubjectAccessReview","text":"class <code>lightkube.models.authorization_v1.SubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>SubjectAccessReview checks whether or not a user or group can perform an action.</p> <p>parameters</p> <ul> <li>spec <code>SubjectAccessReviewSpec</code> - Spec holds information about the request being evaluated</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard list metadata. More info</li> <li>status <code>Optional[SubjectAccessReviewStatus]</code> - Status is filled in by the server and indicates whether the request is allowed   or not</li> </ul>"},{"location":"models/authorization_v1/#subjectaccessreviewspec","title":"SubjectAccessReviewSpec","text":"class <code>lightkube.models.authorization_v1.SubjectAccessReviewSpec</code>(extra=None, groups=None, nonResourceAttributes=None, resourceAttributes=None, uid=None, user=None) <p>SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set</p> <p>parameters</p> <ul> <li>extra <code>Optional[dict]</code> - Extra corresponds to the user.Info.GetExtra() method from the authenticator.   Since that is input to the authorizer it needs a reflection here.</li> <li>groups <code>Optional[List[str]]</code> - Groups is the groups you're testing for.</li> <li>nonResourceAttributes <code>Optional[NonResourceAttributes]</code> - NonResourceAttributes describes information for a non-resource access request</li> <li>resourceAttributes <code>Optional[ResourceAttributes]</code> - ResourceAuthorizationAttributes describes information for a resource access   request</li> <li>uid <code>Optional[str]</code> - UID information about the requesting user.</li> <li>user <code>Optional[str]</code> - User is the user you're testing for. If you specify \"User\" but not \"Groups\",   then is it interpreted as \"What if User were not a member of any groups</li> </ul>"},{"location":"models/authorization_v1/#subjectaccessreviewstatus","title":"SubjectAccessReviewStatus","text":"class <code>lightkube.models.authorization_v1.SubjectAccessReviewStatus</code>(allowed, denied=None, evaluationError=None, reason=None) <p>SubjectAccessReviewStatus</p> <p>parameters</p> <ul> <li>allowed <code>bool</code> - Allowed is required. True if the action would be allowed, false otherwise.</li> <li>denied <code>Optional[bool]</code> - Denied is optional. True if the action would be denied, otherwise false. If   both allowed is false and denied is false, then the authorizer has no opinion   on whether to authorize the action. Denied may not be true if Allowed is true.</li> <li>evaluationError <code>Optional[str]</code> - EvaluationError is an indication that some error occurred during the   authorization check. It is entirely possible to get an error and be able to   continue determine authorization status in spite of it. For instance, RBAC can   be missing a role, but enough roles are still present and bound to reason   about the request.</li> <li>reason <code>Optional[str]</code> - Reason is optional.  It indicates why a request was allowed or denied.</li> </ul>"},{"location":"models/authorization_v1/#subjectrulesreviewstatus","title":"SubjectRulesReviewStatus","text":"class <code>lightkube.models.authorization_v1.SubjectRulesReviewStatus</code>(incomplete, nonResourceRules, resourceRules, evaluationError=None) <p>SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.</p> <p>parameters</p> <ul> <li>incomplete <code>bool</code> - Incomplete is true when the rules returned by this call are incomplete. This   is most commonly encountered when an authorizer, such as an external   authorizer, doesn't support rules evaluation.</li> <li>nonResourceRules <code>NonResourceRule</code> - NonResourceRules is the list of actions the subject is allowed to perform on   non-resources. The list ordering isn't significant, may contain duplicates,   and possibly be incomplete.</li> <li>resourceRules <code>ResourceRule</code> - ResourceRules is the list of actions the subject is allowed to perform on   resources. The list ordering isn't significant, may contain duplicates, and   possibly be incomplete.</li> <li>evaluationError <code>Optional[str]</code> - EvaluationError can appear in combination with Rules. It indicates an error   occurred during rule evaluation, such as an authorizer that doesn't support   rule evaluation, and that ResourceRules and/or NonResourceRules may be   incomplete.</li> </ul>"},{"location":"models/autoscaling_v1/","title":"autoscaling_v1","text":""},{"location":"models/autoscaling_v1/#crossversionobjectreference","title":"CrossVersionObjectReference","text":"class <code>lightkube.models.autoscaling_v1.CrossVersionObjectReference</code>(kind, name, apiVersion=None) <p>CrossVersionObjectReference contains enough information to let you identify the referred resource.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - kind is the kind of the referent; More info</li> <li>name <code>str</code> - name is the name of the referent; More info</li> <li>apiVersion <code>Optional[str]</code> - apiVersion is the API version of the referent</li> </ul>"},{"location":"models/autoscaling_v1/#horizontalpodautoscaler","title":"HorizontalPodAutoscaler","text":"class <code>lightkube.models.autoscaling_v1.HorizontalPodAutoscaler</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>configuration of a horizontal pod autoscaler.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata. More info</li> <li>spec <code>Optional[HorizontalPodAutoscalerSpec]</code> - spec defines the behaviour of autoscaler. More info</li> <li>status <code>Optional[HorizontalPodAutoscalerStatus]</code> - status is the current information about the autoscaler.</li> </ul>"},{"location":"models/autoscaling_v1/#horizontalpodautoscalerlist","title":"HorizontalPodAutoscalerList","text":"class <code>lightkube.models.autoscaling_v1.HorizontalPodAutoscalerList</code>(items, apiVersion=None, kind=None, metadata=None) <p>list of horizontal pod autoscaler objects.</p> <p>parameters</p> <ul> <li>items <code>HorizontalPodAutoscaler</code> - items is the list of horizontal pod autoscaler objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata.</li> </ul>"},{"location":"models/autoscaling_v1/#horizontalpodautoscalerspec","title":"HorizontalPodAutoscalerSpec","text":"class <code>lightkube.models.autoscaling_v1.HorizontalPodAutoscalerSpec</code>(maxReplicas, scaleTargetRef, minReplicas=None, targetCPUUtilizationPercentage=None) <p>specification of a horizontal pod autoscaler.</p> <p>parameters</p> <ul> <li>maxReplicas <code>int</code> - maxReplicas is the upper limit for the number of pods that can be set by the   autoscaler; cannot be smaller than MinReplicas.</li> <li>scaleTargetRef <code>CrossVersionObjectReference</code> - reference to scaled resource; horizontal pod autoscaler will learn the current   resource consumption and will set the desired number of pods by using its   Scale subresource.</li> <li>minReplicas <code>Optional[int]</code> - minReplicas is the lower limit for the number of replicas to which the   autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to   be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one   Object or External metric is configured.  Scaling is active as long as at   least one metric value is available.</li> <li>targetCPUUtilizationPercentage <code>Optional[int]</code> - targetCPUUtilizationPercentage is the target average CPU utilization   (represented as a percentage of requested CPU) over all the pods; if not   specified the default autoscaling policy will be used.</li> </ul>"},{"location":"models/autoscaling_v1/#horizontalpodautoscalerstatus","title":"HorizontalPodAutoscalerStatus","text":"class <code>lightkube.models.autoscaling_v1.HorizontalPodAutoscalerStatus</code>(currentReplicas, desiredReplicas, currentCPUUtilizationPercentage=None, lastScaleTime=None, observedGeneration=None) <p>current status of a horizontal pod autoscaler</p> <p>parameters</p> <ul> <li>currentReplicas <code>int</code> - currentReplicas is the current number of replicas of pods managed by this   autoscaler.</li> <li>desiredReplicas <code>int</code> - desiredReplicas is the  desired number of replicas of pods managed by this   autoscaler.</li> <li>currentCPUUtilizationPercentage <code>Optional[int]</code> - currentCPUUtilizationPercentage is the current average CPU utilization over   all pods, represented as a percentage of requested CPU, e.g. 70 means that an   average pod is using now 70% of its requested CPU.</li> <li>lastScaleTime <code>Optional[meta_v1.Time]</code> - lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number   of pods; used by the autoscaler to control how often the number of pods is   changed.</li> <li>observedGeneration <code>Optional[int]</code> - observedGeneration is the most recent generation observed by this autoscaler.</li> </ul>"},{"location":"models/autoscaling_v1/#scale","title":"Scale","text":"class <code>lightkube.models.autoscaling_v1.Scale</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Scale represents a scaling request for a resource.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata; More info</li> <li>spec <code>Optional[ScaleSpec]</code> - spec defines the behavior of the scale. More info</li> <li>status <code>Optional[ScaleStatus]</code> - status is the current status of the scale. More info   Read-only.</li> </ul>"},{"location":"models/autoscaling_v1/#scalespec","title":"ScaleSpec","text":"class <code>lightkube.models.autoscaling_v1.ScaleSpec</code>(replicas=None) <p>ScaleSpec describes the attributes of a scale subresource.</p> <p>parameters</p> <ul> <li>replicas <code>Optional[int]</code> - replicas is the desired number of instances for the scaled object.</li> </ul>"},{"location":"models/autoscaling_v1/#scalestatus","title":"ScaleStatus","text":"class <code>lightkube.models.autoscaling_v1.ScaleStatus</code>(replicas, selector=None) <p>ScaleStatus represents the current status of a scale subresource.</p> <p>parameters</p> <ul> <li>replicas <code>int</code> - replicas is the actual number of observed instances of the scaled object.</li> <li>selector <code>Optional[str]</code> - selector is the label query over pods that should match the replicas count.   This is same as the label selector but in the string format to avoid   introspection by clients. The string will be in the same format as the   query-param syntax. More info about label selectors:   https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/</li> </ul>"},{"location":"models/autoscaling_v2/","title":"autoscaling_v2","text":""},{"location":"models/autoscaling_v2/#containerresourcemetricsource","title":"ContainerResourceMetricSource","text":"class <code>lightkube.models.autoscaling_v2.ContainerResourceMetricSource</code>(container, name, target) <p>ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.</p> <p>parameters</p> <ul> <li>container <code>str</code> - container is the name of the container in the pods of the scaling target</li> <li>name <code>str</code> - name is the name of the resource in question.</li> <li>target <code>MetricTarget</code> - target specifies the target value for the given metric</li> </ul>"},{"location":"models/autoscaling_v2/#containerresourcemetricstatus","title":"ContainerResourceMetricStatus","text":"class <code>lightkube.models.autoscaling_v2.ContainerResourceMetricStatus</code>(container, current, name) <p>ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.</p> <p>parameters</p> <ul> <li>container <code>str</code> - container is the name of the container in the pods of the scaling target</li> <li>current <code>MetricValueStatus</code> - current contains the current value for the given metric</li> <li>name <code>str</code> - name is the name of the resource in question.</li> </ul>"},{"location":"models/autoscaling_v2/#crossversionobjectreference","title":"CrossVersionObjectReference","text":"class <code>lightkube.models.autoscaling_v2.CrossVersionObjectReference</code>(kind, name, apiVersion=None) <p>CrossVersionObjectReference contains enough information to let you identify the referred resource.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - kind is the kind of the referent; More info</li> <li>name <code>str</code> - name is the name of the referent; More info</li> <li>apiVersion <code>Optional[str]</code> - apiVersion is the API version of the referent</li> </ul>"},{"location":"models/autoscaling_v2/#externalmetricsource","title":"ExternalMetricSource","text":"class <code>lightkube.models.autoscaling_v2.ExternalMetricSource</code>(metric, target) <p>ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).</p> <p>parameters</p> <ul> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> <li>target <code>MetricTarget</code> - target specifies the target value for the given metric</li> </ul>"},{"location":"models/autoscaling_v2/#externalmetricstatus","title":"ExternalMetricStatus","text":"class <code>lightkube.models.autoscaling_v2.ExternalMetricStatus</code>(current, metric) <p>ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.</p> <p>parameters</p> <ul> <li>current <code>MetricValueStatus</code> - current contains the current value for the given metric</li> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> </ul>"},{"location":"models/autoscaling_v2/#hpascalingpolicy","title":"HPAScalingPolicy","text":"class <code>lightkube.models.autoscaling_v2.HPAScalingPolicy</code>(periodSeconds, type, value) <p>HPAScalingPolicy is a single policy which must hold true for a specified past interval.</p> <p>parameters</p> <ul> <li>periodSeconds <code>int</code> - periodSeconds specifies the window of time for which the policy should hold   true. PeriodSeconds must be greater than zero and less than or equal to 1800   (30 min).</li> <li>type <code>str</code> - type is used to specify the scaling policy.</li> <li>value <code>int</code> - value contains the amount of change which is permitted by the policy. It must   be greater than zero</li> </ul>"},{"location":"models/autoscaling_v2/#hpascalingrules","title":"HPAScalingRules","text":"class <code>lightkube.models.autoscaling_v2.HPAScalingRules</code>(policies=None, selectPolicy=None, stabilizationWindowSeconds=None) <p>HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.</p> <p>parameters</p> <ul> <li>policies <code>Optional[List[HPAScalingPolicy]]</code> - policies is a list of potential scaling polices which can be used during   scaling. At least one policy must be specified, otherwise the HPAScalingRules   will be discarded as invalid</li> <li>selectPolicy <code>Optional[str]</code> - selectPolicy is used to specify which policy should be used. If not set, the   default value Max is used.</li> <li>stabilizationWindowSeconds <code>Optional[int]</code> - stabilizationWindowSeconds is the number of seconds for which past   recommendations should be considered while scaling up or scaling down.   StabilizationWindowSeconds must be greater than or equal to zero and less than   or equal to 3600 (one hour). If not set, use the default values: - For scale   up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the   stabilization window is 300 seconds long).</li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscaler","title":"HorizontalPodAutoscaler","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscaler</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - metadata is the standard object metadata. More info</li> <li>spec <code>Optional[HorizontalPodAutoscalerSpec]</code> - spec is the specification for the behaviour of the autoscaler. More info</li> <li>status <code>Optional[HorizontalPodAutoscalerStatus]</code> - status is the current information about the autoscaler.</li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscalerbehavior","title":"HorizontalPodAutoscalerBehavior","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscalerBehavior</code>(scaleDown=None, scaleUp=None) <p>HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).</p> <p>parameters</p> <ul> <li>scaleDown <code>Optional[HPAScalingRules]</code> - scaleDown is scaling policy for scaling Down. If not set, the default value is   to allow to scale down to minReplicas pods, with a 300 second stabilization   window (i.e., the highest recommendation for the last 300sec is used).</li> <li>scaleUp <code>Optional[HPAScalingRules]</code> - scaleUp is scaling policy for scaling Up. If not set, the default value is the   higher of:<ul> <li>increase no more than 4 pods per 60 seconds</li> <li>double the number of pods per 60 seconds   No stabilization is used.</li> </ul> </li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscalercondition","title":"HorizontalPodAutoscalerCondition","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscalerCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - status is the status of the condition (True, False, Unknown)</li> <li>type <code>str</code> - type describes the current condition</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - lastTransitionTime is the last time the condition transitioned from one status   to another</li> <li>message <code>Optional[str]</code> - message is a human-readable explanation containing details about the   transition</li> <li>reason <code>Optional[str]</code> - reason is the reason for the condition's last transition.</li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscalerlist","title":"HorizontalPodAutoscalerList","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscalerList</code>(items, apiVersion=None, kind=None, metadata=None) <p>HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.</p> <p>parameters</p> <ul> <li>items <code>HorizontalPodAutoscaler</code> - items is the list of horizontal pod autoscaler objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - metadata is the standard list metadata.</li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscalerspec","title":"HorizontalPodAutoscalerSpec","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscalerSpec</code>(maxReplicas, scaleTargetRef, behavior=None, metrics=None, minReplicas=None) <p>HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.</p> <p>parameters</p> <ul> <li>maxReplicas <code>int</code> - maxReplicas is the upper limit for the number of replicas to which the   autoscaler can scale up. It cannot be less that minReplicas.</li> <li>scaleTargetRef <code>CrossVersionObjectReference</code> - scaleTargetRef points to the target resource to scale, and is used to the pods   for which metrics should be collected, as well as to actually change the   replica count.</li> <li>behavior <code>Optional[HorizontalPodAutoscalerBehavior]</code> - behavior configures the scaling behavior of the target in both Up and Down   directions (scaleUp and scaleDown fields respectively). If not set, the   default HPAScalingRules for scale up and scale down are used.</li> <li>metrics <code>Optional[List[MetricSpec]]</code> - metrics contains the specifications for which to use to calculate the desired   replica count (the maximum replica count across all metrics will be used).   The desired replica count is calculated multiplying the ratio between the   target value and the current value by the current number of pods.  Ergo,   metrics used must decrease as the pod count is increased, and vice-versa.  See   the individual metric source types for more information about how each type of   metric must respond. If not set, the default metric will be set to 80% average   CPU utilization.</li> <li>minReplicas <code>Optional[int]</code> - minReplicas is the lower limit for the number of replicas to which the   autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to   be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one   Object or External metric is configured.  Scaling is active as long as at   least one metric value is available.</li> </ul>"},{"location":"models/autoscaling_v2/#horizontalpodautoscalerstatus","title":"HorizontalPodAutoscalerStatus","text":"class <code>lightkube.models.autoscaling_v2.HorizontalPodAutoscalerStatus</code>(desiredReplicas, conditions=None, currentMetrics=None, currentReplicas=None, lastScaleTime=None, observedGeneration=None) <p>HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.</p> <p>parameters</p> <ul> <li>desiredReplicas <code>int</code> - desiredReplicas is the desired number of replicas of pods managed by this   autoscaler, as last calculated by the autoscaler.</li> <li>conditions <code>Optional[List[HorizontalPodAutoscalerCondition]]</code> - conditions is the set of conditions required for this autoscaler to scale its   target, and indicates whether or not those conditions are met.</li> <li>currentMetrics <code>Optional[List[MetricStatus]]</code> - currentMetrics is the last read state of the metrics used by this autoscaler.</li> <li>currentReplicas <code>Optional[int]</code> - currentReplicas is current number of replicas of pods managed by this   autoscaler, as last seen by the autoscaler.</li> <li>lastScaleTime <code>Optional[meta_v1.Time]</code> - lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number   of pods, used by the autoscaler to control how often the number of pods is   changed.</li> <li>observedGeneration <code>Optional[int]</code> - observedGeneration is the most recent generation observed by this autoscaler.</li> </ul>"},{"location":"models/autoscaling_v2/#metricidentifier","title":"MetricIdentifier","text":"class <code>lightkube.models.autoscaling_v2.MetricIdentifier</code>(name, selector=None) <p>MetricIdentifier defines the name and optionally selector for a metric</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the name of the given metric</li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - selector is the string-encoded form of a standard kubernetes label selector   for the given metric When set, it is passed as an additional parameter to the   metrics server for more specific metrics scoping. When unset, just the   metricName will be used to gather metrics.</li> </ul>"},{"location":"models/autoscaling_v2/#metricspec","title":"MetricSpec","text":"class <code>lightkube.models.autoscaling_v2.MetricSpec</code>(type, containerResource=None, external=None, object=None, pods=None, resource=None) <p>MetricSpec specifies how to scale based on a single metric (only <code>type</code> and one other matching field should be set at once).</p> <p>parameters</p> <ul> <li>type <code>str</code> - type is the type of metric source.  It should be one of \"ContainerResource\",   \"External\", \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field   in the object. Note: \"ContainerResource\" type is available on when the   feature-gate HPAContainerMetrics is enabled</li> <li>containerResource <code>Optional[ContainerResourceMetricSource]</code> - containerResource refers to a resource metric (such as those specified in   requests and limits) known to Kubernetes describing a single container in each   pod of the current scale target (e.g. CPU or memory). Such metrics are built   in to Kubernetes, and have special scaling options on top of those available   to normal per-pod metrics using the \"pods\" source. This is an alpha feature   and can be enabled by the HPAContainerMetrics feature flag.</li> <li>external <code>Optional[ExternalMetricSource]</code> - external refers to a global metric that is not associated with any Kubernetes   object. It allows autoscaling based on information coming from components   running outside of cluster (for example length of queue in cloud messaging   service, or QPS from loadbalancer running outside of cluster).</li> <li>object <code>Optional[ObjectMetricSource]</code> - object refers to a metric describing a single kubernetes object (for example,   hits-per-second on an Ingress object).</li> <li>pods <code>Optional[PodsMetricSource]</code> - pods refers to a metric describing each pod in the current scale target (for   example, transactions-processed-per-second).  The values will be averaged   together before being compared to the target value.</li> <li>resource <code>Optional[ResourceMetricSource]</code> - resource refers to a resource metric (such as those specified in requests and   limits) known to Kubernetes describing each pod in the current scale target   (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have   special scaling options on top of those available to normal per-pod metrics   using the \"pods\" source.</li> </ul>"},{"location":"models/autoscaling_v2/#metricstatus","title":"MetricStatus","text":"class <code>lightkube.models.autoscaling_v2.MetricStatus</code>(type, containerResource=None, external=None, object=None, pods=None, resource=None) <p>MetricStatus describes the last-read state of a single metric.</p> <p>parameters</p> <ul> <li>type <code>str</code> - type is the type of metric source.  It will be one of \"ContainerResource\",   \"External\", \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching   field in the object. Note: \"ContainerResource\" type is available on when the   feature-gate HPAContainerMetrics is enabled</li> <li>containerResource <code>Optional[ContainerResourceMetricStatus]</code> - container resource refers to a resource metric (such as those specified in   requests and limits) known to Kubernetes describing a single container in each   pod in the current scale target (e.g. CPU or memory). Such metrics are built   in to Kubernetes, and have special scaling options on top of those available   to normal per-pod metrics using the \"pods\" source.</li> <li>external <code>Optional[ExternalMetricStatus]</code> - external refers to a global metric that is not associated with any Kubernetes   object. It allows autoscaling based on information coming from components   running outside of cluster (for example length of queue in cloud messaging   service, or QPS from loadbalancer running outside of cluster).</li> <li>object <code>Optional[ObjectMetricStatus]</code> - object refers to a metric describing a single kubernetes object (for example,   hits-per-second on an Ingress object).</li> <li>pods <code>Optional[PodsMetricStatus]</code> - pods refers to a metric describing each pod in the current scale target (for   example, transactions-processed-per-second).  The values will be averaged   together before being compared to the target value.</li> <li>resource <code>Optional[ResourceMetricStatus]</code> - resource refers to a resource metric (such as those specified in requests and   limits) known to Kubernetes describing each pod in the current scale target   (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have   special scaling options on top of those available to normal per-pod metrics   using the \"pods\" source.</li> </ul>"},{"location":"models/autoscaling_v2/#metrictarget","title":"MetricTarget","text":"class <code>lightkube.models.autoscaling_v2.MetricTarget</code>(type, averageUtilization=None, averageValue=None, value=None) <p>MetricTarget defines the target value, average value, or average utilization of a specific metric</p> <p>parameters</p> <ul> <li>type <code>str</code> - type represents whether the metric type is Utilization, Value, or AverageValue</li> <li>averageUtilization <code>Optional[int]</code> - averageUtilization is the target value of the average of the resource metric   across all relevant pods, represented as a percentage of the requested value   of the resource for the pods. Currently only valid for Resource metric source   type</li> <li>averageValue <code>Optional[resource.Quantity]</code> - averageValue is the target value of the average of the metric across all   relevant pods (as a quantity)</li> <li>value <code>Optional[resource.Quantity]</code> - value is the target value of the metric (as a quantity).</li> </ul>"},{"location":"models/autoscaling_v2/#metricvaluestatus","title":"MetricValueStatus","text":"class <code>lightkube.models.autoscaling_v2.MetricValueStatus</code>(averageUtilization=None, averageValue=None, value=None) <p>MetricValueStatus holds the current value for a metric</p> <p>parameters</p> <ul> <li>averageUtilization <code>Optional[int]</code> - currentAverageUtilization is the current value of the average of the resource   metric across all relevant pods, represented as a percentage of the requested   value of the resource for the pods.</li> <li>averageValue <code>Optional[resource.Quantity]</code> - averageValue is the current value of the average of the metric across all   relevant pods (as a quantity)</li> <li>value <code>Optional[resource.Quantity]</code> - value is the current value of the metric (as a quantity).</li> </ul>"},{"location":"models/autoscaling_v2/#objectmetricsource","title":"ObjectMetricSource","text":"class <code>lightkube.models.autoscaling_v2.ObjectMetricSource</code>(describedObject, metric, target) <p>ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).</p> <p>parameters</p> <ul> <li>describedObject <code>CrossVersionObjectReference</code> - describedObject specifies the descriptions of a object,such as kind,name   apiVersion</li> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> <li>target <code>MetricTarget</code> - target specifies the target value for the given metric</li> </ul>"},{"location":"models/autoscaling_v2/#objectmetricstatus","title":"ObjectMetricStatus","text":"class <code>lightkube.models.autoscaling_v2.ObjectMetricStatus</code>(current, describedObject, metric) <p>ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).</p> <p>parameters</p> <ul> <li>current <code>MetricValueStatus</code> - current contains the current value for the given metric</li> <li>describedObject <code>CrossVersionObjectReference</code> - DescribedObject specifies the descriptions of a object,such as kind,name   apiVersion</li> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> </ul>"},{"location":"models/autoscaling_v2/#podsmetricsource","title":"PodsMetricSource","text":"class <code>lightkube.models.autoscaling_v2.PodsMetricSource</code>(metric, target) <p>PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.</p> <p>parameters</p> <ul> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> <li>target <code>MetricTarget</code> - target specifies the target value for the given metric</li> </ul>"},{"location":"models/autoscaling_v2/#podsmetricstatus","title":"PodsMetricStatus","text":"class <code>lightkube.models.autoscaling_v2.PodsMetricStatus</code>(current, metric) <p>PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).</p> <p>parameters</p> <ul> <li>current <code>MetricValueStatus</code> - current contains the current value for the given metric</li> <li>metric <code>MetricIdentifier</code> - metric identifies the target metric by name and selector</li> </ul>"},{"location":"models/autoscaling_v2/#resourcemetricsource","title":"ResourceMetricSource","text":"class <code>lightkube.models.autoscaling_v2.ResourceMetricSource</code>(name, target) <p>ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the name of the resource in question.</li> <li>target <code>MetricTarget</code> - target specifies the target value for the given metric</li> </ul>"},{"location":"models/autoscaling_v2/#resourcemetricstatus","title":"ResourceMetricStatus","text":"class <code>lightkube.models.autoscaling_v2.ResourceMetricStatus</code>(current, name) <p>ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.</p> <p>parameters</p> <ul> <li>current <code>MetricValueStatus</code> - current contains the current value for the given metric</li> <li>name <code>str</code> - name is the name of the resource in question.</li> </ul>"},{"location":"models/batch_v1/","title":"batch_v1","text":""},{"location":"models/batch_v1/#cronjob","title":"CronJob","text":"class <code>lightkube.models.batch_v1.CronJob</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>CronJob represents the configuration of a single cron job.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[CronJobSpec]</code> - Specification of the desired behavior of a cron job, including the schedule.   More info</li> <li>status <code>Optional[CronJobStatus]</code> - Current status of a cron job. More info</li> </ul>"},{"location":"models/batch_v1/#cronjoblist","title":"CronJobList","text":"class <code>lightkube.models.batch_v1.CronJobList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CronJobList is a collection of cron jobs.</p> <p>parameters</p> <ul> <li>items <code>CronJob</code> - items is the list of CronJobs.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/batch_v1/#cronjobspec","title":"CronJobSpec","text":"class <code>lightkube.models.batch_v1.CronJobSpec</code>(jobTemplate, schedule, concurrencyPolicy=None, failedJobsHistoryLimit=None, startingDeadlineSeconds=None, successfulJobsHistoryLimit=None, suspend=None, timeZone=None) <p>CronJobSpec describes how the job execution will look like and when it will actually run.</p> <p>parameters</p> <ul> <li>jobTemplate <code>JobTemplateSpec</code> - Specifies the job that will be created when executing a CronJob.</li> <li>schedule <code>str</code> - The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.</li> <li>concurrencyPolicy <code>Optional[str]</code> - Specifies how to treat concurrent executions of a Job. Valid values are:</li> <li>\"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids   concurrent runs, skipping next run if previous run hasn't finished yet; -   \"Replace\": cancels currently running job and replaces it with a new one</li> <li>failedJobsHistoryLimit <code>Optional[int]</code> - The number of failed finished jobs to retain. Value must be non-negative   integer. Defaults to 1.</li> <li>startingDeadlineSeconds <code>Optional[int]</code> - Optional deadline in seconds for starting the job if it misses scheduled time   for any reason.  Missed jobs executions will be counted as failed ones.</li> <li>successfulJobsHistoryLimit <code>Optional[int]</code> - The number of successful finished jobs to retain. Value must be non-negative   integer. Defaults to 3.</li> <li>suspend <code>Optional[bool]</code> - This flag tells the controller to suspend subsequent executions, it does not   apply to already started executions.  Defaults to false.</li> <li>timeZone <code>Optional[str]</code> - The time zone name for the given schedule, see   https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. If not   specified, this will default to the time zone of the kube-controller-manager   process. The set of valid time zone names and the time zone offset is loaded   from the system-wide time zone database by the API server during CronJob   validation and the controller manager during execution. If no system-wide time   zone database can be found a bundled version of the database is used instead.   If the time zone name becomes invalid during the lifetime of a CronJob or due   to a change in host configuration, the controller will stop creating new new   Jobs and will create a system event with the reason UnknownTimeZone. More   information can be found in   https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones</li> </ul>"},{"location":"models/batch_v1/#cronjobstatus","title":"CronJobStatus","text":"class <code>lightkube.models.batch_v1.CronJobStatus</code>(active=None, lastScheduleTime=None, lastSuccessfulTime=None) <p>CronJobStatus represents the current state of a cron job.</p> <p>parameters</p> <ul> <li>active <code>Optional[List[core_v1.ObjectReference]]</code> - A list of pointers to currently running jobs.</li> <li>lastScheduleTime <code>Optional[meta_v1.Time]</code> - Information when was the last time the job was successfully scheduled.</li> <li>lastSuccessfulTime <code>Optional[meta_v1.Time]</code> - Information when was the last time the job successfully completed.</li> </ul>"},{"location":"models/batch_v1/#job","title":"Job","text":"class <code>lightkube.models.batch_v1.Job</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Job represents the configuration of a single job.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[JobSpec]</code> - Specification of the desired behavior of a job. More info</li> <li>status <code>Optional[JobStatus]</code> - Current status of a job. More info</li> </ul>"},{"location":"models/batch_v1/#jobcondition","title":"JobCondition","text":"class <code>lightkube.models.batch_v1.JobCondition</code>(status, type, lastProbeTime=None, lastTransitionTime=None, message=None, reason=None) <p>JobCondition describes current state of a job.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of job condition, Complete or Failed.</li> <li>lastProbeTime <code>Optional[meta_v1.Time]</code> - Last time the condition was checked.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transit from one status to another.</li> <li>message <code>Optional[str]</code> - Human readable message indicating details about last transition.</li> <li>reason <code>Optional[str]</code> - (brief) reason for the condition's last transition.</li> </ul>"},{"location":"models/batch_v1/#joblist","title":"JobList","text":"class <code>lightkube.models.batch_v1.JobList</code>(items, apiVersion=None, kind=None, metadata=None) <p>JobList is a collection of jobs.</p> <p>parameters</p> <ul> <li>items <code>Job</code> - items is the list of Jobs.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/batch_v1/#jobspec","title":"JobSpec","text":"class <code>lightkube.models.batch_v1.JobSpec</code>(template, activeDeadlineSeconds=None, backoffLimit=None, backoffLimitPerIndex=None, completionMode=None, completions=None, manualSelector=None, maxFailedIndexes=None, parallelism=None, podFailurePolicy=None, podReplacementPolicy=None, selector=None, suspend=None, ttlSecondsAfterFinished=None) <p>JobSpec describes how the job execution will look like.</p> <p>parameters</p> <ul> <li>template <code>core_v1.PodTemplateSpec</code> - Describes the pod that will be created when executing a job. The only allowed   template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info</li> <li>activeDeadlineSeconds <code>Optional[int]</code> - Specifies the duration in seconds relative to the startTime that the job may   be continuously active before the system tries to terminate it; value must be   positive integer. If a Job is suspended (at creation or through an update),   this timer will effectively be stopped and reset when the Job is resumed   again.</li> <li>backoffLimit <code>Optional[int]</code> - Specifies the number of retries before marking this job failed. Defaults to 6</li> <li>backoffLimitPerIndex <code>Optional[int]</code> - Specifies the limit for the number of retries within an index before marking   this index as failed. When enabled the number of failures per index is kept in   the pod's batch.kubernetes.io/job-index-failure-count annotation. It can only   be set when Job's completionMode=Indexed, and the Pod's restart policy is   Never. The field is immutable. This field is beta-level. It can be used when   the <code>JobBackoffLimitPerIndex</code> feature gate is enabled (enabled by default).</li> <li>completionMode <code>Optional[str]</code> - completionMode specifies how Pod completions are tracked. It can be   <code>NonIndexed</code> (default) or <code>Indexed</code>.   <code>NonIndexed</code> means that the Job is considered complete when there have been   .spec.completions successfully completed Pods. Each Pod completion is   homologous to each other.   <code>Indexed</code> means that the Pods of a Job get an associated completion index from   0 to (.spec.completions - 1), available in the annotation   batch.kubernetes.io/job-completion-index. The Job is considered complete when   there is one successfully completed Pod for each index. When value is   <code>Indexed</code>, .spec.completions must be specified and <code>.spec.parallelism</code> must be   less than or equal to 10^5. In addition, The Pod name takes the form   <code>$(job-name)-$(index)-$(random-string)</code>, the Pod hostname takes the form   <code>$(job-name)-$(index)</code>.   More completion modes can be added in the future. If the Job controller   observes a mode that it doesn't recognize, which is possible during upgrades   due to version skew, the controller skips updates for the Job.</li> <li>completions <code>Optional[int]</code> - Specifies the desired number of successfully finished pods the job should be   run with.  Setting to null means that the success of any pod signals the   success of all pods, and allows parallelism to have any positive value.   Setting to 1 means that parallelism is limited to 1 and the success of that   pod signals the success of the job. More info</li> <li>manualSelector <code>Optional[bool]</code> - manualSelector controls generation of pod labels and pod selectors. Leave   <code>manualSelector</code> unset unless you are certain what you are doing. When false   or unset, the system pick labels unique to this job and appends those labels   to the pod template.  When true, the user is responsible for picking unique   labels and specifying the selector.  Failure to pick a unique label may cause   this and other jobs to not function correctly.  However, You may see   <code>manualSelector=true</code> in jobs that were created with the old   <code>extensions/v1beta1</code> API. More info</li> <li>maxFailedIndexes <code>Optional[int]</code> - Specifies the maximal number of failed indexes before marking the Job as   failed, when backoffLimitPerIndex is set. Once the number of failed indexes   exceeds this number the entire Job is marked as Failed and its execution is   terminated. When left as null the job continues execution of all of its   indexes and is marked with the <code>Complete</code> Job condition. It can only be   specified when backoffLimitPerIndex is set. It can be null or up to   completions. It is required and must be less than or equal to 10^4 when is   completions greater than 10^5. This field is beta-level. It can be used when   the <code>JobBackoffLimitPerIndex</code> feature gate is enabled (enabled by default).</li> <li>parallelism <code>Optional[int]</code> - Specifies the maximum desired number of pods the job should run at any given   time. The actual number of pods running in steady state will be less than this   number when ((.spec.completions - .status.successful) &lt; .spec.parallelism),   i.e. when the work left to do is less than max parallelism. More info</li> <li>podFailurePolicy <code>Optional[PodFailurePolicy]</code> - Specifies the policy of handling failed pods. In particular, it allows to   specify the set of actions and conditions which need to be satisfied to take   the associated action. If empty, the default behaviour applies - the counter   of failed pods, represented by the jobs's .status.failed field, is incremented   and it is checked against the backoffLimit. This field cannot be used in   combination with restartPolicy=OnFailure.   This field is beta-level. It can be used when the <code>JobPodFailurePolicy</code>   feature gate is enabled (enabled by default).</li> <li>podReplacementPolicy <code>Optional[str]</code> - podReplacementPolicy specifies when to create replacement Pods. Possible   values are: - TerminatingOrFailed means that we recreate pods     when they are terminating (has a metadata.deletionTimestamp) or failed.</li> <li>Failed means to wait until a previously created Pod is fully terminated (has   phase     Failed or Succeeded) before creating a replacement Pod.   When using podFailurePolicy, Failed is the the only allowed value.   TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not   in use. This is an beta field. To use this, enable the JobPodReplacementPolicy   feature toggle. This is on by default.</li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - A label query over pods that should match the pod count. Normally, the system   sets this field for you. More info</li> <li>suspend <code>Optional[bool]</code> - suspend specifies whether the Job controller should create Pods or not. If a   Job is created with suspend set to true, no Pods are created by the Job   controller. If a Job is suspended after creation (i.e. the flag goes from   false to true), the Job controller will delete all active Pods associated with   this Job. Users must design their workload to gracefully handle this.   Suspending a Job will reset the StartTime field of the Job, effectively   resetting the ActiveDeadlineSeconds timer too. Defaults to false.</li> <li>ttlSecondsAfterFinished <code>Optional[int]</code> - ttlSecondsAfterFinished limits the lifetime of a Job that has finished   execution (either Complete or Failed). If this field is set,   ttlSecondsAfterFinished after the Job finishes, it is eligible to be   automatically deleted. When the Job is being deleted, its lifecycle guarantees   (e.g. finalizers) will be honored. If this field is unset, the Job won't be   automatically deleted. If this field is set to zero, the Job becomes eligible   to be deleted immediately after it finishes.</li> </ul>"},{"location":"models/batch_v1/#jobstatus","title":"JobStatus","text":"class <code>lightkube.models.batch_v1.JobStatus</code>(active=None, completedIndexes=None, completionTime=None, conditions=None, failed=None, failedIndexes=None, ready=None, startTime=None, succeeded=None, terminating=None, uncountedTerminatedPods=None) <p>JobStatus represents the current state of a Job.</p> <p>parameters</p> <ul> <li>active <code>Optional[int]</code> - The number of pending and running pods.</li> <li>completedIndexes <code>Optional[str]</code> - completedIndexes holds the completed indexes when .spec.completionMode =   \"Indexed\" in a text format. The indexes are represented as decimal integers   separated by commas. The numbers are listed in increasing order. Three or more   consecutive numbers are compressed and represented by the first and last   element of the series, separated by a hyphen. For example, if the completed   indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\".</li> <li>completionTime <code>Optional[meta_v1.Time]</code> - Represents time when the job was completed. It is not guaranteed to be set in   happens-before order across separate operations. It is represented in RFC3339   form and is in UTC. The completion time is only set when the job finishes   successfully.</li> <li>conditions <code>Optional[List[JobCondition]]</code> - The latest available observations of an object's current state. When a Job   fails, one of the conditions will have type \"Failed\" and status true. When a   Job is suspended, one of the conditions will have type \"Suspended\" and status   true; when the Job is resumed, the status of this condition will become false.   When a Job is completed, one of the conditions will have type \"Complete\" and   status true. More info</li> <li>failed <code>Optional[int]</code> - The number of pods which reached phase Failed.</li> <li>failedIndexes <code>Optional[str]</code> - FailedIndexes holds the failed indexes when backoffLimitPerIndex=true. The   indexes are represented in the text format analogous as for the   <code>completedIndexes</code> field, ie. they are kept as decimal integers separated by   commas. The numbers are listed in increasing order. Three or more consecutive   numbers are compressed and represented by the first and last element of the   series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4,   5 and 7, they are represented as \"1,3-5,7\". This field is beta-level. It can   be used when the <code>JobBackoffLimitPerIndex</code> feature gate is enabled (enabled by   default).</li> <li>ready <code>Optional[int]</code> - The number of pods which have a Ready condition.</li> <li>startTime <code>Optional[meta_v1.Time]</code> - Represents time when the job controller started processing a job. When a Job   is created in the suspended state, this field is not set until the first time   it is resumed. This field is reset every time a Job is resumed from   suspension. It is represented in RFC3339 form and is in UTC.</li> <li>succeeded <code>Optional[int]</code> - The number of pods which reached phase Succeeded.</li> <li>terminating <code>Optional[int]</code> - The number of pods which are terminating (in phase Pending or Running and have   a deletionTimestamp).   This field is beta-level. The job controller populates the field when the   feature gate JobPodReplacementPolicy is enabled (enabled by default).</li> <li>uncountedTerminatedPods <code>Optional[UncountedTerminatedPods]</code> - uncountedTerminatedPods holds the UIDs of Pods that have terminated but the   job controller hasn't yet accounted for in the status counters.   The job controller creates pods with a finalizer. When a pod terminates   (succeeded or failed), the controller does three steps to account for it in   the job status:</li> <li>Add the pod UID to the arrays in this field. 2. Remove the pod finalizer.</li> <li>Remove the pod UID from the arrays while increasing the corresponding       counter.   Old jobs might not be tracked using this field, in which case the field   remains null.</li> </ul>"},{"location":"models/batch_v1/#jobtemplatespec","title":"JobTemplateSpec","text":"class <code>lightkube.models.batch_v1.JobTemplateSpec</code>(metadata=None, spec=None) <p>JobTemplateSpec describes the data a Job should have when created from a template</p> <p>parameters</p> <ul> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata of the jobs created from this template. More info</li> <li>spec <code>Optional[JobSpec]</code> - Specification of the desired behavior of the job. More info</li> </ul>"},{"location":"models/batch_v1/#podfailurepolicy","title":"PodFailurePolicy","text":"class <code>lightkube.models.batch_v1.PodFailurePolicy</code>(rules) <p>PodFailurePolicy describes how failed pods influence the backoffLimit.</p> <p>parameters</p> <ul> <li>rules <code>PodFailurePolicyRule</code> - A list of pod failure policy rules. The rules are evaluated in order. Once a   rule matches a Pod failure, the remaining of the rules are ignored. When no   rule matches the Pod failure, the default handling applies - the counter of   pod failures is incremented and it is checked against the backoffLimit. At   most 20 elements are allowed.</li> </ul>"},{"location":"models/batch_v1/#podfailurepolicyonexitcodesrequirement","title":"PodFailurePolicyOnExitCodesRequirement","text":"class <code>lightkube.models.batch_v1.PodFailurePolicyOnExitCodesRequirement</code>(operator, values, containerName=None) <p>PodFailurePolicyOnExitCodesRequirement describes the requirement for handling a failed pod based on its container exit codes. In particular, it lookups the .state.terminated.exitCode for each app container and init container status, represented by the .status.containerStatuses and .status.initContainerStatuses fields in the Pod status, respectively. Containers completed with success (exit code 0) are excluded from the requirement check.</p> <p>parameters</p> <ul> <li>operator <code>str</code> - Represents the relationship between the container exit code(s) and the   specified values. Containers completed with success (exit code 0) are excluded   from the requirement check. Possible values are:</li> <li>In: the requirement is satisfied if at least one container exit code     (might be multiple if there are multiple containers not restricted     by the 'containerName' field) is in the set of specified values.</li> <li>NotIn: the requirement is satisfied if at least one container exit code     (might be multiple if there are multiple containers not restricted     by the 'containerName' field) is not in the set of specified values.   Additional values are considered to be added in the future. Clients should   react to an unknown operator by assuming the requirement is not satisfied.</li> <li>values <code>List[int]</code> - Specifies the set of values. Each returned container exit code (might be   multiple in case of multiple containers) is checked against this set of values   with respect to the operator. The list of values must be ordered and must not   contain duplicates. Value '0' cannot be used for the In operator. At least one   element is required. At most 255 elements are allowed.</li> <li>containerName <code>Optional[str]</code> - Restricts the check for exit codes to the container with the specified name.   When null, the rule applies to all containers. When specified, it should match   one the container or initContainer names in the pod template.</li> </ul>"},{"location":"models/batch_v1/#podfailurepolicyonpodconditionspattern","title":"PodFailurePolicyOnPodConditionsPattern","text":"class <code>lightkube.models.batch_v1.PodFailurePolicyOnPodConditionsPattern</code>(status, type) <p>PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Specifies the required Pod condition status. To match a pod condition it is   required that the specified status equals the pod condition status. Defaults   to True.</li> <li>type <code>str</code> - Specifies the required Pod condition type. To match a pod condition it is   required that specified type equals the pod condition type.</li> </ul>"},{"location":"models/batch_v1/#podfailurepolicyrule","title":"PodFailurePolicyRule","text":"class <code>lightkube.models.batch_v1.PodFailurePolicyRule</code>(action, onExitCodes=None, onPodConditions=None) <p>PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.</p> <p>parameters</p> <ul> <li>action <code>str</code> - Specifies the action taken on a pod failure when the requirements are   satisfied. Possible values are:</li> <li>FailJob: indicates that the pod's job is marked as Failed and all     running pods are terminated.</li> <li>FailIndex: indicates that the pod's index is marked as Failed and will     not be restarted.     This value is beta-level. It can be used when the     <code>JobBackoffLimitPerIndex</code> feature gate is enabled (enabled by default).</li> <li>Ignore: indicates that the counter towards the .backoffLimit is not     incremented and a replacement pod is created.</li> <li>Count: indicates that the pod is handled in the default way - the     counter towards the .backoffLimit is incremented.   Additional values are considered to be added in the future. Clients should   react to an unknown action by skipping the rule.</li> <li>onExitCodes <code>Optional[PodFailurePolicyOnExitCodesRequirement]</code> - Represents the requirement on the container exit codes.</li> <li>onPodConditions <code>Optional[List[PodFailurePolicyOnPodConditionsPattern]]</code> - Represents the requirement on the pod conditions. The requirement is   represented as a list of pod condition patterns. The requirement is satisfied   if at least one pattern matches an actual pod condition. At most 20 elements   are allowed.</li> </ul>"},{"location":"models/batch_v1/#uncountedterminatedpods","title":"UncountedTerminatedPods","text":"class <code>lightkube.models.batch_v1.UncountedTerminatedPods</code>(failed=None, succeeded=None) <p>UncountedTerminatedPods holds UIDs of Pods that have terminated but haven't been accounted in Job status counters.</p> <p>parameters</p> <ul> <li>failed <code>Optional[List[str]]</code> - failed holds UIDs of failed Pods.</li> <li>succeeded <code>Optional[List[str]]</code> - succeeded holds UIDs of succeeded Pods.</li> </ul>"},{"location":"models/certificates_v1/","title":"certificates_v1","text":""},{"location":"models/certificates_v1/#certificatesigningrequest","title":"CertificateSigningRequest","text":"class <code>lightkube.models.certificates_v1.CertificateSigningRequest</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.</p> <p>Kubelets use this API to obtain:  1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).  2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).</p> <p>This API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.</p> <p>parameters</p> <ul> <li>spec <code>CertificateSigningRequestSpec</code> - spec contains the certificate request, and is immutable after creation. Only   the request, signerName, expirationSeconds, and usages fields can be set on   creation. Other fields are derived by Kubernetes and cannot be modified by   users.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> -</li> <li>status <code>Optional[CertificateSigningRequestStatus]</code> - status contains information about whether the request is approved or denied,   and the certificate issued by the signer, or the failure condition indicating   signer failure.</li> </ul>"},{"location":"models/certificates_v1/#certificatesigningrequestcondition","title":"CertificateSigningRequestCondition","text":"class <code>lightkube.models.certificates_v1.CertificateSigningRequestCondition</code>(status, type, lastTransitionTime=None, lastUpdateTime=None, message=None, reason=None) <p>CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object</p> <p>parameters</p> <ul> <li>status <code>str</code> - status of the condition, one of True, False, Unknown. Approved, Denied, and   Failed conditions may not be \"False\" or \"Unknown\".</li> <li>type <code>str</code> - type of the condition. Known conditions are \"Approved\", \"Denied\", and   \"Failed\".   An \"Approved\" condition is added via the /approval subresource, indicating the   request was approved and should be issued by the signer.   A \"Denied\" condition is added via the /approval subresource, indicating the   request was denied and should not be issued by the signer.   A \"Failed\" condition is added via the /status subresource, indicating the   signer failed to issue the certificate.   Approved and Denied conditions are mutually exclusive. Approved, Denied, and   Failed conditions cannot be removed once added.   Only one condition of a given type is allowed.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - lastTransitionTime is the time the condition last transitioned from one status   to another. If unset, when a new condition type is added or an existing   condition's status is changed, the server defaults this to the current time.</li> <li>lastUpdateTime <code>Optional[meta_v1.Time]</code> - lastUpdateTime is the time of the last update to this condition</li> <li>message <code>Optional[str]</code> - message contains a human readable message with details about the request state</li> <li>reason <code>Optional[str]</code> - reason indicates a brief reason for the request state</li> </ul>"},{"location":"models/certificates_v1/#certificatesigningrequestlist","title":"CertificateSigningRequestList","text":"class <code>lightkube.models.certificates_v1.CertificateSigningRequestList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CertificateSigningRequestList is a collection of CertificateSigningRequest objects</p> <p>parameters</p> <ul> <li>items <code>CertificateSigningRequest</code> - items is a collection of CertificateSigningRequest objects</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> -</li> </ul>"},{"location":"models/certificates_v1/#certificatesigningrequestspec","title":"CertificateSigningRequestSpec","text":"class <code>lightkube.models.certificates_v1.CertificateSigningRequestSpec</code>(request, signerName, expirationSeconds=None, extra=None, groups=None, uid=None, usages=None, username=None) <p>CertificateSigningRequestSpec contains the certificate request.</p> <p>parameters</p> <ul> <li>request <code>str</code> - request contains an x509 certificate signing request encoded in a \"CERTIFICATE   REQUEST\" PEM block. When serialized as JSON or YAML, the data is additionally   base64-encoded.</li> <li>signerName <code>str</code> - signerName indicates the requested signer, and is a qualified name.   List/watch requests for CertificateSigningRequests can filter on this field   using a \"spec.signerName=NAME\" fieldSelector.   Well-known Kubernetes signers are:</li> <li>\"kubernetes.io/kube-apiserver-client\": issues client certificates that can   be used to authenticate to kube-apiserver.     Requests for this signer are never auto-approved by kube-controller-manager,   can be issued by the \"csrsigning\" controller in kube-controller-manager.</li> <li>\"kubernetes.io/kube-apiserver-client-kubelet\": issues client certificates   that kubelets use to authenticate to kube-apiserver.     Requests for this signer can be auto-approved by the \"csrapproving\"   controller in kube-controller-manager, and can be issued by the \"csrsigning\"   controller in kube-controller-manager.</li> <li>\"kubernetes.io/kubelet-serving\" issues serving certificates that kubelets   use to serve TLS endpoints, which kube-apiserver can connect to securely.     Requests for this signer are never auto-approved by kube-controller-manager,   and can be issued by the \"csrsigning\" controller in kube-controller-manager.   More details are available at   https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers   Custom signerNames can also be specified. The signer defines:</li> <li>Trust distribution: how trust (CA bundles) are distributed.</li> <li>Permitted subjects: and behavior when a disallowed subject is requested.</li> <li>Required, permitted, or forbidden x509 extensions in the request   (including whether subjectAltNames are allowed, which types, restrictions on   allowed values) and behavior when a disallowed extension is requested.</li> <li>Required, permitted, or forbidden key usages / extended key usages.</li> <li>Expiration/certificate lifetime: whether it is fixed by the signer,   configurable by the admin.</li> <li>Whether or not requests for CA certificates are allowed.</li> <li>expirationSeconds <code>Optional[int]</code> - expirationSeconds is the requested duration of validity of the issued   certificate. The certificate signer may issue a certificate with a different   validity duration so a client must check the delta between the notBefore and   and notAfter fields in the issued certificate to determine the actual   duration.   The v1.22+ in-tree implementations of the well-known Kubernetes signers will   honor this field as long as the requested duration is not greater than the   maximum duration they will honor per the --cluster-signing-duration CLI flag   to the Kubernetes controller manager.   Certificate signers may not honor this field for various reasons:<ol> <li>Old signer that is unaware of the field (such as the in-tree    implementations prior to v1.22)</li> <li>Signer whose configured maximum is shorter than the requested duration</li> <li>Signer whose configured minimum is longer than the requested duration   The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.</li> </ol> </li> <li>extra <code>Optional[dict]</code> - extra contains extra attributes of the user that created the   CertificateSigningRequest. Populated by the API server on creation and   immutable.</li> <li>groups <code>Optional[List[str]]</code> - groups contains group membership of the user that created the   CertificateSigningRequest. Populated by the API server on creation and   immutable.</li> <li>uid <code>Optional[str]</code> - uid contains the uid of the user that created the CertificateSigningRequest.   Populated by the API server on creation and immutable.</li> <li>usages <code>Optional[List[str]]</code> - usages specifies a set of key usages requested in the issued certificate.   Requests for TLS client certificates typically request: \"digital signature\",   \"key encipherment\", \"client auth\".   Requests for TLS serving certificates typically request: \"key encipherment\",   \"digital signature\", \"server auth\".   Valid values are:    \"signing\", \"digital signature\", \"content commitment\",    \"key encipherment\", \"key agreement\", \"data encipherment\",    \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\",    \"server auth\", \"client auth\",    \"code signing\", \"email protection\", \"s/mime\",    \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\",    \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"</li> <li>username <code>Optional[str]</code> - username contains the name of the user that created the   CertificateSigningRequest. Populated by the API server on creation and   immutable.</li> </ul>"},{"location":"models/certificates_v1/#certificatesigningrequeststatus","title":"CertificateSigningRequestStatus","text":"class <code>lightkube.models.certificates_v1.CertificateSigningRequestStatus</code>(certificate=None, conditions=None) <p>CertificateSigningRequestStatus contains conditions used to indicate approved/denied/failed status of the request, and the issued certificate.</p> <p>parameters</p> <ul> <li>certificate <code>Optional[str]</code> - certificate is populated with an issued certificate by the signer after an   Approved condition is present. This field is set via the /status subresource.   Once populated, this field is immutable.   If the certificate signing request is denied, a condition of type \"Denied\" is   added and this field remains empty. If the signer cannot issue the   certificate, a condition of type \"Failed\" is added and this field remains   empty.   Validation requirements:</li> <li>certificate must contain one or more PEM blocks.</li> <li>All PEM blocks must have the \"CERTIFICATE\" label, contain no headers, and   the encoded data     must be a BER-encoded ASN.1 Certificate structure as described in section 4   of RFC5280.</li> <li>Non-PEM content may appear before or after the \"CERTIFICATE\" PEM blocks   and is unvalidated,     to allow for explanatory text as described in section 5.2 of RFC7468.   If more than one PEM block is present, and the definition of the requested   spec.signerName does not indicate otherwise, the first block is the issued   certificate, and subsequent blocks should be treated as intermediate   certificates and presented in TLS handshakes.   The certificate is encoded in PEM format.   When serialized as JSON or YAML, the data is additionally base64-encoded, so   it consists of:       base64(       -----BEGIN CERTIFICATE-----       ...       -----END CERTIFICATE-----       )</li> <li>conditions <code>Optional[List[CertificateSigningRequestCondition]]</code> - conditions applied to the request. Known conditions are \"Approved\", \"Denied\",   and \"Failed\".</li> </ul>"},{"location":"models/certificates_v1alpha1/","title":"certificates_v1alpha1","text":""},{"location":"models/certificates_v1alpha1/#clustertrustbundle","title":"ClusterTrustBundle","text":"class <code>lightkube.models.certificates_v1alpha1.ClusterTrustBundle</code>(spec, apiVersion=None, kind=None, metadata=None) <p>ClusterTrustBundle is a cluster-scoped container for X.509 trust anchors (root certificates).</p> <p>ClusterTrustBundle objects are considered to be readable by any authenticated user in the cluster, because they can be mounted by pods using the <code>clusterTrustBundle</code> projection.  All service accounts have read access to ClusterTrustBundles by default.  Users who only have namespace-level access to a cluster can read ClusterTrustBundles by impersonating a serviceaccount that they have access to.</p> <p>It can be optionally associated with a particular assigner, in which case it contains one valid set of trust anchors for that signer. Signers may have multiple associated ClusterTrustBundles; each is an independent set of trust anchors for that signer. Admission control is used to enforce that only users with permissions on the signer can create or modify the corresponding bundle.</p> <p>parameters</p> <ul> <li>spec <code>ClusterTrustBundleSpec</code> - spec contains the signer (if any) and trust anchors.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - metadata contains the object metadata.</li> </ul>"},{"location":"models/certificates_v1alpha1/#clustertrustbundlelist","title":"ClusterTrustBundleList","text":"class <code>lightkube.models.certificates_v1alpha1.ClusterTrustBundleList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ClusterTrustBundleList is a collection of ClusterTrustBundle objects</p> <p>parameters</p> <ul> <li>items <code>ClusterTrustBundle</code> - items is a collection of ClusterTrustBundle objects</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - metadata contains the list metadata.</li> </ul>"},{"location":"models/certificates_v1alpha1/#clustertrustbundlespec","title":"ClusterTrustBundleSpec","text":"class <code>lightkube.models.certificates_v1alpha1.ClusterTrustBundleSpec</code>(trustBundle, signerName=None) <p>ClusterTrustBundleSpec contains the signer and trust anchors.</p> <p>parameters</p> <ul> <li>trustBundle <code>str</code> - trustBundle contains the individual X.509 trust anchors for this bundle, as   PEM bundle of PEM-wrapped, DER-formatted X.509 certificates.   The data must consist only of PEM certificate blocks that parse as valid X.509   certificates.  Each certificate must include a basic constraints extension   with the CA bit set.  The API server will reject objects that contain   duplicate certificates, or that use PEM block headers.   Users of ClusterTrustBundles, including Kubelet, are free to reorder and   deduplicate certificate blocks in this file according to their own logic, as   well as to drop PEM block headers and inter-block data.</li> <li>signerName <code>Optional[str]</code> - signerName indicates the associated signer, if any.   In order to create or update a ClusterTrustBundle that sets signerName, you   must have the following cluster-scoped permission: group=certificates.k8s.io   resource=signers resourceName= verb=attest.   If signerName is not empty, then the ClusterTrustBundle object must be named   with the signer name as a prefix (translating slashes to colons). For example,   for the signer name <code>example.com/foo</code>, valid ClusterTrustBundle object names   include <code>example.com:foo:abc</code> and <code>example.com:foo:v1</code>.   If signerName is empty, then the ClusterTrustBundle object's name must not   have such a prefix.   List/watch requests for ClusterTrustBundles can filter on this field using a   <code>spec.signerName=NAME</code> field selector."},{"location":"models/coordination_v1/","title":"coordination_v1","text":""},{"location":"models/coordination_v1/#lease","title":"Lease","text":"class <code>lightkube.models.coordination_v1.Lease</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>Lease defines a lease concept.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - More info</li> <li>spec <code>Optional[LeaseSpec]</code> - spec contains the specification of the Lease. More info</li> </ul>"},{"location":"models/coordination_v1/#leaselist","title":"LeaseList","text":"class <code>lightkube.models.coordination_v1.LeaseList</code>(items, apiVersion=None, kind=None, metadata=None) <p>LeaseList is a list of Lease objects.</p> <p>parameters</p> <ul> <li>items <code>Lease</code> - items is a list of schema objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/coordination_v1/#leasespec","title":"LeaseSpec","text":"class <code>lightkube.models.coordination_v1.LeaseSpec</code>(acquireTime=None, holderIdentity=None, leaseDurationSeconds=None, leaseTransitions=None, renewTime=None) <p>LeaseSpec is a specification of a Lease.</p> <p>parameters</p> <ul> <li>acquireTime <code>Optional[meta_v1.MicroTime]</code> - acquireTime is a time when the current lease was acquired.</li> <li>holderIdentity <code>Optional[str]</code> - holderIdentity contains the identity of the holder of a current lease.</li> <li>leaseDurationSeconds <code>Optional[int]</code> - leaseDurationSeconds is a duration that candidates for a lease need to wait to   force acquire it. This is measure against time of last observed renewTime.</li> <li>leaseTransitions <code>Optional[int]</code> - leaseTransitions is the number of transitions of a lease between holders.</li> <li>renewTime <code>Optional[meta_v1.MicroTime]</code> - renewTime is a time when the current holder of a lease has last updated the   lease.</li> </ul>"},{"location":"models/core_v1/","title":"core_v1","text":""},{"location":"models/core_v1/#awselasticblockstorevolumesource","title":"AWSElasticBlockStoreVolumeSource","text":"class <code>lightkube.models.core_v1.AWSElasticBlockStoreVolumeSource</code>(volumeID, fsType=None, partition=None, readOnly=None) <p>Represents a Persistent Disk resource in AWS.</p> <p>An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>volumeID <code>str</code> - volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS   volume). More info</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type of the volume that you want to mount. Tip:   Ensure that the filesystem type is supported by the host operating system.   Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if   unspecified. More info</li> <li>partition <code>Optional[int]</code> - partition is the partition in the volume that you want to mount. If omitted,   the default is to mount by volume name. Examples: For volume /dev/sda1, you   specify the partition as \"1\". Similarly, the volume partition for /dev/sda is   \"0\" (or you can leave the property empty).</li> <li>readOnly <code>Optional[bool]</code> - readOnly value true will force the readOnly setting in VolumeMounts. More info</li> </ul>"},{"location":"models/core_v1/#affinity","title":"Affinity","text":"class <code>lightkube.models.core_v1.Affinity</code>(nodeAffinity=None, podAffinity=None, podAntiAffinity=None) <p>Affinity is a group of affinity scheduling rules.</p> <p>parameters</p> <ul> <li>nodeAffinity <code>Optional[NodeAffinity]</code> - Describes node affinity scheduling rules for the pod.</li> <li>podAffinity <code>Optional[PodAffinity]</code> - Describes pod affinity scheduling rules (e.g. co-locate this pod in the same   node, zone, etc. as some other pod(s)).</li> <li>podAntiAffinity <code>Optional[PodAntiAffinity]</code> - Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in   the same node, zone, etc. as some other pod(s)).</li> </ul>"},{"location":"models/core_v1/#attachedvolume","title":"AttachedVolume","text":"class <code>lightkube.models.core_v1.AttachedVolume</code>(devicePath, name) <p>AttachedVolume describes a volume attached to a node</p> <p>parameters</p> <ul> <li>devicePath <code>str</code> - DevicePath represents the device path where the volume should be available</li> <li>name <code>str</code> - Name of the attached volume</li> </ul>"},{"location":"models/core_v1/#azurediskvolumesource","title":"AzureDiskVolumeSource","text":"class <code>lightkube.models.core_v1.AzureDiskVolumeSource</code>(diskName, diskURI, cachingMode=None, fsType=None, kind=None, readOnly=None) <p>AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> <p>parameters</p> <ul> <li>diskName <code>str</code> - diskName is the Name of the data disk in the blob storage</li> <li>diskURI <code>str</code> - diskURI is the URI of data disk in the blob storage</li> <li>cachingMode <code>Optional[str]</code> - cachingMode is the Host Caching mode: None, Read Only, Read Write.</li> <li>fsType <code>Optional[str]</code> - fsType is Filesystem type to mount. Must be a filesystem type supported by the   host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be   \"ext4\" if unspecified.</li> <li>kind <code>Optional[str]</code> - kind expected values are Shared: multiple blob disks per storage account   Dedicated: single blob disk per storage account  Managed: azure managed data   disk (only in managed availability set). defaults to shared</li> <li>readOnly <code>Optional[bool]</code> - readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> </ul>"},{"location":"models/core_v1/#azurefilepersistentvolumesource","title":"AzureFilePersistentVolumeSource","text":"class <code>lightkube.models.core_v1.AzureFilePersistentVolumeSource</code>(secretName, shareName, readOnly=None, secretNamespace=None) <p>AzureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> <p>parameters</p> <ul> <li>secretName <code>str</code> - secretName is the name of secret that contains Azure Storage Account Name and   Key</li> <li>shareName <code>str</code> - shareName is the azure Share Name</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> <li>secretNamespace <code>Optional[str]</code> - secretNamespace is the namespace of the secret that contains Azure Storage   Account Name and Key default is the same as the Pod</li> </ul>"},{"location":"models/core_v1/#azurefilevolumesource","title":"AzureFileVolumeSource","text":"class <code>lightkube.models.core_v1.AzureFileVolumeSource</code>(secretName, shareName, readOnly=None) <p>AzureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> <p>parameters</p> <ul> <li>secretName <code>str</code> - secretName is the  name of secret that contains Azure Storage Account Name and   Key</li> <li>shareName <code>str</code> - shareName is the azure share Name</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> </ul>"},{"location":"models/core_v1/#binding","title":"Binding","text":"class <code>lightkube.models.core_v1.Binding</code>(target, apiVersion=None, kind=None, metadata=None) <p>Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.</p> <p>parameters</p> <ul> <li>target <code>ObjectReference</code> - The target object that you want to bind to the standard object.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/core_v1/#csipersistentvolumesource","title":"CSIPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.CSIPersistentVolumeSource</code>(driver, volumeHandle, controllerExpandSecretRef=None, controllerPublishSecretRef=None, fsType=None, nodeExpandSecretRef=None, nodePublishSecretRef=None, nodeStageSecretRef=None, readOnly=None, volumeAttributes=None) <p>Represents storage that is managed by an external CSI volume driver (Beta feature)</p> <p>parameters</p> <ul> <li>driver <code>str</code> - driver is the name of the driver to use for this volume. Required.</li> <li>volumeHandle <code>str</code> - volumeHandle is the unique volume name returned by the CSI volume plugin\u2019s   CreateVolume to refer to the volume on all subsequent calls. Required.</li> <li>controllerExpandSecretRef <code>Optional[SecretReference]</code> - controllerExpandSecretRef is a reference to the secret object containing   sensitive information to pass to the CSI driver to complete the CSI   ControllerExpandVolume call. This field is optional, and may be empty if no   secret is required. If the secret object contains more than one secret, all   secrets are passed.</li> <li>controllerPublishSecretRef <code>Optional[SecretReference]</code> - controllerPublishSecretRef is a reference to the secret object containing   sensitive information to pass to the CSI driver to complete the CSI   ControllerPublishVolume and ControllerUnpublishVolume calls. This field is   optional, and may be empty if no secret is required. If the secret object   contains more than one secret, all secrets are passed.</li> <li>fsType <code>Optional[str]</code> - fsType to mount. Must be a filesystem type supported by the host operating   system. Ex. \"ext4\", \"xfs\", \"ntfs\".</li> <li>nodeExpandSecretRef <code>Optional[SecretReference]</code> - nodeExpandSecretRef is a reference to the secret object containing sensitive   information to pass to the CSI driver to complete the CSI NodeExpandVolume   call. This field is optional, may be omitted if no secret is required. If the   secret object contains more than one secret, all secrets are passed.</li> <li>nodePublishSecretRef <code>Optional[SecretReference]</code> - nodePublishSecretRef is a reference to the secret object containing sensitive   information to pass to the CSI driver to complete the CSI NodePublishVolume   and NodeUnpublishVolume calls. This field is optional, and may be empty if no   secret is required. If the secret object contains more than one secret, all   secrets are passed.</li> <li>nodeStageSecretRef <code>Optional[SecretReference]</code> - nodeStageSecretRef is a reference to the secret object containing sensitive   information to pass to the CSI driver to complete the CSI NodeStageVolume and   NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may   be empty if no secret is required. If the secret object contains more than one   secret, all secrets are passed.</li> <li>readOnly <code>Optional[bool]</code> - readOnly value to pass to ControllerPublishVolumeRequest. Defaults to false   (read/write).</li> <li>volumeAttributes <code>Optional[dict]</code> - volumeAttributes of the volume to publish.</li> </ul>"},{"location":"models/core_v1/#csivolumesource","title":"CSIVolumeSource","text":"class <code>lightkube.models.core_v1.CSIVolumeSource</code>(driver, fsType=None, nodePublishSecretRef=None, readOnly=None, volumeAttributes=None) <p>Represents a source location of a volume to mount, managed by an external CSI driver</p> <p>parameters</p> <ul> <li>driver <code>str</code> - driver is the name of the CSI driver that handles this volume. Consult with   your admin for the correct name as registered in the cluster.</li> <li>fsType <code>Optional[str]</code> - fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value   is passed to the associated CSI driver which will determine the default   filesystem to apply.</li> <li>nodePublishSecretRef <code>Optional[LocalObjectReference]</code> - nodePublishSecretRef is a reference to the secret object containing sensitive   information to pass to the CSI driver to complete the CSI NodePublishVolume   and NodeUnpublishVolume calls. This field is optional, and  may be empty if no   secret is required. If the secret object contains more than one secret, all   secret references are passed.</li> <li>readOnly <code>Optional[bool]</code> - readOnly specifies a read-only configuration for the volume. Defaults to false   (read/write).</li> <li>volumeAttributes <code>Optional[dict]</code> - volumeAttributes stores driver-specific properties that are passed to the CSI   driver. Consult your driver's documentation for supported values.</li> </ul>"},{"location":"models/core_v1/#capabilities","title":"Capabilities","text":"class <code>lightkube.models.core_v1.Capabilities</code>(add=None, drop=None) <p>Adds and removes POSIX capabilities from running containers.</p> <p>parameters</p> <ul> <li>add <code>Optional[List[str]]</code> - Added capabilities</li> <li>drop <code>Optional[List[str]]</code> - Removed capabilities</li> </ul>"},{"location":"models/core_v1/#cephfspersistentvolumesource","title":"CephFSPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.CephFSPersistentVolumeSource</code>(monitors, path=None, readOnly=None, secretFile=None, secretRef=None, user=None) <p>Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>monitors <code>List[str]</code> - monitors is Required: Monitors is a collection of Ceph monitors More info</li> <li>path <code>Optional[str]</code> - path is Optional: Used as the mounted root, rather than the full Ceph tree,   default is /</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: Defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts. More info</li> <li>secretFile <code>Optional[str]</code> - secretFile is Optional: SecretFile is the path to key ring for User, default   is /etc/ceph/user.secret More info</li> <li>secretRef <code>Optional[SecretReference]</code> - secretRef is Optional: SecretRef is reference to the authentication secret for   User, default is empty. More info</li> <li>user <code>Optional[str]</code> - user is Optional: User is the rados user name, default is admin More info</li> </ul>"},{"location":"models/core_v1/#cephfsvolumesource","title":"CephFSVolumeSource","text":"class <code>lightkube.models.core_v1.CephFSVolumeSource</code>(monitors, path=None, readOnly=None, secretFile=None, secretRef=None, user=None) <p>Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>monitors <code>List[str]</code> - monitors is Required: Monitors is a collection of Ceph monitors More info</li> <li>path <code>Optional[str]</code> - path is Optional: Used as the mounted root, rather than the full Ceph tree,   default is /</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: Defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts. More info</li> <li>secretFile <code>Optional[str]</code> - secretFile is Optional: SecretFile is the path to key ring for User, default   is /etc/ceph/user.secret More info</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef is Optional: SecretRef is reference to the authentication secret for   User, default is empty. More info</li> <li>user <code>Optional[str]</code> - user is optional: User is the rados user name, default is admin More info</li> </ul>"},{"location":"models/core_v1/#cinderpersistentvolumesource","title":"CinderPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.CinderPersistentVolumeSource</code>(volumeID, fsType=None, readOnly=None, secretRef=None) <p>Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>volumeID <code>str</code> - volumeID used to identify the volume in cinder. More info</li> <li>fsType <code>Optional[str]</code> - fsType Filesystem type to mount. Must be a filesystem type supported by the   host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to   be \"ext4\" if unspecified. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: Defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts. More info</li> <li>secretRef <code>Optional[SecretReference]</code> - secretRef is Optional: points to a secret object containing parameters used to   connect to OpenStack.</li> </ul>"},{"location":"models/core_v1/#cindervolumesource","title":"CinderVolumeSource","text":"class <code>lightkube.models.core_v1.CinderVolumeSource</code>(volumeID, fsType=None, readOnly=None, secretRef=None) <p>Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>volumeID <code>str</code> - volumeID used to identify the volume in cinder. More info</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly   inferred to be \"ext4\" if unspecified. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts. More info</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef is optional: points to a secret object containing parameters used to   connect to OpenStack.</li> </ul>"},{"location":"models/core_v1/#claimsource","title":"ClaimSource","text":"class <code>lightkube.models.core_v1.ClaimSource</code>(resourceClaimName=None, resourceClaimTemplateName=None) <p>ClaimSource describes a reference to a ResourceClaim.</p> <p>Exactly one of these fields should be set.  Consumers of this type must treat an empty object as if it has an unknown value.</p> <p>parameters</p> <ul> <li>resourceClaimName <code>Optional[str]</code> - ResourceClaimName is the name of a ResourceClaim object in the same namespace   as this pod.</li> <li>resourceClaimTemplateName <code>Optional[str]</code> - ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the   same namespace as this pod.   The template will be used to create a new ResourceClaim, which will be bound   to this pod. When this pod is deleted, the ResourceClaim will also be deleted.   The pod name and resource name, along with a generated component, will be used   to form a unique name for the ResourceClaim, which will be recorded in   pod.status.resourceClaimStatuses.   This field is immutable and no changes will be made to the corresponding   ResourceClaim by the control plane after creating the ResourceClaim.</li> </ul>"},{"location":"models/core_v1/#clientipconfig","title":"ClientIPConfig","text":"class <code>lightkube.models.core_v1.ClientIPConfig</code>(timeoutSeconds=None) <p>ClientIPConfig represents the configurations of Client IP based session affinity.</p> <p>parameters</p> <ul> <li>timeoutSeconds <code>Optional[int]</code> - timeoutSeconds specifies the seconds of ClientIP type session sticky time. The   value must be &gt;0 &amp;&amp; &lt;=86400(for 1 day) if ServiceAffinity == \"ClientIP\".   Default value is 10800(for 3 hours).</li> </ul>"},{"location":"models/core_v1/#clustertrustbundleprojection","title":"ClusterTrustBundleProjection","text":"class <code>lightkube.models.core_v1.ClusterTrustBundleProjection</code>(path, labelSelector=None, name=None, optional=None, signerName=None) <p>ClusterTrustBundleProjection describes how to select a set of ClusterTrustBundle objects and project their contents into the pod filesystem.</p> <p>parameters</p> <ul> <li>path <code>str</code> - Relative path from the volume root to write the bundle.</li> <li>labelSelector <code>Optional[meta_v1.LabelSelector]</code> - Select all ClusterTrustBundles that match this label selector.  Only has   effect if signerName is set.  Mutually-exclusive with name.  If unset,   interpreted as \"match nothing\".  If set but empty, interpreted as \"match   everything\".</li> <li>name <code>Optional[str]</code> - Select a single ClusterTrustBundle by object name.  Mutually-exclusive with   signerName and labelSelector.</li> <li>optional <code>Optional[bool]</code> - If true, don't block pod startup if the referenced ClusterTrustBundle(s)   aren't available.  If using name, then the named ClusterTrustBundle is allowed   not to exist.  If using signerName, then the combination of signerName and   labelSelector is allowed to match zero ClusterTrustBundles.</li> <li>signerName <code>Optional[str]</code> - Select all ClusterTrustBundles that match this signer name. Mutually-exclusive   with name.  The contents of all selected ClusterTrustBundles will be unified   and deduplicated.</li> </ul>"},{"location":"models/core_v1/#componentcondition","title":"ComponentCondition","text":"class <code>lightkube.models.core_v1.ComponentCondition</code>(status, type, error=None, message=None) <p>Information about the condition of a component.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition for a component. Valid values for \"Healthy\": \"True\",   \"False\", or \"Unknown\".</li> <li>type <code>str</code> - Type of condition for a component. Valid value: \"Healthy\"</li> <li>error <code>Optional[str]</code> - Condition error code for a component. For example, a health check error code.</li> <li>message <code>Optional[str]</code> - Message about the condition for a component. For example, information about a   health check.</li> </ul>"},{"location":"models/core_v1/#componentstatus","title":"ComponentStatus","text":"class <code>lightkube.models.core_v1.ComponentStatus</code>(apiVersion=None, conditions=None, kind=None, metadata=None) <p>ComponentStatus (and ComponentStatusList) holds the cluster validation info. Deprecated: This API is deprecated in v1.19+</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>conditions <code>Optional[List[ComponentCondition]]</code> - List of component conditions observed</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/core_v1/#componentstatuslist","title":"ComponentStatusList","text":"class <code>lightkube.models.core_v1.ComponentStatusList</code>(items, apiVersion=None, kind=None, metadata=None) <p>Status of all the conditions for the component as a list of ComponentStatus objects. Deprecated: This API is deprecated in v1.19+</p> <p>parameters</p> <ul> <li>items <code>ComponentStatus</code> - List of ComponentStatus objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#configmap","title":"ConfigMap","text":"class <code>lightkube.models.core_v1.ConfigMap</code>(apiVersion=None, binaryData=None, data=None, immutable=None, kind=None, metadata=None) <p>ConfigMap holds configuration data for pods to consume.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>binaryData <code>Optional[dict]</code> - BinaryData contains the binary data. Each key must consist of alphanumeric   characters, '-', '' or '.'. BinaryData can contain byte sequences that are   not in the UTF-8 range. The keys stored in BinaryData must not overlap with   the ones in the Data field, this is enforced during validation process. Using   this field will require 1.10+ apiserver and kubelet. <li>data <code>Optional[dict]</code> - Data contains the configuration data. Each key must consist of alphanumeric   characters, '-', '' or '.'. Values with non-UTF-8 byte sequences must use the   BinaryData field. The keys stored in Data must not overlap with the keys in   the BinaryData field, this is enforced during validation process.</li> <li>immutable <code>Optional[bool]</code> - Immutable, if set to true, ensures that data stored in the ConfigMap cannot be   updated (only object metadata can be modified). If not set to true, the field   can be modified at any time. Defaulted to nil.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li>"},{"location":"models/core_v1/#configmapenvsource","title":"ConfigMapEnvSource","text":"class <code>lightkube.models.core_v1.ConfigMapEnvSource</code>(name=None, optional=None) <p>ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.</p> <p>The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - Specify whether the ConfigMap must be defined</li> </ul>"},{"location":"models/core_v1/#configmapkeyselector","title":"ConfigMapKeySelector","text":"class <code>lightkube.models.core_v1.ConfigMapKeySelector</code>(key, name=None, optional=None) <p>Selects a key from a ConfigMap.</p> <p>parameters</p> <ul> <li>key <code>str</code> - The key to select.</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - Specify whether the ConfigMap or its key must be defined</li> </ul>"},{"location":"models/core_v1/#configmaplist","title":"ConfigMapList","text":"class <code>lightkube.models.core_v1.ConfigMapList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ConfigMapList is a resource containing a list of ConfigMap objects.</p> <p>parameters</p> <ul> <li>items <code>ConfigMap</code> - Items is the list of ConfigMaps.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - More info</li> </ul>"},{"location":"models/core_v1/#configmapnodeconfigsource","title":"ConfigMapNodeConfigSource","text":"class <code>lightkube.models.core_v1.ConfigMapNodeConfigSource</code>(kubeletConfigKey, name, namespace, resourceVersion=None, uid=None) <p>ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration</p> <p>parameters</p> <ul> <li>kubeletConfigKey <code>str</code> - KubeletConfigKey declares which key of the referenced ConfigMap corresponds to   the KubeletConfiguration structure This field is required in all cases.</li> <li>name <code>str</code> - Name is the metadata.name of the referenced ConfigMap. This field is required   in all cases.</li> <li>namespace <code>str</code> - Namespace is the metadata.namespace of the referenced ConfigMap. This field is   required in all cases.</li> <li>resourceVersion <code>Optional[str]</code> - ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap.   This field is forbidden in Node.Spec, and required in Node.Status.</li> <li>uid <code>Optional[str]</code> - UID is the metadata.UID of the referenced ConfigMap. This field is forbidden   in Node.Spec, and required in Node.Status.</li> </ul>"},{"location":"models/core_v1/#configmapprojection","title":"ConfigMapProjection","text":"class <code>lightkube.models.core_v1.ConfigMapProjection</code>(items=None, name=None, optional=None) <p>Adapts a ConfigMap into a projected volume.</p> <p>The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.</p> <p>parameters</p> <ul> <li>items <code>Optional[List[KeyToPath]]</code> - items if unspecified, each key-value pair in the Data field of the referenced   ConfigMap will be projected into the volume as a file whose name is the key   and content is the value. If specified, the listed keys will be projected into   the specified paths, and unlisted keys will not be present. If a key is   specified which is not present in the ConfigMap, the volume setup will error   unless it is marked optional. Paths must be relative and may not contain the   '..' path or start with '..'.</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - optional specify whether the ConfigMap or its keys must be defined</li> </ul>"},{"location":"models/core_v1/#configmapvolumesource","title":"ConfigMapVolumeSource","text":"class <code>lightkube.models.core_v1.ConfigMapVolumeSource</code>(defaultMode=None, items=None, name=None, optional=None) <p>Adapts a ConfigMap into a volume.</p> <p>The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>defaultMode <code>Optional[int]</code> - defaultMode is optional: mode bits used to set permissions on created files by   default. Must be an octal value between 0000 and 0777 or a decimal value   between 0 and 511. YAML accepts both octal and decimal values, JSON requires   decimal values for mode bits. Defaults to 0644. Directories within the path   are not affected by this setting. This might be in conflict with other options   that affect the file mode, like fsGroup, and the result can be other mode bits   set.</li> <li>items <code>Optional[List[KeyToPath]]</code> - items if unspecified, each key-value pair in the Data field of the referenced   ConfigMap will be projected into the volume as a file whose name is the key   and content is the value. If specified, the listed keys will be projected into   the specified paths, and unlisted keys will not be present. If a key is   specified which is not present in the ConfigMap, the volume setup will error   unless it is marked optional. Paths must be relative and may not contain the   '..' path or start with '..'.</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - optional specify whether the ConfigMap or its keys must be defined</li> </ul>"},{"location":"models/core_v1/#container","title":"Container","text":"class <code>lightkube.models.core_v1.Container</code>(name, args=None, command=None, env=None, envFrom=None, image=None, imagePullPolicy=None, lifecycle=None, livenessProbe=None, ports=None, readinessProbe=None, resizePolicy=None, resources=None, restartPolicy=None, securityContext=None, startupProbe=None, stdin=None, stdinOnce=None, terminationMessagePath=None, terminationMessagePolicy=None, tty=None, volumeDevices=None, volumeMounts=None, workingDir=None) <p>A single application container that you want to run within a pod.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name of the container specified as a DNS_LABEL. Each container in a pod must   have a unique name (DNS_LABEL). Cannot be updated.</li> <li>args <code>Optional[List[str]]</code> - Arguments to the entrypoint. The container image's CMD is used if this is not   provided. Variable references $(VAR_NAME) are expanded using the container's   environment. If a variable cannot be resolved, the reference in the input   string will be unchanged. Double $$ are reduced to a single $, which allows   for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the   string literal \"$(VAR_NAME)\". Escaped references will never be expanded,   regardless of whether the variable exists or not. Cannot be updated. More info</li> <li>command <code>Optional[List[str]]</code> - Entrypoint array. Not executed within a shell. The container image's   ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)   are expanded using the container's environment. If a variable cannot be   resolved, the reference in the input string will be unchanged. Double $$ are   reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.   \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped   references will never be expanded, regardless of whether the variable exists   or not. Cannot be updated. More info</li> <li>env <code>Optional[List[EnvVar]]</code> - List of environment variables to set in the container. Cannot be updated.</li> <li>envFrom <code>Optional[List[EnvFromSource]]</code> - List of sources to populate environment variables in the container. The keys   defined within a source must be a C_IDENTIFIER. All invalid keys will be   reported as an event when the container is starting. When a key exists in   multiple sources, the value associated with the last source will take   precedence. Values defined by an Env with a duplicate key will take   precedence. Cannot be updated.</li> <li>image <code>Optional[str]</code> - Container image name. More info This field is optional   to allow higher level config management to default or override container   images in workload controllers like Deployments and StatefulSets.</li> <li>imagePullPolicy <code>Optional[str]</code> - Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if   :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info</li> <li>lifecycle <code>Optional[Lifecycle]</code> - Actions that the management system should take in response to container   lifecycle events. Cannot be updated.</li> <li>livenessProbe <code>Optional[Probe]</code> - Periodic probe of container liveness. Container will be restarted if the probe   fails. Cannot be updated. More info</li> <li>ports <code>Optional[List[ContainerPort]]</code> - List of ports to expose from the container. Not specifying a port here DOES   NOT prevent that port from being exposed. Any port which is listening on the   default \"0.0.0.0\" address inside a container will be accessible from the   network. Modifying this array with strategic merge patch may corrupt the data.   For more information See   https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.</li> <li>readinessProbe <code>Optional[Probe]</code> - Periodic probe of container service readiness. Container will be removed from   service endpoints if the probe fails. Cannot be updated. More info</li> <li>resizePolicy <code>Optional[List[ContainerResizePolicy]]</code> - Resources resize policy for the container.</li> <li>resources <code>Optional[ResourceRequirements]</code> - Compute Resources required by this container. Cannot be updated. More info</li> <li>restartPolicy <code>Optional[str]</code> - RestartPolicy defines the restart behavior of individual containers in a pod.   This field may only be set for init containers, and the only allowed value is   \"Always\". For non-init containers or when this field is not specified, the   restart behavior is defined by the Pod's restart policy and the container   type. Setting the RestartPolicy as \"Always\" for the init container will have   the following effect: this init container will be continually restarted on   exit until all regular containers have terminated. Once all regular containers   have completed, all init containers with restartPolicy \"Always\" will be shut   down. This lifecycle differs from normal init containers and is often referred   to as a \"sidecar\" container. Although this init container still starts in the   init container sequence, it does not wait for the container to complete before   proceeding to the next init container. Instead, the next init container starts   immediately after this init container is started, or after any startupProbe   has successfully completed.</li> <li>securityContext <code>Optional[SecurityContext]</code> - SecurityContext defines the security options the container should be run with.   If set, the fields of SecurityContext override the equivalent fields of   PodSecurityContext. More info</li> <li>startupProbe <code>Optional[Probe]</code> - StartupProbe indicates that the Pod has successfully initialized. If   specified, no other probes are executed until this completes successfully. If   this probe fails, the Pod will be restarted, just as if the livenessProbe   failed. This can be used to provide different probe parameters at the   beginning of a Pod's lifecycle, when it might take a long time to load data or   warm a cache, than during steady-state operation. This cannot be updated. More info</li> <li>stdin <code>Optional[bool]</code> - Whether this container should allocate a buffer for stdin in the container   runtime. If this is not set, reads from stdin in the container will always   result in EOF. Default is false.</li> <li>stdinOnce <code>Optional[bool]</code> - Whether the container runtime should close the stdin channel after it has been   opened by a single attach. When stdin is true the stdin stream will remain   open across multiple attach sessions. If stdinOnce is set to true, stdin is   opened on container start, is empty until the first client attaches to stdin,   and then remains open and accepts data until the client disconnects, at which   time stdin is closed and remains closed until the container is restarted. If   this flag is false, a container processes that reads from stdin will never   receive an EOF. Default is false</li> <li>terminationMessagePath <code>Optional[str]</code> - Optional: Path at which the file to which the container's termination message   will be written is mounted into the container's filesystem. Message written is   intended to be brief final status, such as an assertion failure message. Will   be truncated by the node if greater than 4096 bytes. The total message length   across all containers will be limited to 12kb. Defaults to   /dev/termination-log. Cannot be updated.</li> <li>terminationMessagePolicy <code>Optional[str]</code> - Indicate how the termination message should be populated. File will use the   contents of terminationMessagePath to populate the container status message on   both success and failure. FallbackToLogsOnError will use the last chunk of   container log output if the termination message file is empty and the   container exited with an error. The log output is limited to 2048 bytes or 80   lines, whichever is smaller. Defaults to File. Cannot be updated.</li> <li>tty <code>Optional[bool]</code> - Whether this container should allocate a TTY for itself, also requires 'stdin'   to be true. Default is false.</li> <li>volumeDevices <code>Optional[List[VolumeDevice]]</code> - volumeDevices is the list of block devices to be used by the container.</li> <li>volumeMounts <code>Optional[List[VolumeMount]]</code> - Pod volumes to mount into the container's filesystem. Cannot be updated.</li> <li>workingDir <code>Optional[str]</code> - Container's working directory. If not specified, the container runtime's   default will be used, which might be configured in the container image. Cannot   be updated.</li> </ul>"},{"location":"models/core_v1/#containerimage","title":"ContainerImage","text":"class <code>lightkube.models.core_v1.ContainerImage</code>(names=None, sizeBytes=None) <p>Describe a container image</p> <p>parameters</p> <ul> <li>names <code>Optional[List[str]]</code> - Names by which this image is known. e.g.   [\"kubernetes.example/hyperkube:v1.0.7\",   \"cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7\"]</li> <li>sizeBytes <code>Optional[int]</code> - The size of the image in bytes.</li> </ul>"},{"location":"models/core_v1/#containerport","title":"ContainerPort","text":"class <code>lightkube.models.core_v1.ContainerPort</code>(containerPort, hostIP=None, hostPort=None, name=None, protocol=None) <p>ContainerPort represents a network port in a single container.</p> <p>parameters</p> <ul> <li>containerPort <code>int</code> - Number of port to expose on the pod's IP address. This must be a valid port   number, 0 &lt; x &lt; 65536.</li> <li>hostIP <code>Optional[str]</code> - What host IP to bind the external port to.</li> <li>hostPort <code>Optional[int]</code> - Number of port to expose on the host. If specified, this must be a valid port   number, 0 &lt; x &lt; 65536. If HostNetwork is specified, this must match   ContainerPort. Most containers do not need this.</li> <li>name <code>Optional[str]</code> - If specified, this must be an IANA_SVC_NAME and unique within the pod. Each   named port in a pod must have a unique name. Name for the port that can be   referred to by services.</li> <li>protocol <code>Optional[str]</code> - Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".</li> </ul>"},{"location":"models/core_v1/#containerresizepolicy","title":"ContainerResizePolicy","text":"class <code>lightkube.models.core_v1.ContainerResizePolicy</code>(resourceName, restartPolicy) <p>ContainerResizePolicy represents resource resize policy for the container.</p> <p>parameters</p> <ul> <li>resourceName <code>str</code> - Name of the resource to which this resource resize policy applies. Supported   values: cpu, memory.</li> <li>restartPolicy <code>str</code> - Restart policy to apply when specified resource is resized. If not specified,   it defaults to NotRequired.</li> </ul>"},{"location":"models/core_v1/#containerstate","title":"ContainerState","text":"class <code>lightkube.models.core_v1.ContainerState</code>(running=None, terminated=None, waiting=None) <p>ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.</p> <p>parameters</p> <ul> <li>running <code>Optional[ContainerStateRunning]</code> - Details about a running container</li> <li>terminated <code>Optional[ContainerStateTerminated]</code> - Details about a terminated container</li> <li>waiting <code>Optional[ContainerStateWaiting]</code> - Details about a waiting container</li> </ul>"},{"location":"models/core_v1/#containerstaterunning","title":"ContainerStateRunning","text":"class <code>lightkube.models.core_v1.ContainerStateRunning</code>(startedAt=None) <p>ContainerStateRunning is a running state of a container.</p> <p>parameters</p> <ul> <li>startedAt <code>Optional[meta_v1.Time]</code> - Time at which the container was last (re-)started</li> </ul>"},{"location":"models/core_v1/#containerstateterminated","title":"ContainerStateTerminated","text":"class <code>lightkube.models.core_v1.ContainerStateTerminated</code>(exitCode, containerID=None, finishedAt=None, message=None, reason=None, signal=None, startedAt=None) <p>ContainerStateTerminated is a terminated state of a container.</p> <p>parameters</p> <ul> <li>exitCode <code>int</code> - Exit status from the last termination of the container</li> <li>containerID <code>Optional[str]</code> - Container's ID in the format '://' <li>finishedAt <code>Optional[meta_v1.Time]</code> - Time at which the container last terminated</li> <li>message <code>Optional[str]</code> - Message regarding the last termination of the container</li> <li>reason <code>Optional[str]</code> - (brief) reason from the last termination of the container</li> <li>signal <code>Optional[int]</code> - Signal from the last termination of the container</li> <li>startedAt <code>Optional[meta_v1.Time]</code> - Time at which previous execution of the container started</li>"},{"location":"models/core_v1/#containerstatewaiting","title":"ContainerStateWaiting","text":"class <code>lightkube.models.core_v1.ContainerStateWaiting</code>(message=None, reason=None) <p>ContainerStateWaiting is a waiting state of a container.</p> <p>parameters</p> <ul> <li>message <code>Optional[str]</code> - Message regarding why the container is not yet running.</li> <li>reason <code>Optional[str]</code> - (brief) reason the container is not yet running.</li> </ul>"},{"location":"models/core_v1/#containerstatus","title":"ContainerStatus","text":"class <code>lightkube.models.core_v1.ContainerStatus</code>(image, imageID, name, ready, restartCount, allocatedResources=None, containerID=None, lastState=None, resources=None, started=None, state=None) <p>ContainerStatus contains details for the current status of this container.</p> <p>parameters</p> <ul> <li>image <code>str</code> - Image is the name of container image that the container is running. The   container image may not match the image used in the PodSpec, as it may have   been resolved by the runtime. More info</li> <li>imageID <code>str</code> - ImageID is the image ID of the container's image. The image ID may not match   the image ID of the image used in the PodSpec, as it may have been resolved by   the runtime.</li> <li>name <code>str</code> - Name is a DNS_LABEL representing the unique name of the container. Each   container in a pod must have a unique name across all container types. Cannot   be updated.</li> <li>ready <code>bool</code> - Ready specifies whether the container is currently passing its readiness   check. The value will change as readiness probes keep executing. If no   readiness probes are specified, this field defaults to true once the container   is fully started (see Started field).   The value is typically used to determine whether a container is ready to   accept traffic.</li> <li>restartCount <code>int</code> - RestartCount holds the number of times the container has been restarted.   Kubelet makes an effort to always increment the value, but there are cases   when the state may be lost due to node restarts and then the value may be   reset to 0. The value is never negative.</li> <li>allocatedResources <code>Optional[dict]</code> - AllocatedResources represents the compute resources allocated for this   container by the node. Kubelet sets this value to Container.Resources.Requests   upon successful pod admission and after successfully admitting desired pod   resize.</li> <li>containerID <code>Optional[str]</code> - ContainerID is the ID of the container in the format   '://'. Where type is a container runtime identifier,   returned from Version call of CRI API (for example \"containerd\"). <li>lastState <code>Optional[ContainerState]</code> - LastTerminationState holds the last termination state of the container to help   debug container crashes and restarts. This field is not populated if the   container is still running and RestartCount is 0.</li> <li>resources <code>Optional[ResourceRequirements]</code> - Resources represents the compute resource requests and limits that have been   successfully enacted on the running container after it has been started or has   been successfully resized.</li> <li>started <code>Optional[bool]</code> - Started indicates whether the container has finished its postStart lifecycle   hook and passed its startup probe. Initialized as false, becomes true after   startupProbe is considered successful. Resets to false when the container is   restarted, or if kubelet loses state temporarily. In both cases, startup   probes will run again. Is always true when no startupProbe is defined and   container is running and has passed the postStart lifecycle hook. The null   value must be treated the same as false.</li> <li>state <code>Optional[ContainerState]</code> - State holds details about the container's current condition.</li>"},{"location":"models/core_v1/#daemonendpoint","title":"DaemonEndpoint","text":"class <code>lightkube.models.core_v1.DaemonEndpoint</code>(Port) <p>DaemonEndpoint contains information about a single Daemon endpoint.</p> <p>parameters</p> <ul> <li>Port <code>int</code> - Port number of the given endpoint.</li> </ul>"},{"location":"models/core_v1/#downwardapiprojection","title":"DownwardAPIProjection","text":"class <code>lightkube.models.core_v1.DownwardAPIProjection</code>(items=None) <p>Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.</p> <p>parameters</p> <ul> <li>items <code>Optional[List[DownwardAPIVolumeFile]]</code> - Items is a list of DownwardAPIVolume file</li> </ul>"},{"location":"models/core_v1/#downwardapivolumefile","title":"DownwardAPIVolumeFile","text":"class <code>lightkube.models.core_v1.DownwardAPIVolumeFile</code>(path, fieldRef=None, mode=None, resourceFieldRef=None) <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> <p>parameters</p> <ul> <li>path <code>str</code> - Required: Path is  the relative path name of the file to be created. Must not   be absolute or contain the '..' path. Must be utf-8 encoded. The first item of   the relative path must not start with '..'</li> <li>fieldRef <code>Optional[ObjectFieldSelector]</code> - Required: Selects a field of the pod: only annotations, labels, name and   namespace are supported.</li> <li>mode <code>Optional[int]</code> - Optional: mode bits used to set permissions on this file, must be an octal   value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts   both octal and decimal values, JSON requires decimal values for mode bits. If   not specified, the volume defaultMode will be used. This might be in conflict   with other options that affect the file mode, like fsGroup, and the result can   be other mode bits set.</li> <li>resourceFieldRef <code>Optional[ResourceFieldSelector]</code> - Selects a resource of the container: only resources limits and requests   (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently   supported.</li> </ul>"},{"location":"models/core_v1/#downwardapivolumesource","title":"DownwardAPIVolumeSource","text":"class <code>lightkube.models.core_v1.DownwardAPIVolumeSource</code>(defaultMode=None, items=None) <p>DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>defaultMode <code>Optional[int]</code> - Optional: mode bits to use on created files by default. Must be a Optional:   mode bits used to set permissions on created files by default. Must be an   octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML   accepts both octal and decimal values, JSON requires decimal values for mode   bits. Defaults to 0644. Directories within the path are not affected by this   setting. This might be in conflict with other options that affect the file   mode, like fsGroup, and the result can be other mode bits set.</li> <li>items <code>Optional[List[DownwardAPIVolumeFile]]</code> - Items is a list of downward API volume file</li> </ul>"},{"location":"models/core_v1/#emptydirvolumesource","title":"EmptyDirVolumeSource","text":"class <code>lightkube.models.core_v1.EmptyDirVolumeSource</code>(medium=None, sizeLimit=None) <p>Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>medium <code>Optional[str]</code> - medium represents what type of storage medium should back this directory. The   default is \"\" which means to use the node's default medium. Must be an empty   string (default) or Memory. More info</li> <li>sizeLimit <code>Optional[resource.Quantity]</code> - sizeLimit is the total amount of local storage required for this EmptyDir   volume. The size limit is also applicable for memory medium. The maximum usage   on memory medium EmptyDir would be the minimum value between the SizeLimit   specified here and the sum of memory limits of all containers in a pod. The   default is nil which means that the limit is undefined. More info</li> </ul>"},{"location":"models/core_v1/#endpointaddress","title":"EndpointAddress","text":"class <code>lightkube.models.core_v1.EndpointAddress</code>(ip, hostname=None, nodeName=None, targetRef=None) <p>EndpointAddress is a tuple that describes single IP address.</p> <p>parameters</p> <ul> <li>ip <code>str</code> - The IP of this endpoint. May not be loopback (127.0.0.0/8 or ::1), link-local   (169.254.0.0/16 or fe80::/10), or link-local multicast (224.0.0.0/24 or   ff02::/16).</li> <li>hostname <code>Optional[str]</code> - The Hostname of this endpoint</li> <li>nodeName <code>Optional[str]</code> - Optional: Node hosting this endpoint. This can be used to determine endpoints   local to a node.</li> <li>targetRef <code>Optional[ObjectReference]</code> - Reference to object providing the endpoint.</li> </ul>"},{"location":"models/core_v1/#endpointport","title":"EndpointPort","text":"class <code>lightkube.models.core_v1.EndpointPort</code>(port, appProtocol=None, name=None, protocol=None) <p>EndpointPort is a tuple that describes a single port.</p> <p>parameters</p> <ul> <li>port <code>int</code> - The port number of the endpoint.</li> <li>appProtocol <code>Optional[str]</code> - The application protocol for this port. This is used as a hint for   implementations to offer richer behavior for protocols that they understand.   This field follows standard Kubernetes label syntax. Valid values are either:</li> <li>Un-prefixed protocol names - reserved for IANA standard service names (as   per RFC-6335 and https://www.iana.org/assignments/service-names).</li> <li>Kubernetes-defined prefixed names:<ul> <li>'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described   in   https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-</li> <li>'kubernetes.io/ws'  - WebSocket over cleartext as described in   https://www.rfc-editor.org/rfc/rfc6455</li> <li>'kubernetes.io/wss' - WebSocket over TLS as described in   https://www.rfc-editor.org/rfc/rfc6455</li> </ul> </li> <li>Other protocols should use implementation-defined prefixed names such as   mycompany.com/my-custom-protocol.</li> <li>name <code>Optional[str]</code> - The name of this port.  This must match the 'name' field in the corresponding   ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.</li> <li>protocol <code>Optional[str]</code> - The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.</li> </ul>"},{"location":"models/core_v1/#endpointsubset","title":"EndpointSubset","text":"class <code>lightkube.models.core_v1.EndpointSubset</code>(addresses=None, notReadyAddresses=None, ports=None) <p>EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:</p> <p>{     Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],     Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]   }</p> <p>The resulting set of endpoints can be viewed as:</p> <p>a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],   b: [ 10.10.1.1:309, 10.10.2.2:309 ]</p> <p>parameters</p> <ul> <li>addresses <code>Optional[List[EndpointAddress]]</code> - IP addresses which offer the related ports that are marked as ready. These   endpoints should be considered safe for load balancers and clients to utilize.</li> <li>notReadyAddresses <code>Optional[List[EndpointAddress]]</code> - IP addresses which offer the related ports but are not currently marked as   ready because they have not yet finished starting, have recently failed a   readiness check, or have recently failed a liveness check.</li> <li>ports <code>Optional[List[EndpointPort]]</code> - Port numbers available on the related IP addresses.</li> </ul>"},{"location":"models/core_v1/#endpoints","title":"Endpoints","text":"class <code>lightkube.models.core_v1.Endpoints</code>(apiVersion=None, kind=None, metadata=None, subsets=None) <p>Endpoints is a collection of endpoints that implement the actual service. Example:</p> <p>Name: \"mysvc\",    Subsets: [      {        Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],        Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]      },      {        Addresses: [{\"ip\": \"10.10.3.3\"}],        Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]      },   ]</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>subsets <code>Optional[List[EndpointSubset]]</code> - The set of all endpoints is the union of all subsets. Addresses are placed   into subsets according to the IPs they share. A single address with multiple   ports, some of which are ready and some of which are not (because they come   from different containers) will result in the address being displayed in   different subsets for the different ports. No address will appear in both   Addresses and NotReadyAddresses in the same subset. Sets of addresses and   ports that comprise a service.</li> </ul>"},{"location":"models/core_v1/#endpointslist","title":"EndpointsList","text":"class <code>lightkube.models.core_v1.EndpointsList</code>(items, apiVersion=None, kind=None, metadata=None) <p>EndpointsList is a list of endpoints.</p> <p>parameters</p> <ul> <li>items <code>Endpoints</code> - List of endpoints.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#envfromsource","title":"EnvFromSource","text":"class <code>lightkube.models.core_v1.EnvFromSource</code>(configMapRef=None, prefix=None, secretRef=None) <p>EnvFromSource represents the source of a set of ConfigMaps</p> <p>parameters</p> <ul> <li>configMapRef <code>Optional[ConfigMapEnvSource]</code> - The ConfigMap to select from</li> <li>prefix <code>Optional[str]</code> - An optional identifier to prepend to each key in the ConfigMap. Must be a   C_IDENTIFIER.</li> <li>secretRef <code>Optional[SecretEnvSource]</code> - The Secret to select from</li> </ul>"},{"location":"models/core_v1/#envvar","title":"EnvVar","text":"class <code>lightkube.models.core_v1.EnvVar</code>(name, value=None, valueFrom=None) <p>EnvVar represents an environment variable present in a Container.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name of the environment variable. Must be a C_IDENTIFIER.</li> <li>value <code>Optional[str]</code> - Variable references $(VAR_NAME) are expanded using the previously defined   environment variables in the container and any service environment variables.   If a variable cannot be resolved, the reference in the input string will be   unchanged. Double $$ are reduced to a single $, which allows for escaping the   $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal   \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of   whether the variable exists or not. Defaults to \"\".</li> <li>valueFrom <code>Optional[EnvVarSource]</code> - Source for the environment variable's value. Cannot be used if value is not   empty.</li> </ul>"},{"location":"models/core_v1/#envvarsource","title":"EnvVarSource","text":"class <code>lightkube.models.core_v1.EnvVarSource</code>(configMapKeyRef=None, fieldRef=None, resourceFieldRef=None, secretKeyRef=None) <p>EnvVarSource represents a source for the value of an EnvVar.</p> <p>parameters</p> <ul> <li>configMapKeyRef <code>Optional[ConfigMapKeySelector]</code> - Selects a key of a ConfigMap.</li> <li>fieldRef <code>Optional[ObjectFieldSelector]</code> - Selects a field of the pod: supports metadata.name, metadata.namespace,   <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName,   spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</li> <li>resourceFieldRef <code>Optional[ResourceFieldSelector]</code> - Selects a resource of the container: only resources limits and requests   (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,   requests.memory and requests.ephemeral-storage) are currently supported.</li> <li>secretKeyRef <code>Optional[SecretKeySelector]</code> - Selects a key of a secret in the pod's namespace</li> </ul>"},{"location":"models/core_v1/#ephemeralcontainer","title":"EphemeralContainer","text":"class <code>lightkube.models.core_v1.EphemeralContainer</code>(name, args=None, command=None, env=None, envFrom=None, image=None, imagePullPolicy=None, lifecycle=None, livenessProbe=None, ports=None, readinessProbe=None, resizePolicy=None, resources=None, restartPolicy=None, securityContext=None, startupProbe=None, stdin=None, stdinOnce=None, targetContainerName=None, terminationMessagePath=None, terminationMessagePolicy=None, tty=None, volumeDevices=None, volumeMounts=None, workingDir=None) <p>An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.</p> <p>To add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name of the ephemeral container specified as a DNS_LABEL. This name must be   unique among all containers, init containers and ephemeral containers.</li> <li>args <code>Optional[List[str]]</code> - Arguments to the entrypoint. The image's CMD is used if this is not provided.   Variable references $(VAR_NAME) are expanded using the container's   environment. If a variable cannot be resolved, the reference in the input   string will be unchanged. Double $$ are reduced to a single $, which allows   for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the   string literal \"$(VAR_NAME)\". Escaped references will never be expanded,   regardless of whether the variable exists or not. Cannot be updated. More info</li> <li>command <code>Optional[List[str]]</code> - Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used   if this is not provided. Variable references $(VAR_NAME) are expanded using   the container's environment. If a variable cannot be resolved, the reference   in the input string will be unchanged. Double $$ are reduced to a single $,   which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will   produce the string literal \"$(VAR_NAME)\". Escaped references will never be   expanded, regardless of whether the variable exists or not. Cannot be updated.   More info</li> <li>env <code>Optional[List[EnvVar]]</code> - List of environment variables to set in the container. Cannot be updated.</li> <li>envFrom <code>Optional[List[EnvFromSource]]</code> - List of sources to populate environment variables in the container. The keys   defined within a source must be a C_IDENTIFIER. All invalid keys will be   reported as an event when the container is starting. When a key exists in   multiple sources, the value associated with the last source will take   precedence. Values defined by an Env with a duplicate key will take   precedence. Cannot be updated.</li> <li>image <code>Optional[str]</code> - Container image name. More info</li> <li>imagePullPolicy <code>Optional[str]</code> - Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if   :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info</li> <li>lifecycle <code>Optional[Lifecycle]</code> - Lifecycle is not allowed for ephemeral containers.</li> <li>livenessProbe <code>Optional[Probe]</code> - Probes are not allowed for ephemeral containers.</li> <li>ports <code>Optional[List[ContainerPort]]</code> - Ports are not allowed for ephemeral containers.</li> <li>readinessProbe <code>Optional[Probe]</code> - Probes are not allowed for ephemeral containers.</li> <li>resizePolicy <code>Optional[List[ContainerResizePolicy]]</code> - Resources resize policy for the container.</li> <li>resources <code>Optional[ResourceRequirements]</code> - Resources are not allowed for ephemeral containers. Ephemeral containers use   spare resources already allocated to the pod.</li> <li>restartPolicy <code>Optional[str]</code> - Restart policy for the container to manage the restart behavior of each   container within a pod. This may only be set for init containers. You cannot   set this field on ephemeral containers.</li> <li>securityContext <code>Optional[SecurityContext]</code> - Optional: SecurityContext defines the security options the ephemeral container   should be run with. If set, the fields of SecurityContext override the   equivalent fields of PodSecurityContext.</li> <li>startupProbe <code>Optional[Probe]</code> - Probes are not allowed for ephemeral containers.</li> <li>stdin <code>Optional[bool]</code> - Whether this container should allocate a buffer for stdin in the container   runtime. If this is not set, reads from stdin in the container will always   result in EOF. Default is false.</li> <li>stdinOnce <code>Optional[bool]</code> - Whether the container runtime should close the stdin channel after it has been   opened by a single attach. When stdin is true the stdin stream will remain   open across multiple attach sessions. If stdinOnce is set to true, stdin is   opened on container start, is empty until the first client attaches to stdin,   and then remains open and accepts data until the client disconnects, at which   time stdin is closed and remains closed until the container is restarted. If   this flag is false, a container processes that reads from stdin will never   receive an EOF. Default is false</li> <li>targetContainerName <code>Optional[str]</code> - If set, the name of the container from PodSpec that this ephemeral container   targets. The ephemeral container will be run in the namespaces (IPC, PID, etc)   of this container. If not set then the ephemeral container uses the namespaces   configured in the Pod spec.   The container runtime must implement support for this feature. If the runtime   does not support namespace targeting then the result of setting this field is   undefined.</li> <li>terminationMessagePath <code>Optional[str]</code> - Optional: Path at which the file to which the container's termination message   will be written is mounted into the container's filesystem. Message written is   intended to be brief final status, such as an assertion failure message. Will   be truncated by the node if greater than 4096 bytes. The total message length   across all containers will be limited to 12kb. Defaults to   /dev/termination-log. Cannot be updated.</li> <li>terminationMessagePolicy <code>Optional[str]</code> - Indicate how the termination message should be populated. File will use the   contents of terminationMessagePath to populate the container status message on   both success and failure. FallbackToLogsOnError will use the last chunk of   container log output if the termination message file is empty and the   container exited with an error. The log output is limited to 2048 bytes or 80   lines, whichever is smaller. Defaults to File. Cannot be updated.</li> <li>tty <code>Optional[bool]</code> - Whether this container should allocate a TTY for itself, also requires 'stdin'   to be true. Default is false.</li> <li>volumeDevices <code>Optional[List[VolumeDevice]]</code> - volumeDevices is the list of block devices to be used by the container.</li> <li>volumeMounts <code>Optional[List[VolumeMount]]</code> - Pod volumes to mount into the container's filesystem. Subpath mounts are not   allowed for ephemeral containers. Cannot be updated.</li> <li>workingDir <code>Optional[str]</code> - Container's working directory. If not specified, the container runtime's   default will be used, which might be configured in the container image. Cannot   be updated.</li> </ul>"},{"location":"models/core_v1/#ephemeralvolumesource","title":"EphemeralVolumeSource","text":"class <code>lightkube.models.core_v1.EphemeralVolumeSource</code>(volumeClaimTemplate=None) <p>Represents an ephemeral volume that is handled by a normal storage driver.</p> <p>parameters</p> <ul> <li>volumeClaimTemplate <code>Optional[PersistentVolumeClaimTemplate]</code> - Will be used to create a stand-alone PVC to provision the volume. The pod in   which this EphemeralVolumeSource is embedded will be the owner of the PVC,   i.e. the PVC will be deleted together with the pod.  The name of the PVC will   be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the   <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the   concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will not be used   for the pod to avoid using an unrelated volume by mistake. Starting the pod is   then blocked until the unrelated PVC is removed. If such a pre-created PVC is   meant to be used by the pod, the PVC has to updated with an owner reference to   the pod once the pod exists. Normally this should not be necessary, but it may   be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC   after it has been created.   Required, must not be nil.</li> </ul>"},{"location":"models/core_v1/#event","title":"Event","text":"class <code>lightkube.models.core_v1.Event</code>(involvedObject, metadata, action=None, apiVersion=None, count=None, eventTime=None, firstTimestamp=None, kind=None, lastTimestamp=None, message=None, reason=None, related=None, reportingComponent=None, reportingInstance=None, series=None, source=None, type=None) <p>Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.</p> <p>parameters</p> <ul> <li>involvedObject <code>ObjectReference</code> - The object that this event is about.</li> <li>metadata <code>meta_v1.ObjectMeta</code> - Standard object's metadata. More info</li> <li>action <code>Optional[str]</code> - What action was taken/failed regarding to the Regarding object.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>count <code>Optional[int]</code> - The number of times this event has occurred.</li> <li>eventTime <code>Optional[meta_v1.MicroTime]</code> - Time when this Event was first observed.</li> <li>firstTimestamp <code>Optional[meta_v1.Time]</code> - The time at which the event was first recorded. (Time of server receipt is in   TypeMeta.)</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>lastTimestamp <code>Optional[meta_v1.Time]</code> - The time at which the most recent occurrence of this event was recorded.</li> <li>message <code>Optional[str]</code> - A human-readable description of the status of this operation.</li> <li>reason <code>Optional[str]</code> - This should be a short, machine understandable string that gives the reason   for the transition into the object's current status.</li> <li>related <code>Optional[ObjectReference]</code> - Optional secondary object for more complex actions.</li> <li>reportingComponent <code>Optional[str]</code> - Name of the controller that emitted this Event, e.g. <code>kubernetes.io/kubelet</code>.</li> <li>reportingInstance <code>Optional[str]</code> - ID of the controller instance, e.g. <code>kubelet-xyzf</code>.</li> <li>series <code>Optional[EventSeries]</code> - Data about the Event series this event represents or nil if it's a singleton   Event.</li> <li>source <code>Optional[EventSource]</code> - The component reporting this event. Should be a short machine understandable   string.</li> <li>type <code>Optional[str]</code> - Type of this event (Normal, Warning), new types could be added in the future</li> </ul>"},{"location":"models/core_v1/#eventlist","title":"EventList","text":"class <code>lightkube.models.core_v1.EventList</code>(items, apiVersion=None, kind=None, metadata=None) <p>EventList is a list of events.</p> <p>parameters</p> <ul> <li>items <code>Event</code> - List of events</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#eventseries","title":"EventSeries","text":"class <code>lightkube.models.core_v1.EventSeries</code>(count=None, lastObservedTime=None) <p>EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.</p> <p>parameters</p> <ul> <li>count <code>Optional[int]</code> - Number of occurrences in this series up to the last heartbeat time</li> <li>lastObservedTime <code>Optional[meta_v1.MicroTime]</code> - Time of the last occurrence observed</li> </ul>"},{"location":"models/core_v1/#eventsource","title":"EventSource","text":"class <code>lightkube.models.core_v1.EventSource</code>(component=None, host=None) <p>EventSource contains information for an event.</p> <p>parameters</p> <ul> <li>component <code>Optional[str]</code> - Component from which the event is generated.</li> <li>host <code>Optional[str]</code> - Node name on which the event is generated.</li> </ul>"},{"location":"models/core_v1/#execaction","title":"ExecAction","text":"class <code>lightkube.models.core_v1.ExecAction</code>(command=None) <p>ExecAction describes a \"run in container\" action.</p> <p>parameters</p> <ul> <li>command <code>Optional[List[str]]</code> - Command is the command line to execute inside the container, the working   directory for the command  is root ('/') in the container's filesystem. The   command is simply exec'd, it is not run inside a shell, so traditional shell   instructions ('|', etc) won't work. To use a shell, you need to explicitly   call out to that shell. Exit status of 0 is treated as live/healthy and   non-zero is unhealthy.</li> </ul>"},{"location":"models/core_v1/#fcvolumesource","title":"FCVolumeSource","text":"class <code>lightkube.models.core_v1.FCVolumeSource</code>(fsType=None, lun=None, readOnly=None, targetWWNs=None, wwids=None) <p>Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to   be \"ext4\" if unspecified.</li> <li>lun <code>Optional[int]</code> - lun is Optional: FC target lun number</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: Defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts.</li> <li>targetWWNs <code>Optional[List[str]]</code> - targetWWNs is Optional: FC target worldwide names (WWNs)</li> <li>wwids <code>Optional[List[str]]</code> - wwids Optional: FC volume world wide identifiers (wwids) Either wwids or   combination of targetWWNs and lun must be set, but not both simultaneously.</li> </ul>"},{"location":"models/core_v1/#flexpersistentvolumesource","title":"FlexPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.FlexPersistentVolumeSource</code>(driver, fsType=None, options=None, readOnly=None, secretRef=None) <p>FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.</p> <p>parameters</p> <ul> <li>driver <code>str</code> - driver is the name of the driver to use for this volume.</li> <li>fsType <code>Optional[str]</code> - fsType is the Filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem   depends on FlexVolume script.</li> <li>options <code>Optional[dict]</code> - options is Optional: this field holds extra command options if any.</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts.</li> <li>secretRef <code>Optional[SecretReference]</code> - secretRef is Optional: SecretRef is reference to the secret object containing   sensitive information to pass to the plugin scripts. This may be empty if no   secret object is specified. If the secret object contains more than one   secret, all secrets are passed to the plugin scripts.</li> </ul>"},{"location":"models/core_v1/#flexvolumesource","title":"FlexVolumeSource","text":"class <code>lightkube.models.core_v1.FlexVolumeSource</code>(driver, fsType=None, options=None, readOnly=None, secretRef=None) <p>FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> <p>parameters</p> <ul> <li>driver <code>str</code> - driver is the name of the driver to use for this volume.</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem   depends on FlexVolume script.</li> <li>options <code>Optional[dict]</code> - options is Optional: this field holds extra command options if any.</li> <li>readOnly <code>Optional[bool]</code> - readOnly is Optional: defaults to false (read/write). ReadOnly here will force   the ReadOnly setting in VolumeMounts.</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef is Optional: secretRef is reference to the secret object containing   sensitive information to pass to the plugin scripts. This may be empty if no   secret object is specified. If the secret object contains more than one   secret, all secrets are passed to the plugin scripts.</li> </ul>"},{"location":"models/core_v1/#flockervolumesource","title":"FlockerVolumeSource","text":"class <code>lightkube.models.core_v1.FlockerVolumeSource</code>(datasetName=None, datasetUUID=None) <p>Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>datasetName <code>Optional[str]</code> - datasetName is Name of the dataset stored as metadata -&gt; name on the dataset   for Flocker should be considered as deprecated</li> <li>datasetUUID <code>Optional[str]</code> - datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker   dataset</li> </ul>"},{"location":"models/core_v1/#gcepersistentdiskvolumesource","title":"GCEPersistentDiskVolumeSource","text":"class <code>lightkube.models.core_v1.GCEPersistentDiskVolumeSource</code>(pdName, fsType=None, partition=None, readOnly=None) <p>Represents a Persistent Disk resource in Google Compute Engine.</p> <p>A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>pdName <code>str</code> - pdName is unique name of the PD resource in GCE. Used to identify the disk in   GCE. More info</li> <li>fsType <code>Optional[str]</code> - fsType is filesystem type of the volume that you want to mount. Tip: Ensure   that the filesystem type is supported by the host operating system. Examples:   \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info</li> <li>partition <code>Optional[int]</code> - partition is the partition in the volume that you want to mount. If omitted,   the default is to mount by volume name. Examples: For volume /dev/sda1, you   specify the partition as \"1\". Similarly, the volume partition for /dev/sda is   \"0\" (or you can leave the property empty). More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to   false. More info</li> </ul>"},{"location":"models/core_v1/#grpcaction","title":"GRPCAction","text":"class <code>lightkube.models.core_v1.GRPCAction</code>(port, service=None) <p>parameters</p> <ul> <li>port <code>int</code> - Port number of the gRPC service. Number must be in the range 1 to 65535.</li> <li>service <code>Optional[str]</code> - Service is the name of the service to place in the gRPC HealthCheckRequest   (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC.</li> </ul>"},{"location":"models/core_v1/#gitrepovolumesource","title":"GitRepoVolumeSource","text":"class <code>lightkube.models.core_v1.GitRepoVolumeSource</code>(repository, directory=None, revision=None) <p>Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.</p> <p>DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> <p>parameters</p> <ul> <li>repository <code>str</code> - repository is the URL</li> <li>directory <code>Optional[str]</code> - directory is the target directory name. Must not contain or start with '..'.   If '.' is supplied, the volume directory will be the git repository.   Otherwise, if specified, the volume will contain the git repository in the   subdirectory with the given name.</li> <li>revision <code>Optional[str]</code> - revision is the commit hash for the specified revision.</li> </ul>"},{"location":"models/core_v1/#glusterfspersistentvolumesource","title":"GlusterfsPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.GlusterfsPersistentVolumeSource</code>(endpoints, path, endpointsNamespace=None, readOnly=None) <p>Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>endpoints <code>str</code> - endpoints is the endpoint name that details Glusterfs topology. More info</li> <li>path <code>str</code> - path is the Glusterfs volume path. More info</li> <li>endpointsNamespace <code>Optional[str]</code> - endpointsNamespace is the namespace that contains Glusterfs endpoint. If this   field is empty, the EndpointNamespace defaults to the same namespace as the   bound PVC. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the Glusterfs volume to be mounted with read-only   permissions. Defaults to false. More info</li> </ul>"},{"location":"models/core_v1/#glusterfsvolumesource","title":"GlusterfsVolumeSource","text":"class <code>lightkube.models.core_v1.GlusterfsVolumeSource</code>(endpoints, path, readOnly=None) <p>Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>endpoints <code>str</code> - endpoints is the endpoint name that details Glusterfs topology. More info</li> <li>path <code>str</code> - path is the Glusterfs volume path. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the Glusterfs volume to be mounted with read-only   permissions. Defaults to false. More info</li> </ul>"},{"location":"models/core_v1/#httpgetaction","title":"HTTPGetAction","text":"class <code>lightkube.models.core_v1.HTTPGetAction</code>(port, host=None, httpHeaders=None, path=None, scheme=None) <p>HTTPGetAction describes an action based on HTTP Get requests.</p> <p>parameters</p> <ul> <li>port <code>util_intstr.IntOrString</code> - Name or number of the port to access on the container. Number must be in the   range 1 to 65535. Name must be an IANA_SVC_NAME.</li> <li>host <code>Optional[str]</code> - Host name to connect to, defaults to the pod IP. You probably want to set   \"Host\" in httpHeaders instead.</li> <li>httpHeaders <code>Optional[List[HTTPHeader]]</code> - Custom headers to set in the request. HTTP allows repeated headers.</li> <li>path <code>Optional[str]</code> - Path to access on the HTTP server.</li> <li>scheme <code>Optional[str]</code> - Scheme to use for connecting to the host. Defaults to HTTP.</li> </ul>"},{"location":"models/core_v1/#httpheader","title":"HTTPHeader","text":"class <code>lightkube.models.core_v1.HTTPHeader</code>(name, value) <p>HTTPHeader describes a custom header to be used in HTTP probes</p> <p>parameters</p> <ul> <li>name <code>str</code> - The header field name. This will be canonicalized upon output, so case-variant   names will be understood as the same header.</li> <li>value <code>str</code> - The header field value</li> </ul>"},{"location":"models/core_v1/#hostalias","title":"HostAlias","text":"class <code>lightkube.models.core_v1.HostAlias</code>(hostnames=None, ip=None) <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.</p> <p>parameters</p> <ul> <li>hostnames <code>Optional[List[str]]</code> - Hostnames for the above IP address.</li> <li>ip <code>Optional[str]</code> - IP address of the host file entry.</li> </ul>"},{"location":"models/core_v1/#hostip","title":"HostIP","text":"class <code>lightkube.models.core_v1.HostIP</code>(ip=None) <p>HostIP represents a single IP address allocated to the host.</p> <p>parameters</p> <ul> <li>ip <code>Optional[str]</code> - IP is the IP address assigned to the host</li> </ul>"},{"location":"models/core_v1/#hostpathvolumesource","title":"HostPathVolumeSource","text":"class <code>lightkube.models.core_v1.HostPathVolumeSource</code>(path, type=None) <p>Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>path <code>str</code> - path of the directory on the host. If the path is a symlink, it will follow   the link to the real path. More info</li> <li>type <code>Optional[str]</code> - type for HostPath Volume Defaults to \"\" More info</li> </ul>"},{"location":"models/core_v1/#iscsipersistentvolumesource","title":"ISCSIPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.ISCSIPersistentVolumeSource</code>(iqn, lun, targetPortal, chapAuthDiscovery=None, chapAuthSession=None, fsType=None, initiatorName=None, iscsiInterface=None, portals=None, readOnly=None, secretRef=None) <p>ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>iqn <code>str</code> - iqn is Target iSCSI Qualified Name.</li> <li>lun <code>int</code> - lun is iSCSI Target Lun number.</li> <li>targetPortal <code>str</code> - targetPortal is iSCSI Target Portal. The Portal is either an IP or   ip_addr:port if the port is other than default (typically TCP ports 860 and   3260).</li> <li>chapAuthDiscovery <code>Optional[bool]</code> - chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication</li> <li>chapAuthSession <code>Optional[bool]</code> - chapAuthSession defines whether support iSCSI Session CHAP authentication</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type of the volume that you want to mount. Tip:   Ensure that the filesystem type is supported by the host operating system.   Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if   unspecified. More info</li> <li>initiatorName <code>Optional[str]</code> - initiatorName is the custom iSCSI Initiator Name. If initiatorName is   specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. <li>iscsiInterface <code>Optional[str]</code> - iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to   'default' (tcp).</li> <li>portals <code>Optional[List[str]]</code> - portals is the iSCSI Target Portal List. The Portal is either an IP or   ip_addr:port if the port is other than default (typically TCP ports 860 and   3260).</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to   false.</li> <li>secretRef <code>Optional[SecretReference]</code> - secretRef is the CHAP Secret for iSCSI target and initiator authentication</li>"},{"location":"models/core_v1/#iscsivolumesource","title":"ISCSIVolumeSource","text":"class <code>lightkube.models.core_v1.ISCSIVolumeSource</code>(iqn, lun, targetPortal, chapAuthDiscovery=None, chapAuthSession=None, fsType=None, initiatorName=None, iscsiInterface=None, portals=None, readOnly=None, secretRef=None) <p>Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>iqn <code>str</code> - iqn is the target iSCSI Qualified Name.</li> <li>lun <code>int</code> - lun represents iSCSI Target Lun number.</li> <li>targetPortal <code>str</code> - targetPortal is iSCSI Target Portal. The Portal is either an IP or   ip_addr:port if the port is other than default (typically TCP ports 860 and   3260).</li> <li>chapAuthDiscovery <code>Optional[bool]</code> - chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication</li> <li>chapAuthSession <code>Optional[bool]</code> - chapAuthSession defines whether support iSCSI Session CHAP authentication</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type of the volume that you want to mount. Tip:   Ensure that the filesystem type is supported by the host operating system.   Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if   unspecified. More info</li> <li>initiatorName <code>Optional[str]</code> - initiatorName is the custom iSCSI Initiator Name. If initiatorName is   specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. <li>iscsiInterface <code>Optional[str]</code> - iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to   'default' (tcp).</li> <li>portals <code>Optional[List[str]]</code> - portals is the iSCSI Target Portal List. The portal is either an IP or   ip_addr:port if the port is other than default (typically TCP ports 860 and   3260).</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to   false.</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef is the CHAP Secret for iSCSI target and initiator authentication</li>"},{"location":"models/core_v1/#keytopath","title":"KeyToPath","text":"class <code>lightkube.models.core_v1.KeyToPath</code>(key, path, mode=None) <p>Maps a string key to a path within a volume.</p> <p>parameters</p> <ul> <li>key <code>str</code> - key is the key to project.</li> <li>path <code>str</code> - path is the relative path of the file to map the key to. May not be an   absolute path. May not contain the path element '..'. May not start with the   string '..'.</li> <li>mode <code>Optional[int]</code> - mode is Optional: mode bits used to set permissions on this file. Must be an   octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML   accepts both octal and decimal values, JSON requires decimal values for mode   bits. If not specified, the volume defaultMode will be used. This might be in   conflict with other options that affect the file mode, like fsGroup, and the   result can be other mode bits set.</li> </ul>"},{"location":"models/core_v1/#lifecycle","title":"Lifecycle","text":"class <code>lightkube.models.core_v1.Lifecycle</code>(postStart=None, preStop=None) <p>Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.</p> <p>parameters</p> <ul> <li>postStart <code>Optional[LifecycleHandler]</code> - PostStart is called immediately after a container is created. If the handler   fails, the container is terminated and restarted according to its restart   policy. Other management of the container blocks until the hook completes.   More info</li> <li>preStop <code>Optional[LifecycleHandler]</code> - PreStop is called immediately before a container is terminated due to an API   request or management event such as liveness/startup probe failure,   preemption, resource contention, etc. The handler is not called if the   container crashes or exits. The Pod's termination grace period countdown   begins before the PreStop hook is executed. Regardless of the outcome of the   handler, the container will eventually terminate within the Pod's termination   grace period (unless delayed by finalizers). Other management of the container   blocks until the hook completes or until the termination grace period is   reached. More info</li> </ul>"},{"location":"models/core_v1/#lifecyclehandler","title":"LifecycleHandler","text":"class <code>lightkube.models.core_v1.LifecycleHandler</code>(exec=None, httpGet=None, sleep=None, tcpSocket=None) <p>LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.</p> <p>parameters</p> <ul> <li>exec <code>Optional[ExecAction]</code> - Exec specifies the action to take.</li> <li>httpGet <code>Optional[HTTPGetAction]</code> - HTTPGet specifies the http request to perform.</li> <li>sleep <code>Optional[SleepAction]</code> - Sleep represents the duration that the container should sleep before being   terminated.</li> <li>tcpSocket <code>Optional[TCPSocketAction]</code> - Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the   backward compatibility. There are no validation of this field and lifecycle   hooks will fail in runtime when tcp handler is specified.</li> </ul>"},{"location":"models/core_v1/#limitrange","title":"LimitRange","text":"class <code>lightkube.models.core_v1.LimitRange</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>LimitRange sets resource usage limits for each kind of resource in a Namespace.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[LimitRangeSpec]</code> - Spec defines the limits enforced. More info</li> </ul>"},{"location":"models/core_v1/#limitrangeitem","title":"LimitRangeItem","text":"class <code>lightkube.models.core_v1.LimitRangeItem</code>(type, default=None, defaultRequest=None, max=None, maxLimitRequestRatio=None, min=None) <p>LimitRangeItem defines a min/max usage limit for any resource that matches on kind.</p> <p>parameters</p> <ul> <li>type <code>str</code> - Type of resource that this limit applies to.</li> <li>default <code>Optional[dict]</code> - Default resource requirement limit value by resource name if resource limit is   omitted.</li> <li>defaultRequest <code>Optional[dict]</code> - DefaultRequest is the default resource requirement request value by resource   name if resource request is omitted.</li> <li>max <code>Optional[dict]</code> - Max usage constraints on this kind by resource name.</li> <li>maxLimitRequestRatio <code>Optional[dict]</code> - MaxLimitRequestRatio if specified, the named resource must have a request and   limit that are both non-zero where limit divided by request is less than or   equal to the enumerated value; this represents the max burst for the named   resource.</li> <li>min <code>Optional[dict]</code> - Min usage constraints on this kind by resource name.</li> </ul>"},{"location":"models/core_v1/#limitrangelist","title":"LimitRangeList","text":"class <code>lightkube.models.core_v1.LimitRangeList</code>(items, apiVersion=None, kind=None, metadata=None) <p>LimitRangeList is a list of LimitRange items.</p> <p>parameters</p> <ul> <li>items <code>LimitRange</code> - Items is a list of LimitRange objects. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#limitrangespec","title":"LimitRangeSpec","text":"class <code>lightkube.models.core_v1.LimitRangeSpec</code>(limits) <p>LimitRangeSpec defines a min/max usage limit for resources that match on kind.</p> <p>parameters</p> <ul> <li>limits <code>LimitRangeItem</code> - Limits is the list of LimitRangeItem objects that are enforced.</li> </ul>"},{"location":"models/core_v1/#loadbalanceringress","title":"LoadBalancerIngress","text":"class <code>lightkube.models.core_v1.LoadBalancerIngress</code>(hostname=None, ip=None, ipMode=None, ports=None) <p>LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.</p> <p>parameters</p> <ul> <li>hostname <code>Optional[str]</code> - Hostname is set for load-balancer ingress points that are DNS based (typically   AWS load-balancers)</li> <li>ip <code>Optional[str]</code> - IP is set for load-balancer ingress points that are IP based (typically GCE or   OpenStack load-balancers)</li> <li>ipMode <code>Optional[str]</code> - IPMode specifies how the load-balancer IP behaves, and may only be specified   when the ip field is specified. Setting this to \"VIP\" indicates that traffic   is delivered to the node with the destination set to the load-balancer's IP   and port. Setting this to \"Proxy\" indicates that traffic is delivered to the   node or pod with the destination set to the node's IP and node port or the   pod's IP and port. Service implementations may use this information to adjust   traffic routing.</li> <li>ports <code>Optional[List[PortStatus]]</code> - Ports is a list of records of service ports If used, every port defined in the   service should have an entry in it</li> </ul>"},{"location":"models/core_v1/#loadbalancerstatus","title":"LoadBalancerStatus","text":"class <code>lightkube.models.core_v1.LoadBalancerStatus</code>(ingress=None) <p>LoadBalancerStatus represents the status of a load-balancer.</p> <p>parameters</p> <ul> <li>ingress <code>Optional[List[LoadBalancerIngress]]</code> - Ingress is a list containing ingress points for the load-balancer. Traffic   intended for the service should be sent to these ingress points.</li> </ul>"},{"location":"models/core_v1/#localobjectreference","title":"LocalObjectReference","text":"class <code>lightkube.models.core_v1.LocalObjectReference</code>(name=None) <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> </ul>"},{"location":"models/core_v1/#localvolumesource","title":"LocalVolumeSource","text":"class <code>lightkube.models.core_v1.LocalVolumeSource</code>(path, fsType=None) <p>Local represents directly-attached storage with node affinity (Beta feature)</p> <p>parameters</p> <ul> <li>path <code>str</code> - path of the full path to the volume on the node. It can be either a directory   or block device (disk, partition, ...).</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. It applies only when the Path is a   block device. Must be a filesystem type supported by the host operating   system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a   filesystem if unspecified.</li> </ul>"},{"location":"models/core_v1/#modifyvolumestatus","title":"ModifyVolumeStatus","text":"class <code>lightkube.models.core_v1.ModifyVolumeStatus</code>(status, targetVolumeAttributesClassName=None) <p>ModifyVolumeStatus represents the status object of ControllerModifyVolume operation</p> <p>parameters</p> <ul> <li>status <code>str</code> - status is the status of the ControllerModifyVolume operation. It can be in any   of following states:</li> <li>Pending      Pending indicates that the PersistentVolumeClaim cannot be modified due to   unmet requirements, such as      the specified VolumeAttributesClass not existing.</li> <li>InProgress      InProgress indicates that the volume is being modified.</li> <li>Infeasible     Infeasible indicates that the request has been rejected as invalid by the   CSI driver. To             resolve the error, a valid VolumeAttributesClass needs to be specified.   Note: New statuses can be added in the future. Consumers should check for   unknown statuses and fail appropriately.</li> <li>targetVolumeAttributesClassName <code>Optional[str]</code> - targetVolumeAttributesClassName is the name of the VolumeAttributesClass the   PVC currently being reconciled</li> </ul>"},{"location":"models/core_v1/#nfsvolumesource","title":"NFSVolumeSource","text":"class <code>lightkube.models.core_v1.NFSVolumeSource</code>(path, server, readOnly=None) <p>Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>path <code>str</code> - path that is exported by the NFS server. More info</li> <li>server <code>str</code> - server is the hostname or IP address of the NFS server. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the NFS export to be mounted with read-only   permissions. Defaults to false. More info</li> </ul>"},{"location":"models/core_v1/#namespace","title":"Namespace","text":"class <code>lightkube.models.core_v1.Namespace</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Namespace provides a scope for Names. Use of multiple namespaces is optional.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[NamespaceSpec]</code> - Spec defines the behavior of the Namespace. More info</li> <li>status <code>Optional[NamespaceStatus]</code> - Status describes the current status of a Namespace. More info</li> </ul>"},{"location":"models/core_v1/#namespacecondition","title":"NamespaceCondition","text":"class <code>lightkube.models.core_v1.NamespaceCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>NamespaceCondition contains details about state of namespace.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of namespace controller condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> -</li> <li>message <code>Optional[str]</code> -</li> <li>reason <code>Optional[str]</code> -</li> </ul>"},{"location":"models/core_v1/#namespacelist","title":"NamespaceList","text":"class <code>lightkube.models.core_v1.NamespaceList</code>(items, apiVersion=None, kind=None, metadata=None) <p>NamespaceList is a list of Namespaces.</p> <p>parameters</p> <ul> <li>items <code>Namespace</code> - Items is the list of Namespace objects in the list. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#namespacespec","title":"NamespaceSpec","text":"class <code>lightkube.models.core_v1.NamespaceSpec</code>(finalizers=None) <p>NamespaceSpec describes the attributes on a Namespace.</p> <p>parameters</p> <ul> <li>finalizers <code>Optional[List[str]]</code> - Finalizers is an opaque list of values that must be empty to permanently   remove object from storage. More info</li> </ul>"},{"location":"models/core_v1/#namespacestatus","title":"NamespaceStatus","text":"class <code>lightkube.models.core_v1.NamespaceStatus</code>(conditions=None, phase=None) <p>NamespaceStatus is information about the current status of a Namespace.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[NamespaceCondition]]</code> - Represents the latest available observations of a namespace's current state.</li> <li>phase <code>Optional[str]</code> - Phase is the current lifecycle phase of the namespace. More info</li> </ul>"},{"location":"models/core_v1/#node","title":"Node","text":"class <code>lightkube.models.core_v1.Node</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[NodeSpec]</code> - Spec defines the behavior of a node.   https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</li> <li>status <code>Optional[NodeStatus]</code> - Most recently observed status of the node. Populated by the system. Read-only.   More info</li> </ul>"},{"location":"models/core_v1/#nodeaddress","title":"NodeAddress","text":"class <code>lightkube.models.core_v1.NodeAddress</code>(address, type) <p>NodeAddress contains information for the node's address.</p> <p>parameters</p> <ul> <li>address <code>str</code> - The node address.</li> <li>type <code>str</code> - Node address type, one of Hostname, ExternalIP or InternalIP.</li> </ul>"},{"location":"models/core_v1/#nodeaffinity","title":"NodeAffinity","text":"class <code>lightkube.models.core_v1.NodeAffinity</code>(preferredDuringSchedulingIgnoredDuringExecution=None, requiredDuringSchedulingIgnoredDuringExecution=None) <p>Node affinity is a group of node affinity scheduling rules.</p> <p>parameters</p> <ul> <li>preferredDuringSchedulingIgnoredDuringExecution <code>Optional[List[PreferredSchedulingTerm]]</code> - The scheduler will prefer to schedule pods to nodes that satisfy the affinity   expressions specified by this field, but it may choose a node that violates   one or more of the expressions. The node that is most preferred is the one   with the greatest sum of weights, i.e. for each node that meets all of the   scheduling requirements (resource request, requiredDuringScheduling affinity   expressions, etc.), compute a sum by iterating through the elements of this   field and adding \"weight\" to the sum if the node matches the corresponding   matchExpressions; the node(s) with the highest sum are the most preferred.</li> <li>requiredDuringSchedulingIgnoredDuringExecution <code>Optional[NodeSelector]</code> - If the affinity requirements specified by this field are not met at scheduling   time, the pod will not be scheduled onto the node. If the affinity   requirements specified by this field cease to be met at some point during pod   execution (e.g. due to an update), the system may or may not try to eventually   evict the pod from its node.</li> </ul>"},{"location":"models/core_v1/#nodecondition","title":"NodeCondition","text":"class <code>lightkube.models.core_v1.NodeCondition</code>(status, type, lastHeartbeatTime=None, lastTransitionTime=None, message=None, reason=None) <p>NodeCondition contains condition information for a node.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of node condition.</li> <li>lastHeartbeatTime <code>Optional[meta_v1.Time]</code> - Last time we got an update on a given condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transit from one status to another.</li> <li>message <code>Optional[str]</code> - Human readable message indicating details about last transition.</li> <li>reason <code>Optional[str]</code> - (brief) reason for the condition's last transition.</li> </ul>"},{"location":"models/core_v1/#nodeconfigsource","title":"NodeConfigSource","text":"class <code>lightkube.models.core_v1.NodeConfigSource</code>(configMap=None) <p>NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil. This API is deprecated since 1.22</p> <p>parameters</p> <ul> <li>configMap <code>Optional[ConfigMapNodeConfigSource]</code> - ConfigMap is a reference to a Node's ConfigMap</li> </ul>"},{"location":"models/core_v1/#nodeconfigstatus","title":"NodeConfigStatus","text":"class <code>lightkube.models.core_v1.NodeConfigStatus</code>(active=None, assigned=None, error=None, lastKnownGood=None) <p>NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.</p> <p>parameters</p> <ul> <li>active <code>Optional[NodeConfigSource]</code> - Active reports the checkpointed config the node is actively using. Active will   represent either the current version of the Assigned config, or the current   LastKnownGood config, depending on whether attempting to use the Assigned   config results in an error.</li> <li>assigned <code>Optional[NodeConfigSource]</code> - Assigned reports the checkpointed config the node will try to use. When   Node.Spec.ConfigSource is updated, the node checkpoints the associated config   payload to local disk, along with a record indicating intended config. The   node refers to this record to choose its config checkpoint, and reports this   record in Assigned. Assigned only updates in the status after the record has   been checkpointed to disk. When the Kubelet is restarted, it tries to make the   Assigned config the Active config by loading and validating the checkpointed   payload identified by Assigned.</li> <li>error <code>Optional[str]</code> - Error describes any problems reconciling the Spec.ConfigSource to the Active   config. Errors may occur, for example, attempting to checkpoint   Spec.ConfigSource to the local Assigned record, attempting to checkpoint the   payload associated with Spec.ConfigSource, attempting to load or validate the   Assigned config, etc. Errors may occur at different points while syncing   config. Earlier errors (e.g. download or checkpointing errors) will not result   in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later   errors (e.g. loading or validating a checkpointed config) will result in a   rollback to LastKnownGood. In the latter case, it is usually possible to   resolve the error by fixing the config assigned in Spec.ConfigSource. You can   find additional information for debugging by searching the error message in   the Kubelet log. Error is a human-readable description of the error state;   machines can check whether or not Error is empty, but should not rely on the   stability of the Error text across Kubelet versions.</li> <li>lastKnownGood <code>Optional[NodeConfigSource]</code> - LastKnownGood reports the checkpointed config the node will fall back to when   it encounters an error attempting to use the Assigned config. The Assigned   config becomes the LastKnownGood config when the node determines that the   Assigned config is stable and correct. This is currently implemented as a   10-minute soak period starting when the local record of Assigned config is   updated. If the Assigned config is Active at the end of this period, it   becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use   local defaults), the LastKnownGood is also immediately reset to nil, because   the local default config is always assumed good. You should not make   assumptions about the node's method of determining config stability and   correctness, as this may change or become configurable in the future.</li> </ul>"},{"location":"models/core_v1/#nodedaemonendpoints","title":"NodeDaemonEndpoints","text":"class <code>lightkube.models.core_v1.NodeDaemonEndpoints</code>(kubeletEndpoint=None) <p>NodeDaemonEndpoints lists ports opened by daemons running on the Node.</p> <p>parameters</p> <ul> <li>kubeletEndpoint <code>Optional[DaemonEndpoint]</code> - Endpoint on which Kubelet is listening.</li> </ul>"},{"location":"models/core_v1/#nodelist","title":"NodeList","text":"class <code>lightkube.models.core_v1.NodeList</code>(items, apiVersion=None, kind=None, metadata=None) <p>NodeList is the whole list of all Nodes which have been registered with master.</p> <p>parameters</p> <ul> <li>items <code>Node</code> - List of nodes</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#nodeselector","title":"NodeSelector","text":"class <code>lightkube.models.core_v1.NodeSelector</code>(nodeSelectorTerms) <p>A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.</p> <p>parameters</p> <ul> <li>nodeSelectorTerms <code>NodeSelectorTerm</code> - Required. A list of node selector terms. The terms are ORed.</li> </ul>"},{"location":"models/core_v1/#nodeselectorrequirement","title":"NodeSelectorRequirement","text":"class <code>lightkube.models.core_v1.NodeSelectorRequirement</code>(key, operator, values=None) <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> <p>parameters</p> <ul> <li>key <code>str</code> - The label key that the selector applies to.</li> <li>operator <code>str</code> - Represents a key's relationship to a set of values. Valid operators are In,   NotIn, Exists, DoesNotExist. Gt, and Lt.</li> <li>values <code>Optional[List[str]]</code> - An array of string values. If the operator is In or NotIn, the values array   must be non-empty. If the operator is Exists or DoesNotExist, the values array   must be empty. If the operator is Gt or Lt, the values array must have a   single element, which will be interpreted as an integer. This array is   replaced during a strategic merge patch.</li> </ul>"},{"location":"models/core_v1/#nodeselectorterm","title":"NodeSelectorTerm","text":"class <code>lightkube.models.core_v1.NodeSelectorTerm</code>(matchExpressions=None, matchFields=None) <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> <p>parameters</p> <ul> <li>matchExpressions <code>Optional[List[NodeSelectorRequirement]]</code> - A list of node selector requirements by node's labels.</li> <li>matchFields <code>Optional[List[NodeSelectorRequirement]]</code> - A list of node selector requirements by node's fields.</li> </ul>"},{"location":"models/core_v1/#nodespec","title":"NodeSpec","text":"class <code>lightkube.models.core_v1.NodeSpec</code>(configSource=None, externalID=None, podCIDR=None, podCIDRs=None, providerID=None, taints=None, unschedulable=None) <p>NodeSpec describes the attributes that a node is created with.</p> <p>parameters</p> <ul> <li>configSource <code>Optional[NodeConfigSource]</code> - Deprecated: Previously used to specify the source of the node's configuration   for the DynamicKubeletConfig feature. This feature is removed.</li> <li>externalID <code>Optional[str]</code> - Deprecated. Not all kubelets will set this field. Remove field after 1.13.   see: https://issues.k8s.io/61966</li> <li>podCIDR <code>Optional[str]</code> - PodCIDR represents the pod IP range assigned to the node.</li> <li>podCIDRs <code>Optional[List[str]]</code> - podCIDRs represents the IP ranges assigned to the node for usage by Pods on   that node. If this field is specified, the 0th entry must match the podCIDR   field. It may contain at most 1 value for each of IPv4 and IPv6.</li> <li>providerID <code>Optional[str]</code> - ID of the node assigned by the cloud provider in the format:   :// <li>taints <code>Optional[List[Taint]]</code> - If specified, the node's taints.</li> <li>unschedulable <code>Optional[bool]</code> - Unschedulable controls node schedulability of new pods. By default, node is   schedulable. More info</li>"},{"location":"models/core_v1/#nodestatus","title":"NodeStatus","text":"class <code>lightkube.models.core_v1.NodeStatus</code>(addresses=None, allocatable=None, capacity=None, conditions=None, config=None, daemonEndpoints=None, images=None, nodeInfo=None, phase=None, volumesAttached=None, volumesInUse=None) <p>NodeStatus is information about the current status of a node.</p> <p>parameters</p> <ul> <li>addresses <code>Optional[List[NodeAddress]]</code> - List of addresses reachable to the node. Queried from cloud provider, if   available. More info Note: This field is   declared as mergeable, but the merge key is not sufficiently unique, which can   cause data corruption when it is merged. Callers should instead use a   full-replacement patch. See https://pr.k8s.io/79391 for an example. Consumers   should assume that addresses can change during the lifetime of a Node.   However, there are some exceptions where this may not be possible, such as   Pods that inherit a Node's address in its own status or consumers of the   downward API (status.hostIP).</li> <li>allocatable <code>Optional[dict]</code> - Allocatable represents the resources of a node that are available for   scheduling. Defaults to Capacity.</li> <li>capacity <code>Optional[dict]</code> - Capacity represents the total resources of a node. More info</li> <li>conditions <code>Optional[List[NodeCondition]]</code> - Conditions is an array of current observed node conditions. More info</li> <li>config <code>Optional[NodeConfigStatus]</code> - Status of the config assigned to the node via the dynamic Kubelet config   feature.</li> <li>daemonEndpoints <code>Optional[NodeDaemonEndpoints]</code> - Endpoints of daemons running on the Node.</li> <li>images <code>Optional[List[ContainerImage]]</code> - List of container images on this node</li> <li>nodeInfo <code>Optional[NodeSystemInfo]</code> - Set of ids/uuids to uniquely identify the node. More info</li> <li>phase <code>Optional[str]</code> - NodePhase is the recently observed lifecycle phase of the node. More info The field is never   populated, and now is deprecated.</li> <li>volumesAttached <code>Optional[List[AttachedVolume]]</code> - List of volumes that are attached to the node.</li> <li>volumesInUse <code>Optional[List[str]]</code> - List of attachable volumes in use (mounted) by the node.</li> </ul>"},{"location":"models/core_v1/#nodesysteminfo","title":"NodeSystemInfo","text":"class <code>lightkube.models.core_v1.NodeSystemInfo</code>(architecture, bootID, containerRuntimeVersion, kernelVersion, kubeProxyVersion, kubeletVersion, machineID, operatingSystem, osImage, systemUUID) <p>NodeSystemInfo is a set of ids/uuids to uniquely identify the node.</p> <p>parameters</p> <ul> <li>architecture <code>str</code> - The Architecture reported by the node</li> <li>bootID <code>str</code> - Boot ID reported by the node.</li> <li>containerRuntimeVersion <code>str</code> - ContainerRuntime Version reported by the node through runtime remote API (e.g.   containerd://1.4.2).</li> <li>kernelVersion <code>str</code> - Kernel Version reported by the node from 'uname -r' (e.g.   3.16.0-0.bpo.4-amd64).</li> <li>kubeProxyVersion <code>str</code> - KubeProxy Version reported by the node.</li> <li>kubeletVersion <code>str</code> - Kubelet Version reported by the node.</li> <li>machineID <code>str</code> - MachineID reported by the node. For unique machine identification in the   cluster this field is preferred. Learn more from man(5) machine-id:   http://man7.org/linux/man-pages/man5/machine-id.5.html</li> <li>operatingSystem <code>str</code> - The Operating System reported by the node</li> <li>osImage <code>str</code> - OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7   (wheezy)).</li> <li>systemUUID <code>str</code> - SystemUUID reported by the node. For unique machine identification MachineID   is preferred. This field is specific to Red Hat hosts   https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid</li> </ul>"},{"location":"models/core_v1/#objectfieldselector","title":"ObjectFieldSelector","text":"class <code>lightkube.models.core_v1.ObjectFieldSelector</code>(fieldPath, apiVersion=None) <p>ObjectFieldSelector selects an APIVersioned field of an object.</p> <p>parameters</p> <ul> <li>fieldPath <code>str</code> - Path of the field to select in the specified API version.</li> <li>apiVersion <code>Optional[str]</code> - Version of the schema the FieldPath is written in terms of, defaults to \"v1\".</li> </ul>"},{"location":"models/core_v1/#objectreference","title":"ObjectReference","text":"class <code>lightkube.models.core_v1.ObjectReference</code>(apiVersion=None, fieldPath=None, kind=None, name=None, namespace=None, resourceVersion=None, uid=None) <p>ObjectReference contains enough information to let you inspect or modify the referred object.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - API version of the referent.</li> <li>fieldPath <code>Optional[str]</code> - If referring to a piece of an object instead of an entire object, this string   should contain a valid JSON/Go field access statement, such as   desiredState.manifest.containers[2]. For example, if the object reference is   to a container within a pod, this would take on a value like:   \"spec.containers{name}\" (where \"name\" refers to the name of the container that   triggered the event) or if no container name is specified \"spec.containers[2]\"   (container with index 2 in this pod). This syntax is chosen only to have some   well-defined way of referencing a part of an object.</li> <li>kind <code>Optional[str]</code> - Kind of the referent. More info</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>namespace <code>Optional[str]</code> - Namespace of the referent. More info</li> <li>resourceVersion <code>Optional[str]</code> - Specific resourceVersion to which this reference is made, if any. More info</li> <li>uid <code>Optional[str]</code> - UID of the referent. More info</li> </ul>"},{"location":"models/core_v1/#persistentvolume","title":"PersistentVolume","text":"class <code>lightkube.models.core_v1.PersistentVolume</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[PersistentVolumeSpec]</code> - spec defines a specification of a persistent volume owned by the cluster.   Provisioned by an administrator. More info</li> <li>status <code>Optional[PersistentVolumeStatus]</code> - status represents the current information/status for the persistent volume.   Populated by the system. Read-only. More info</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaim","title":"PersistentVolumeClaim","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaim</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>PersistentVolumeClaim is a user's request for and claim to a persistent volume</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[PersistentVolumeClaimSpec]</code> - spec defines the desired characteristics of a volume requested by a pod   author. More info</li> <li>status <code>Optional[PersistentVolumeClaimStatus]</code> - status represents the current information/status of a persistent volume claim.   Read-only. More info</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimcondition","title":"PersistentVolumeClaimCondition","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimCondition</code>(status, type, lastProbeTime=None, lastTransitionTime=None, message=None, reason=None) <p>PersistentVolumeClaimCondition contains details about state of pvc</p> <p>parameters</p> <ul> <li>status <code>str</code> -</li> <li>type <code>str</code> -</li> <li>lastProbeTime <code>Optional[meta_v1.Time]</code> - lastProbeTime is the time we probed the condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - lastTransitionTime is the time the condition transitioned from one status to   another.</li> <li>message <code>Optional[str]</code> - message is the human-readable message indicating details about last   transition.</li> <li>reason <code>Optional[str]</code> - reason is a unique, this should be a short, machine understandable string that   gives the reason for condition's last transition. If it reports   \"ResizeStarted\" that means the underlying persistent volume is being resized.</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimlist","title":"PersistentVolumeClaimList","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PersistentVolumeClaimList is a list of PersistentVolumeClaim items.</p> <p>parameters</p> <ul> <li>items <code>PersistentVolumeClaim</code> - items is a list of persistent volume claims. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimspec","title":"PersistentVolumeClaimSpec","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimSpec</code>(accessModes=None, dataSource=None, dataSourceRef=None, resources=None, selector=None, storageClassName=None, volumeAttributesClassName=None, volumeMode=None, volumeName=None) <p>PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes</p> <p>parameters</p> <ul> <li>accessModes <code>Optional[List[str]]</code> - accessModes contains the desired access modes the volume should have. More info</li> <li>dataSource <code>Optional[TypedLocalObjectReference]</code> - dataSource field can be used to specify either: * An existing VolumeSnapshot   object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC   (PersistentVolumeClaim) If the provisioner or an external controller can   support the specified data source, it will create a new volume based on the   contents of the specified data source. When the AnyVolumeDataSource feature   gate is enabled, dataSource contents will be copied to dataSourceRef, and   dataSourceRef contents will be copied to dataSource when   dataSourceRef.namespace is not specified. If the namespace is specified, then   dataSourceRef will not be copied to dataSource.</li> <li>dataSourceRef <code>Optional[TypedObjectReference]</code> - dataSourceRef specifies the object from which to populate the volume with   data, if a non-empty volume is desired. This may be any object from a   non-empty API group (non core object) or a PersistentVolumeClaim object. When   this field is specified, volume binding will only succeed if the type of the   specified object matches some installed volume populator or dynamic   provisioner. This field will replace the functionality of the dataSource field   and as such if both fields are non-empty, they must have the same value. For   backwards compatibility, when namespace isn't specified in dataSourceRef, both   fields (dataSource and dataSourceRef) will be set to the same value   automatically if one of them is empty and the other is non-empty. When   namespace is specified in dataSourceRef, dataSource isn't set to the same   value and must be empty. There are three important differences between   dataSource and dataSourceRef: * While dataSource only allows two specific   types of objects, dataSourceRef     allows any non-core object, as well as PersistentVolumeClaim objects.</li> <li>While dataSource ignores disallowed values (dropping them), dataSourceRef     preserves all values, and generates an error if a disallowed value is     specified.</li> <li>While dataSource only allows local objects, dataSourceRef allows objects     in any namespaces.   (Beta) Using this field requires the AnyVolumeDataSource feature gate to be   enabled. (Alpha) Using the namespace field of dataSourceRef requires the   CrossNamespaceVolumeDataSource feature gate to be enabled.</li> <li>resources <code>Optional[VolumeResourceRequirements]</code> - resources represents the minimum resources the volume should have. If   RecoverVolumeExpansionFailure feature is enabled users are allowed to specify   resource requirements that are lower than previous value but must still be   higher than capacity recorded in the status field of the claim. More info</li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - selector is a label query over volumes to consider for binding.</li> <li>storageClassName <code>Optional[str]</code> - storageClassName is the name of the StorageClass required by the claim. More info</li> <li>volumeAttributesClassName <code>Optional[str]</code> - volumeAttributesClassName may be used to set the VolumeAttributesClass used by   this claim. If specified, the CSI driver will create or update the volume with   the attributes defined in the corresponding VolumeAttributesClass. This has a   different purpose than storageClassName, it can be changed after the claim is   created. An empty string value means that no VolumeAttributesClass will be   applied to the claim but it's not allowed to reset this field to empty string   once it is set. If unspecified and the PersistentVolumeClaim is unbound, the   default VolumeAttributesClass will be set by the persistentvolume controller   if it exists. If the resource referred to by volumeAttributesClass does not   exist, this PersistentVolumeClaim will be set to a Pending state, as reflected   by the modifyVolumeStatus field, until such as a resource exists. More info   (Alpha) Using this field requires the VolumeAttributesClass feature gate to be   enabled.</li> <li>volumeMode <code>Optional[str]</code> - volumeMode defines what type of volume is required by the claim. Value of   Filesystem is implied when not included in claim spec.</li> <li>volumeName <code>Optional[str]</code> - volumeName is the binding reference to the PersistentVolume backing this   claim.</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimstatus","title":"PersistentVolumeClaimStatus","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimStatus</code>(accessModes=None, allocatedResourceStatuses=None, allocatedResources=None, capacity=None, conditions=None, currentVolumeAttributesClassName=None, modifyVolumeStatus=None, phase=None) <p>PersistentVolumeClaimStatus is the current status of a persistent volume claim.</p> <p>parameters</p> <ul> <li>accessModes <code>Optional[List[str]]</code> - accessModes contains the actual access modes the volume backing the PVC has.   More info</li> <li>allocatedResourceStatuses <code>Optional[dict]</code> - allocatedResourceStatuses stores status of resource being resized for the   given PVC. Key names follow standard Kubernetes label syntax. Valid values are   either:           * Un-prefixed keys:                   - storage - the capacity of the volume.           * Custom resources must use implementation-defined prefixed names such as   \"example.com/my-custom-resource\"   Apart from above values - keys that are unprefixed or have kubernetes.io   prefix are considered reserved and hence may not be used.   ClaimResourceStatus can be in any of following states:           - ControllerResizeInProgress:                   State set when resize controller starts resizing the volume in   control-plane.           - ControllerResizeFailed:                   State set when resize has failed in resize controller with a terminal error.           - NodeResizePending:                   State set when resize controller has finished resizing the volume but   further resizing of                   volume is needed on the node.           - NodeResizeInProgress:                   State set when kubelet starts resizing the volume.           - NodeResizeFailed:                   State set when resizing has failed in kubelet with a terminal error.   Transient errors don't set                   NodeResizeFailed.   For example: if expanding a PVC for more capacity - this field can be one of   the following states:           - pvc.status.allocatedResourceStatus['storage'] =   \"ControllerResizeInProgress\"<ul> <li>pvc.status.allocatedResourceStatus['storage'] =   \"ControllerResizeFailed\"</li> <li>pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"</li> <li>pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"</li> <li>pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"   When this field is not set, it means that no resize operation is in progress   for the given PVC.   A controller that receives PVC update with previously unknown resourceName or   ClaimResourceStatus should ignore the update for the purpose it was designed.   For example - a controller that only is responsible for resizing capacity of   the volume, should ignore PVC updates that change other valid resources   associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure   feature.</li> </ul> </li> <li>allocatedResources <code>Optional[dict]</code> - allocatedResources tracks the resources allocated to a PVC including its   capacity. Key names follow standard Kubernetes label syntax. Valid values are   either:           * Un-prefixed keys:                   - storage - the capacity of the volume.           * Custom resources must use implementation-defined prefixed names such as   \"example.com/my-custom-resource\"   Apart from above values - keys that are unprefixed or have kubernetes.io   prefix are considered reserved and hence may not be used.   Capacity reported here may be larger than the actual capacity when a volume   expansion operation is requested. For storage quota, the larger value from   allocatedResources and PVC.spec.resources is used. If allocatedResources is   not set, PVC.spec.resources alone is used for quota calculation. If a volume   expansion capacity request is lowered, allocatedResources is only lowered if   there are no expansion operations in progress and if the actual volume   capacity is equal or lower than the requested capacity.   A controller that receives PVC update with previously unknown resourceName   should ignore the update for the purpose it was designed. For example - a   controller that only is responsible for resizing capacity of the volume,   should ignore PVC updates that change other valid resources associated with   PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure   feature.</li> <li>capacity <code>Optional[dict]</code> - capacity represents the actual resources of the underlying volume.</li> <li>conditions <code>Optional[List[PersistentVolumeClaimCondition]]</code> - conditions is the current Condition of persistent volume claim. If underlying   persistent volume is being resized then the Condition will be set to   'ResizeStarted'.</li> <li>currentVolumeAttributesClassName <code>Optional[str]</code> - currentVolumeAttributesClassName is the current name of the   VolumeAttributesClass the PVC is using. When unset, there is no   VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha   field and requires enabling VolumeAttributesClass feature.</li> <li>modifyVolumeStatus <code>Optional[ModifyVolumeStatus]</code> - ModifyVolumeStatus represents the status object of ControllerModifyVolume   operation. When this is unset, there is no ModifyVolume operation being   attempted. This is an alpha field and requires enabling VolumeAttributesClass   feature.</li> <li>phase <code>Optional[str]</code> - phase represents the current phase of PersistentVolumeClaim.</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimtemplate","title":"PersistentVolumeClaimTemplate","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimTemplate</code>(spec, metadata=None) <p>PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.</p> <p>parameters</p> <ul> <li>spec <code>PersistentVolumeClaimSpec</code> - The specification for the PersistentVolumeClaim. The entire content is copied   unchanged into the PVC that gets created from this template. The same fields   as in a PersistentVolumeClaim are also valid here.</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - May contain labels and annotations that will be copied into the PVC when   creating it. No other fields are allowed and will be rejected during   validation.</li> </ul>"},{"location":"models/core_v1/#persistentvolumeclaimvolumesource","title":"PersistentVolumeClaimVolumeSource","text":"class <code>lightkube.models.core_v1.PersistentVolumeClaimVolumeSource</code>(claimName, readOnly=None) <p>PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).</p> <p>parameters</p> <ul> <li>claimName <code>str</code> - claimName is the name of a PersistentVolumeClaim in the same namespace as the   pod using this volume. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly Will force the ReadOnly setting in VolumeMounts. Default false.</li> </ul>"},{"location":"models/core_v1/#persistentvolumelist","title":"PersistentVolumeList","text":"class <code>lightkube.models.core_v1.PersistentVolumeList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PersistentVolumeList is a list of PersistentVolume items.</p> <p>parameters</p> <ul> <li>items <code>PersistentVolume</code> - items is a list of persistent volumes. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#persistentvolumespec","title":"PersistentVolumeSpec","text":"class <code>lightkube.models.core_v1.PersistentVolumeSpec</code>(accessModes=None, awsElasticBlockStore=None, azureDisk=None, azureFile=None, capacity=None, cephfs=None, cinder=None, claimRef=None, csi=None, fc=None, flexVolume=None, flocker=None, gcePersistentDisk=None, glusterfs=None, hostPath=None, iscsi=None, local=None, mountOptions=None, nfs=None, nodeAffinity=None, persistentVolumeReclaimPolicy=None, photonPersistentDisk=None, portworxVolume=None, quobyte=None, rbd=None, scaleIO=None, storageClassName=None, storageos=None, volumeAttributesClassName=None, volumeMode=None, vsphereVolume=None) <p>PersistentVolumeSpec is the specification of a persistent volume.</p> <p>parameters</p> <ul> <li>accessModes <code>Optional[List[str]]</code> - accessModes contains all ways the volume can be mounted. More info</li> <li>awsElasticBlockStore <code>Optional[AWSElasticBlockStoreVolumeSource]</code> - awsElasticBlockStore represents an AWS Disk resource that is attached to a   kubelet's host machine and then exposed to the pod. More info</li> <li>azureDisk <code>Optional[AzureDiskVolumeSource]</code> - azureDisk represents an Azure Data Disk mount on the host and bind mount to   the pod.</li> <li>azureFile <code>Optional[AzureFilePersistentVolumeSource]</code> - azureFile represents an Azure File Service mount on the host and bind mount to   the pod.</li> <li>capacity <code>Optional[dict]</code> - capacity is the description of the persistent volume's resources and capacity.   More info</li> <li>cephfs <code>Optional[CephFSPersistentVolumeSource]</code> - cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</li> <li>cinder <code>Optional[CinderPersistentVolumeSource]</code> - cinder represents a cinder volume attached and mounted on kubelets host   machine. More info</li> <li>claimRef <code>Optional[ObjectReference]</code> - claimRef is part of a bi-directional binding between PersistentVolume and   PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is   the authoritative bind between PV and PVC. More info</li> <li>csi <code>Optional[CSIPersistentVolumeSource]</code> - csi represents storage that is handled by an external CSI driver (Beta   feature).</li> <li>fc <code>Optional[FCVolumeSource]</code> - fc represents a Fibre Channel resource that is attached to a kubelet's host   machine and then exposed to the pod.</li> <li>flexVolume <code>Optional[FlexPersistentVolumeSource]</code> - flexVolume represents a generic volume resource that is provisioned/attached   using an exec based plugin.</li> <li>flocker <code>Optional[FlockerVolumeSource]</code> - flocker represents a Flocker volume attached to a kubelet's host machine and   exposed to the pod for its usage. This depends on the Flocker control service   being running</li> <li>gcePersistentDisk <code>Optional[GCEPersistentDiskVolumeSource]</code> - gcePersistentDisk represents a GCE Disk resource that is attached to a   kubelet's host machine and then exposed to the pod. Provisioned by an admin.   More info</li> <li>glusterfs <code>Optional[GlusterfsPersistentVolumeSource]</code> - glusterfs represents a Glusterfs volume that is attached to a host and exposed   to the pod. Provisioned by an admin. More info</li> <li>hostPath <code>Optional[HostPathVolumeSource]</code> - hostPath represents a directory on the host. Provisioned by a developer or   tester. This is useful for single-node development and testing only! On-host   storage is not supported in any way and WILL NOT WORK in a multi-node cluster.   More info</li> <li>iscsi <code>Optional[ISCSIPersistentVolumeSource]</code> - iscsi represents an ISCSI Disk resource that is attached to a kubelet's host   machine and then exposed to the pod. Provisioned by an admin.</li> <li>local <code>Optional[LocalVolumeSource]</code> - local represents directly-attached storage with node affinity</li> <li>mountOptions <code>Optional[List[str]]</code> - mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated</li> <li>mount will simply fail if one is invalid. More info</li> <li>nfs <code>Optional[NFSVolumeSource]</code> - nfs represents an NFS mount on the host. Provisioned by an admin. More info</li> <li>nodeAffinity <code>Optional[VolumeNodeAffinity]</code> - nodeAffinity defines constraints that limit what nodes this volume can be   accessed from. This field influences the scheduling of pods that use this   volume.</li> <li>persistentVolumeReclaimPolicy <code>Optional[str]</code> - persistentVolumeReclaimPolicy defines what happens to a persistent volume when   released from its claim. Valid options are Retain (default for manually   created PersistentVolumes), Delete (default for dynamically provisioned   PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the   volume plugin underlying this PersistentVolume. More info</li> <li>photonPersistentDisk <code>Optional[PhotonPersistentDiskVolumeSource]</code> - photonPersistentDisk represents a PhotonController persistent disk attached   and mounted on kubelets host machine</li> <li>portworxVolume <code>Optional[PortworxVolumeSource]</code> - portworxVolume represents a portworx volume attached and mounted on kubelets   host machine</li> <li>quobyte <code>Optional[QuobyteVolumeSource]</code> - quobyte represents a Quobyte mount on the host that shares a pod's lifetime</li> <li>rbd <code>Optional[RBDPersistentVolumeSource]</code> - rbd represents a Rados Block Device mount on the host that shares a pod's   lifetime. More info</li> <li>scaleIO <code>Optional[ScaleIOPersistentVolumeSource]</code> - scaleIO represents a ScaleIO persistent volume attached and mounted on   Kubernetes nodes.</li> <li>storageClassName <code>Optional[str]</code> - storageClassName is the name of StorageClass to which this persistent volume   belongs. Empty value means that this volume does not belong to any   StorageClass.</li> <li>storageos <code>Optional[StorageOSPersistentVolumeSource]</code> - storageOS represents a StorageOS volume that is attached to the kubelet's host   machine and mounted into the pod More info</li> <li>volumeAttributesClassName <code>Optional[str]</code> - Name of VolumeAttributesClass to which this persistent volume belongs. Empty   value is not allowed. When this field is not set, it indicates that this   volume does not belong to any VolumeAttributesClass. This field is mutable and   can be changed by the CSI driver after a volume has been updated successfully   to a new class. For an unbound PersistentVolume, the volumeAttributesClassName   will be matched with unbound PersistentVolumeClaims during the binding   process. This is an alpha field and requires enabling VolumeAttributesClass   feature.</li> <li>volumeMode <code>Optional[str]</code> - volumeMode defines if a volume is intended to be used with a formatted   filesystem or to remain in raw block state. Value of Filesystem is implied   when not included in spec.</li> <li>vsphereVolume <code>Optional[VsphereVirtualDiskVolumeSource]</code> - vsphereVolume represents a vSphere volume attached and mounted on kubelets   host machine</li> </ul>"},{"location":"models/core_v1/#persistentvolumestatus","title":"PersistentVolumeStatus","text":"class <code>lightkube.models.core_v1.PersistentVolumeStatus</code>(lastPhaseTransitionTime=None, message=None, phase=None, reason=None) <p>PersistentVolumeStatus is the current status of a persistent volume.</p> <p>parameters</p> <ul> <li>lastPhaseTransitionTime <code>Optional[meta_v1.Time]</code> - lastPhaseTransitionTime is the time the phase transitioned from one to another   and automatically resets to current time everytime a volume phase transitions.   This is an alpha field and requires enabling   PersistentVolumeLastPhaseTransitionTime feature.</li> <li>message <code>Optional[str]</code> - message is a human-readable message indicating details about why the volume is   in this state.</li> <li>phase <code>Optional[str]</code> - phase indicates if a volume is available, bound to a claim, or released by a   claim. More info</li> <li>reason <code>Optional[str]</code> - reason is a brief CamelCase string that describes any failure and is meant for   machine parsing and tidy display in the CLI.</li> </ul>"},{"location":"models/core_v1/#photonpersistentdiskvolumesource","title":"PhotonPersistentDiskVolumeSource","text":"class <code>lightkube.models.core_v1.PhotonPersistentDiskVolumeSource</code>(pdID, fsType=None) <p>Represents a Photon Controller persistent disk resource.</p> <p>parameters</p> <ul> <li>pdID <code>str</code> - pdID is the ID that identifies Photon Controller persistent disk</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to   be \"ext4\" if unspecified.</li> </ul>"},{"location":"models/core_v1/#pod","title":"Pod","text":"class <code>lightkube.models.core_v1.Pod</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[PodSpec]</code> - Specification of the desired behavior of the pod. More info</li> <li>status <code>Optional[PodStatus]</code> - Most recently observed status of the pod. This data may not be up to date.   Populated by the system. Read-only. More info</li> </ul>"},{"location":"models/core_v1/#podaffinity","title":"PodAffinity","text":"class <code>lightkube.models.core_v1.PodAffinity</code>(preferredDuringSchedulingIgnoredDuringExecution=None, requiredDuringSchedulingIgnoredDuringExecution=None) <p>Pod affinity is a group of inter pod affinity scheduling rules.</p> <p>parameters</p> <ul> <li>preferredDuringSchedulingIgnoredDuringExecution <code>Optional[List[WeightedPodAffinityTerm]]</code> - The scheduler will prefer to schedule pods to nodes that satisfy the affinity   expressions specified by this field, but it may choose a node that violates   one or more of the expressions. The node that is most preferred is the one   with the greatest sum of weights, i.e. for each node that meets all of the   scheduling requirements (resource request, requiredDuringScheduling affinity   expressions, etc.), compute a sum by iterating through the elements of this   field and adding \"weight\" to the sum if the node has pods which matches the   corresponding podAffinityTerm; the node(s) with the highest sum are the most   preferred.</li> <li>requiredDuringSchedulingIgnoredDuringExecution <code>Optional[List[PodAffinityTerm]]</code> - If the affinity requirements specified by this field are not met at scheduling   time, the pod will not be scheduled onto the node. If the affinity   requirements specified by this field cease to be met at some point during pod   execution (e.g. due to a pod label update), the system may or may not try to   eventually evict the pod from its node. When there are multiple elements, the   lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all   terms must be satisfied.</li> </ul>"},{"location":"models/core_v1/#podaffinityterm","title":"PodAffinityTerm","text":"class <code>lightkube.models.core_v1.PodAffinityTerm</code>(topologyKey, labelSelector=None, matchLabelKeys=None, mismatchLabelKeys=None, namespaceSelector=None, namespaces=None) <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running <p>parameters</p> <ul> <li>topologyKey <code>str</code> - This pod should be co-located (affinity) or not co-located (anti-affinity)   with the pods matching the labelSelector in the specified namespaces, where   co-located is defined as running on a node whose value of the label with key   topologyKey matches that of any node on which any of the selected pods is   running. Empty topologyKey is not allowed.</li> <li>labelSelector <code>Optional[meta_v1.LabelSelector]</code> - A label query over a set of resources, in this case pods. If it's null, this   PodAffinityTerm matches with no Pods.</li> <li>matchLabelKeys <code>Optional[List[str]]</code> - MatchLabelKeys is a set of pod label keys to select which pods will be taken   into consideration. The keys are used to lookup values from the incoming pod   labels, those key-value labels are merged with <code>LabelSelector</code> as <code>key in   (value)</code> to select the group of existing pods which pods will be taken into   consideration for the incoming pod's pod (anti) affinity. Keys that don't   exist in the incoming pod labels will be ignored. The default value is empty.   The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.   Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an   alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</li> <li>mismatchLabelKeys <code>Optional[List[str]]</code> - MismatchLabelKeys is a set of pod label keys to select which pods will be   taken into consideration. The keys are used to lookup values from the incoming   pod labels, those key-value labels are merged with <code>LabelSelector</code> as <code>key   notin (value)</code> to select the group of existing pods which pods will be taken   into consideration for the incoming pod's pod (anti) affinity. Keys that don't   exist in the incoming pod labels will be ignored. The default value is empty.   The same key is forbidden to exist in both MismatchLabelKeys and   LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't   set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity   feature gate.</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - A label query over the set of namespaces that the term applies to. The term is   applied to the union of the namespaces selected by this field and the ones   listed in the namespaces field. null selector and null or empty namespaces   list means \"this pod's namespace\". An empty selector ({}) matches all   namespaces.</li> <li>namespaces <code>Optional[List[str]]</code> - namespaces specifies a static list of namespace names that the term applies   to. The term is applied to the union of the namespaces listed in this field   and the ones selected by namespaceSelector. null or empty namespaces list and   null namespaceSelector means \"this pod's namespace\".</li> </ul>"},{"location":"models/core_v1/#podantiaffinity","title":"PodAntiAffinity","text":"class <code>lightkube.models.core_v1.PodAntiAffinity</code>(preferredDuringSchedulingIgnoredDuringExecution=None, requiredDuringSchedulingIgnoredDuringExecution=None) <p>Pod anti affinity is a group of inter pod anti affinity scheduling rules.</p> <p>parameters</p> <ul> <li>preferredDuringSchedulingIgnoredDuringExecution <code>Optional[List[WeightedPodAffinityTerm]]</code> - The scheduler will prefer to schedule pods to nodes that satisfy the   anti-affinity expressions specified by this field, but it may choose a node   that violates one or more of the expressions. The node that is most preferred   is the one with the greatest sum of weights, i.e. for each node that meets all   of the scheduling requirements (resource request, requiredDuringScheduling   anti-affinity expressions, etc.), compute a sum by iterating through the   elements of this field and adding \"weight\" to the sum if the node has pods   which matches the corresponding podAffinityTerm; the node(s) with the highest   sum are the most preferred.</li> <li>requiredDuringSchedulingIgnoredDuringExecution <code>Optional[List[PodAffinityTerm]]</code> - If the anti-affinity requirements specified by this field are not met at   scheduling time, the pod will not be scheduled onto the node. If the   anti-affinity requirements specified by this field cease to be met at some   point during pod execution (e.g. due to a pod label update), the system may or   may not try to eventually evict the pod from its node. When there are multiple   elements, the lists of nodes corresponding to each podAffinityTerm are   intersected, i.e. all terms must be satisfied.</li> </ul>"},{"location":"models/core_v1/#podcondition","title":"PodCondition","text":"class <code>lightkube.models.core_v1.PodCondition</code>(status, type, lastProbeTime=None, lastTransitionTime=None, message=None, reason=None) <p>PodCondition contains details for the current condition of this pod.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status is the status of the condition. Can be True, False, Unknown. More info</li> <li>type <code>str</code> - Type is the type of the condition. More info</li> <li>lastProbeTime <code>Optional[meta_v1.Time]</code> - Last time we probed the condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - Last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - Human-readable message indicating details about last transition.</li> <li>reason <code>Optional[str]</code> - Unique, one-word, CamelCase reason for the condition's last transition.</li> </ul>"},{"location":"models/core_v1/#poddnsconfig","title":"PodDNSConfig","text":"class <code>lightkube.models.core_v1.PodDNSConfig</code>(nameservers=None, options=None, searches=None) <p>PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.</p> <p>parameters</p> <ul> <li>nameservers <code>Optional[List[str]]</code> - A list of DNS name server IP addresses. This will be appended to the base   nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</li> <li>options <code>Optional[List[PodDNSConfigOption]]</code> - A list of DNS resolver options. This will be merged with the base options   generated from DNSPolicy. Duplicated entries will be removed. Resolution   options given in Options will override those that appear in the base   DNSPolicy.</li> <li>searches <code>Optional[List[str]]</code> - A list of DNS search domains for host-name lookup. This will be appended to   the base search paths generated from DNSPolicy. Duplicated search paths will   be removed.</li> </ul>"},{"location":"models/core_v1/#poddnsconfigoption","title":"PodDNSConfigOption","text":"class <code>lightkube.models.core_v1.PodDNSConfigOption</code>(name=None, value=None) <p>PodDNSConfigOption defines DNS resolver options of a pod.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Required.</li> <li>value <code>Optional[str]</code> -</li> </ul>"},{"location":"models/core_v1/#podip","title":"PodIP","text":"class <code>lightkube.models.core_v1.PodIP</code>(ip=None) <p>PodIP represents a single IP address allocated to the pod.</p> <p>parameters</p> <ul> <li>ip <code>Optional[str]</code> - IP is the IP address assigned to the pod</li> </ul>"},{"location":"models/core_v1/#podlist","title":"PodList","text":"class <code>lightkube.models.core_v1.PodList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PodList is a list of Pods.</p> <p>parameters</p> <ul> <li>items <code>Pod</code> - List of pods. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#podos","title":"PodOS","text":"class <code>lightkube.models.core_v1.PodOS</code>(name) <p>PodOS defines the OS parameters of a pod.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name is the name of the operating system. The currently supported values are   linux and windows. Additional value may be defined in future and can be one   of:   https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration   Clients should expect to handle additional values and treat unrecognized   values in this field as os: null</li> </ul>"},{"location":"models/core_v1/#podreadinessgate","title":"PodReadinessGate","text":"class <code>lightkube.models.core_v1.PodReadinessGate</code>(conditionType) <p>PodReadinessGate contains the reference to a pod condition</p> <p>parameters</p> <ul> <li>conditionType <code>str</code> - ConditionType refers to a condition in the pod's condition list with matching   type.</li> </ul>"},{"location":"models/core_v1/#podresourceclaim","title":"PodResourceClaim","text":"class <code>lightkube.models.core_v1.PodResourceClaim</code>(name, source=None) <p>PodResourceClaim references exactly one ResourceClaim through a ClaimSource. It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name uniquely identifies this resource claim inside the pod. This must be a   DNS_LABEL.</li> <li>source <code>Optional[ClaimSource]</code> - Source describes where to find the ResourceClaim.</li> </ul>"},{"location":"models/core_v1/#podresourceclaimstatus","title":"PodResourceClaimStatus","text":"class <code>lightkube.models.core_v1.PodResourceClaimStatus</code>(name, resourceClaimName=None) <p>PodResourceClaimStatus is stored in the PodStatus for each PodResourceClaim which references a ResourceClaimTemplate. It stores the generated name for the corresponding ResourceClaim.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name uniquely identifies this resource claim inside the pod. This must match   the name of an entry in pod.spec.resourceClaims, which implies that the string   must be a DNS_LABEL.</li> <li>resourceClaimName <code>Optional[str]</code> - ResourceClaimName is the name of the ResourceClaim that was generated for the   Pod in the namespace of the Pod. It this is unset, then generating a   ResourceClaim was not necessary. The pod.spec.resourceClaims entry can be   ignored in this case.</li> </ul>"},{"location":"models/core_v1/#podschedulinggate","title":"PodSchedulingGate","text":"class <code>lightkube.models.core_v1.PodSchedulingGate</code>(name) <p>PodSchedulingGate is associated to a Pod to guard its scheduling.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name of the scheduling gate. Each scheduling gate must have a unique name   field.</li> </ul>"},{"location":"models/core_v1/#podsecuritycontext","title":"PodSecurityContext","text":"class <code>lightkube.models.core_v1.PodSecurityContext</code>(fsGroup=None, fsGroupChangePolicy=None, runAsGroup=None, runAsNonRoot=None, runAsUser=None, seLinuxOptions=None, seccompProfile=None, supplementalGroups=None, sysctls=None, windowsOptions=None) <p>PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.</p> <p>parameters</p> <ul> <li>fsGroup <code>Optional[int]</code> - A special supplemental group that applies to all containers in a pod. Some   volume types allow the Kubelet to change the ownership of that volume to be   owned by the pod:</li> <li>The owning GID will be the FSGroup 2. The setgid bit is set (new files   created in the volume will be owned by FSGroup) 3. The permission bits are   OR'd with rw-rw----   If unset, the Kubelet will not modify the ownership and permissions of any   volume. Note that this field cannot be set when spec.os.name is windows.</li> <li>fsGroupChangePolicy <code>Optional[str]</code> - fsGroupChangePolicy defines behavior of changing ownership and permission of   the volume before being exposed inside Pod. This field will only apply to   volume types which support fsGroup based ownership(and permissions). It will   have no effect on ephemeral volume types such as: secret, configmaps and   emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified,   \"Always\" is used. Note that this field cannot be set when spec.os.name is   windows.</li> <li>runAsGroup <code>Optional[int]</code> - The GID to run the entrypoint of the container process. Uses runtime default   if unset. May also be set in SecurityContext.  If set in both SecurityContext   and PodSecurityContext, the value specified in SecurityContext takes   precedence for that container. Note that this field cannot be set when   spec.os.name is windows.</li> <li>runAsNonRoot <code>Optional[bool]</code> - Indicates that the container must run as a non-root user. If true, the Kubelet   will validate the image at runtime to ensure that it does not run as UID 0   (root) and fail to start the container if it does. If unset or false, no such   validation will be performed. May also be set in SecurityContext.  If set in   both SecurityContext and PodSecurityContext, the value specified in   SecurityContext takes precedence.</li> <li>runAsUser <code>Optional[int]</code> - The UID to run the entrypoint of the container process. Defaults to user   specified in image metadata if unspecified. May also be set in   SecurityContext.  If set in both SecurityContext and PodSecurityContext, the   value specified in SecurityContext takes precedence for that container. Note   that this field cannot be set when spec.os.name is windows.</li> <li>seLinuxOptions <code>Optional[SELinuxOptions]</code> - The SELinux context to be applied to all containers. If unspecified, the   container runtime will allocate a random SELinux context for each container.   May also be set in SecurityContext.  If set in both SecurityContext and   PodSecurityContext, the value specified in SecurityContext takes precedence   for that container. Note that this field cannot be set when spec.os.name is   windows.</li> <li>seccompProfile <code>Optional[SeccompProfile]</code> - The seccomp options to use by the containers in this pod. Note that this field   cannot be set when spec.os.name is windows.</li> <li>supplementalGroups <code>Optional[List[int]]</code> - A list of groups applied to the first process run in each container, in   addition to the container's primary GID, the fsGroup (if specified), and group   memberships defined in the container image for the uid of the container   process. If unspecified, no additional groups are added to any container. Note   that group memberships defined in the container image for the uid of the   container process are still effective, even if they are not included in this   list. Note that this field cannot be set when spec.os.name is windows.</li> <li>sysctls <code>Optional[List[Sysctl]]</code> - Sysctls hold a list of namespaced sysctls used for the pod. Pods with   unsupported sysctls (by the container runtime) might fail to launch. Note that   this field cannot be set when spec.os.name is windows.</li> <li>windowsOptions <code>Optional[WindowsSecurityContextOptions]</code> - The Windows specific settings applied to all containers. If unspecified, the   options within a container's SecurityContext will be used. If set in both   SecurityContext and PodSecurityContext, the value specified in SecurityContext   takes precedence. Note that this field cannot be set when spec.os.name is   linux.</li> </ul>"},{"location":"models/core_v1/#podspec","title":"PodSpec","text":"class <code>lightkube.models.core_v1.PodSpec</code>(containers, activeDeadlineSeconds=None, affinity=None, automountServiceAccountToken=None, dnsConfig=None, dnsPolicy=None, enableServiceLinks=None, ephemeralContainers=None, hostAliases=None, hostIPC=None, hostNetwork=None, hostPID=None, hostUsers=None, hostname=None, imagePullSecrets=None, initContainers=None, nodeName=None, nodeSelector=None, os=None, overhead=None, preemptionPolicy=None, priority=None, priorityClassName=None, readinessGates=None, resourceClaims=None, restartPolicy=None, runtimeClassName=None, schedulerName=None, schedulingGates=None, securityContext=None, serviceAccount=None, serviceAccountName=None, setHostnameAsFQDN=None, shareProcessNamespace=None, subdomain=None, terminationGracePeriodSeconds=None, tolerations=None, topologySpreadConstraints=None, volumes=None) <p>PodSpec is a description of a pod.</p> <p>parameters</p> <ul> <li>containers <code>Container</code> - List of containers belonging to the pod. Containers cannot currently be added   or removed. There must be at least one container in a Pod. Cannot be updated.</li> <li>activeDeadlineSeconds <code>Optional[int]</code> - Optional duration in seconds the pod may be active on the node relative to   StartTime before the system will actively try to mark it failed and kill   associated containers. Value must be a positive integer.</li> <li>affinity <code>Optional[Affinity]</code> - If specified, the pod's scheduling constraints</li> <li>automountServiceAccountToken <code>Optional[bool]</code> - AutomountServiceAccountToken indicates whether a service account token should   be automatically mounted.</li> <li>dnsConfig <code>Optional[PodDNSConfig]</code> - Specifies the DNS parameters of a pod. Parameters specified here will be   merged to the generated DNS configuration based on DNSPolicy.</li> <li>dnsPolicy <code>Optional[str]</code> - Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are   'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters   given in DNSConfig will be merged with the policy selected with DNSPolicy. To   have DNS options set along with hostNetwork, you have to specify DNS policy   explicitly to 'ClusterFirstWithHostNet'.</li> <li>enableServiceLinks <code>Optional[bool]</code> - EnableServiceLinks indicates whether information about services should be   injected into pod's environment variables, matching the syntax of Docker   links. Optional: Defaults to true.</li> <li>ephemeralContainers <code>Optional[List[EphemeralContainer]]</code> - List of ephemeral containers run in this pod. Ephemeral containers may be run   in an existing pod to perform user-initiated actions such as debugging. This   list cannot be specified when creating a pod, and it cannot be modified by   updating the pod spec. In order to add an ephemeral container to an existing   pod, use the pod's ephemeralcontainers subresource.</li> <li>hostAliases <code>Optional[List[HostAlias]]</code> - HostAliases is an optional list of hosts and IPs that will be injected into   the pod's hosts file if specified. This is only valid for non-hostNetwork   pods.</li> <li>hostIPC <code>Optional[bool]</code> - Use the host's ipc namespace. Optional: Default to false.</li> <li>hostNetwork <code>Optional[bool]</code> - Host networking requested for this pod. Use the host's network namespace. If   this option is set, the ports that will be used must be specified. Default to   false.</li> <li>hostPID <code>Optional[bool]</code> - Use the host's pid namespace. Optional: Default to false.</li> <li>hostUsers <code>Optional[bool]</code> - Use the host's user namespace. Optional: Default to true. If set to true or   not present, the pod will be run in the host user namespace, useful for when   the pod needs a feature only available to the host user namespace, such as   loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns   is created for the pod. Setting false is useful for mitigating container   breakout vulnerabilities even allowing users to run their containers as root   without actually having root privileges on the host. This field is alpha-level   and is only honored by servers that enable the UserNamespacesSupport feature.</li> <li>hostname <code>Optional[str]</code> - Specifies the hostname of the Pod If not specified, the pod's hostname will be   set to a system-defined value.</li> <li>imagePullSecrets <code>Optional[List[LocalObjectReference]]</code> - ImagePullSecrets is an optional list of references to secrets in the same   namespace to use for pulling any of the images used by this PodSpec. If   specified, these secrets will be passed to individual puller implementations   for them to use. More info</li> <li>initContainers <code>Optional[List[Container]]</code> - List of initialization containers belonging to the pod. Init containers are   executed in order prior to containers being started. If any init container   fails, the pod is considered to have failed and is handled according to its   restartPolicy. The name for an init container or normal container must be   unique among all containers. Init containers may not have Lifecycle actions,   Readiness probes, Liveness probes, or Startup probes. The resourceRequirements   of an init container are taken into account during scheduling by finding the   highest request/limit for each resource type, and then using the max of of   that value or the sum of the normal containers. Limits are applied to init   containers in a similar fashion. Init containers cannot currently be added or   removed. Cannot be updated. More info</li> <li>nodeName <code>Optional[str]</code> - NodeName is a request to schedule this pod onto a specific node. If it is   non-empty, the scheduler simply schedules this pod onto that node, assuming   that it fits resource requirements.</li> <li>nodeSelector <code>Optional[dict]</code> - NodeSelector is a selector which must be true for the pod to fit on a node.   Selector which must match a node's labels for the pod to be scheduled on that   node. More info</li> <li>os <code>Optional[PodOS]</code> - Specifies the OS of the containers in the pod. Some pod and container fields   are restricted if this is set.   If the OS field is set to linux, the following fields must be unset:   -securityContext.windowsOptions   If the OS field is set to windows, following fields must be unset: -   spec.hostPID - spec.hostIPC - spec.hostUsers -   spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile -   spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy -   spec.securityContext.sysctls - spec.shareProcessNamespace -   spec.securityContext.runAsUser - spec.securityContext.runAsGroup -   spec.securityContext.supplementalGroups -   spec.containers[].securityContext.seLinuxOptions -   spec.containers[].securityContext.seccompProfile -   spec.containers[].securityContext.capabilities -   spec.containers[].securityContext.readOnlyRootFilesystem -   spec.containers[].securityContext.privileged -   spec.containers[].securityContext.allowPrivilegeEscalation -   spec.containers[].securityContext.procMount -   spec.containers[].securityContext.runAsUser -   spec.containers[*].securityContext.runAsGroup</li> <li>overhead <code>Optional[dict]</code> - Overhead represents the resource overhead associated with running a pod for a   given RuntimeClass. This field will be autopopulated at admission time by the   RuntimeClass admission controller. If the RuntimeClass admission controller is   enabled, overhead must not be set in Pod create requests. The RuntimeClass   admission controller will reject Pod create requests which have the overhead   already set. If RuntimeClass is configured and selected in the PodSpec,   Overhead will be set to the value defined in the corresponding RuntimeClass,   otherwise it will remain unset and treated as zero. More info</li> <li>preemptionPolicy <code>Optional[str]</code> - PreemptionPolicy is the Policy for preempting pods with lower priority. One of   Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.</li> <li>priority <code>Optional[int]</code> - The priority value. Various system components use this field to find the   priority of the pod. When Priority Admission Controller is enabled, it   prevents users from setting this field. The admission controller populates   this field from PriorityClassName. The higher the value, the higher the   priority.</li> <li>priorityClassName <code>Optional[str]</code> - If specified, indicates the pod's priority. \"system-node-critical\" and   \"system-cluster-critical\" are two special keywords which indicate the highest   priorities with the former being the highest priority. Any other name must be   defined by creating a PriorityClass object with that name. If not specified,   the pod priority will be default or zero if there is no default.</li> <li>readinessGates <code>Optional[List[PodReadinessGate]]</code> - If specified, all readiness gates will be evaluated for pod readiness. A pod   is ready when all its containers are ready AND all conditions specified in the   readiness gates have status equal to \"True\" More info</li> <li>resourceClaims <code>Optional[List[PodResourceClaim]]</code> - ResourceClaims defines which ResourceClaims must be allocated and reserved   before the Pod is allowed to start. The resources will be made available to   those containers which consume them by name.   This is an alpha field and requires enabling the DynamicResourceAllocation   feature gate.   This field is immutable.</li> <li>restartPolicy <code>Optional[str]</code> - Restart policy for all containers within the pod. One of Always, OnFailure,   Never. In some contexts, only a subset of those values may be permitted.   Default to Always. More info</li> <li>runtimeClassName <code>Optional[str]</code> - RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group,   which should be used to run this pod.  If no RuntimeClass resource matches the   named class, the pod will not be run. If unset or empty, the \"legacy\"   RuntimeClass will be used, which is an implicit class with an empty definition   that uses the default runtime handler. More info</li> <li>schedulerName <code>Optional[str]</code> - If specified, the pod will be dispatched by specified scheduler. If not   specified, the pod will be dispatched by default scheduler.</li> <li>schedulingGates <code>Optional[List[PodSchedulingGate]]</code> - SchedulingGates is an opaque list of values that if specified will block   scheduling the pod. If schedulingGates is not empty, the pod will stay in the   SchedulingGated state and the scheduler will not attempt to schedule the pod.   SchedulingGates can only be set at pod creation time, and be removed only   afterwards.   This is a beta feature enabled by the PodSchedulingReadiness feature gate.</li> <li>securityContext <code>Optional[PodSecurityContext]</code> - SecurityContext holds pod-level security attributes and common container   settings. Optional: Defaults to empty.  See type description for default   values of each field.</li> <li>serviceAccount <code>Optional[str]</code> - DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.   Deprecated: Use serviceAccountName instead.</li> <li>serviceAccountName <code>Optional[str]</code> - ServiceAccountName is the name of the ServiceAccount to use to run this pod.   More info</li> <li>setHostnameAsFQDN <code>Optional[bool]</code> - If true the pod's hostname will be configured as the pod's FQDN, rather than   the leaf name (the default). In Linux containers, this means setting the FQDN   in the hostname field of the kernel (the nodename field of struct utsname). In   Windows containers, this means setting the registry value of hostname for the   registry key   HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.   If a pod does not have FQDN, this has no effect. Default to false.</li> <li>shareProcessNamespace <code>Optional[bool]</code> - Share a single process namespace between all of the containers in a pod. When   this is set containers will be able to view and signal processes from other   containers in the same pod, and the first process in each container will not   be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set.   Optional: Default to false.</li> <li>subdomain <code>Optional[str]</code> - If specified, the fully qualified Pod hostname will be   \"...svc.\". If not   specified, the pod will not have a domainname at all. <li>terminationGracePeriodSeconds <code>Optional[int]</code> - Optional duration in seconds the pod needs to terminate gracefully. May be   decreased in delete request. Value must be non-negative integer. The value   zero indicates stop immediately via the kill signal (no opportunity to shut   down). If this value is nil, the default grace period will be used instead.   The grace period is the duration in seconds after the processes running in the   pod are sent a termination signal and the time when the processes are forcibly   halted with a kill signal. Set this value longer than the expected cleanup   time for your process. Defaults to 30 seconds.</li> <li>tolerations <code>Optional[List[Toleration]]</code> - If specified, the pod's tolerations.</li> <li>topologySpreadConstraints <code>Optional[List[TopologySpreadConstraint]]</code> - TopologySpreadConstraints describes how a group of pods ought to spread across   topology domains. Scheduler will schedule pods in a way which abides by the   constraints. All topologySpreadConstraints are ANDed.</li> <li>volumes <code>Optional[List[Volume]]</code> - List of volumes that can be mounted by containers belonging to the pod. More info</li>"},{"location":"models/core_v1/#podstatus","title":"PodStatus","text":"class <code>lightkube.models.core_v1.PodStatus</code>(conditions=None, containerStatuses=None, ephemeralContainerStatuses=None, hostIP=None, hostIPs=None, initContainerStatuses=None, message=None, nominatedNodeName=None, phase=None, podIP=None, podIPs=None, qosClass=None, reason=None, resize=None, resourceClaimStatuses=None, startTime=None) <p>PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[PodCondition]]</code> - Current service state of pod. More info</li> <li>containerStatuses <code>Optional[List[ContainerStatus]]</code> - The list has one entry per container in the manifest. More info</li> <li>ephemeralContainerStatuses <code>Optional[List[ContainerStatus]]</code> - Status for any ephemeral containers that have run in this pod.</li> <li>hostIP <code>Optional[str]</code> - hostIP holds the IP address of the host to which the pod is assigned. Empty if   the pod has not started yet. A pod can be assigned to a node that has a   problem in kubelet which in turns mean that HostIP will not be updated even if   there is a node is assigned to pod</li> <li>hostIPs <code>Optional[List[HostIP]]</code> - hostIPs holds the IP addresses allocated to the host. If this field is   specified, the first entry must match the hostIP field. This list is empty if   the pod has not started yet. A pod can be assigned to a node that has a   problem in kubelet which in turns means that HostIPs will not be updated even   if there is a node is assigned to this pod.</li> <li>initContainerStatuses <code>Optional[List[ContainerStatus]]</code> - The list has one entry per init container in the manifest. The most recent   successful init container will have ready = true, the most recently started   container will have startTime set. More info</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about why the pod is in this   condition.</li> <li>nominatedNodeName <code>Optional[str]</code> - nominatedNodeName is set only when this pod preempts other pods on the node,   but it cannot be scheduled right away as preemption victims receive their   graceful termination periods. This field does not guarantee that the pod will   be scheduled on this node. Scheduler may decide to place the pod elsewhere if   other nodes become available sooner. Scheduler may also decide to give the   resources on this node to a higher priority pod that is created after   preemption. As a result, this field may be different than PodSpec.nodeName   when the pod is scheduled.</li> <li>phase <code>Optional[str]</code> - The phase of a Pod is a simple, high-level summary of where the Pod is in its   lifecycle. The conditions array, the reason and message fields, and the   individual container status arrays contain more detail about the pod's status.   There are five possible phase values:   Pending: The pod has been accepted by the Kubernetes system, but one or more   of the container images has not been created. This includes time before being   scheduled as well as time spent downloading images over the network, which   could take a while. Running: The pod has been bound to a node, and all of the   containers have been created. At least one container is still running, or is   in the process of starting or restarting. Succeeded: All containers in the pod   have terminated in success, and will not be restarted. Failed: All containers   in the pod have terminated, and at least one container has terminated in   failure. The container either exited with non-zero status or was terminated by   the system. Unknown: For some reason the state of the pod could not be   obtained, typically due to an error in communicating with the host of the pod.   More info</li> <li>podIP <code>Optional[str]</code> - podIP address allocated to the pod. Routable at least within the cluster.   Empty if not yet allocated.</li> <li>podIPs <code>Optional[List[PodIP]]</code> - podIPs holds the IP addresses allocated to the pod. If this field is   specified, the 0th entry must match the podIP field. Pods may be allocated at   most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been   allocated yet.</li> <li>qosClass <code>Optional[str]</code> - The Quality of Service (QOS) classification assigned to the pod based on   resource requirements See PodQOSClass type for available QOS classes More info</li> <li>reason <code>Optional[str]</code> - A brief CamelCase message indicating details about why the pod is in this   state. e.g. 'Evicted'</li> <li>resize <code>Optional[str]</code> - Status of resources resize desired for pod's containers. It is empty if no   resources resize is pending. Any changes to container resources will   automatically set this to \"Proposed\"</li> <li>resourceClaimStatuses <code>Optional[List[PodResourceClaimStatus]]</code> - Status of resource claims.</li> <li>startTime <code>Optional[meta_v1.Time]</code> - RFC 3339 date and time at which the object was acknowledged by the Kubelet.   This is before the Kubelet pulled the container image(s) for the pod.</li> </ul>"},{"location":"models/core_v1/#podtemplate","title":"PodTemplate","text":"class <code>lightkube.models.core_v1.PodTemplate</code>(apiVersion=None, kind=None, metadata=None, template=None) <p>PodTemplate describes a template for creating copies of a predefined pod.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>template <code>Optional[PodTemplateSpec]</code> - Template defines the pods that will be created from this pod template.   https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</li> </ul>"},{"location":"models/core_v1/#podtemplatelist","title":"PodTemplateList","text":"class <code>lightkube.models.core_v1.PodTemplateList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PodTemplateList is a list of PodTemplates.</p> <p>parameters</p> <ul> <li>items <code>PodTemplate</code> - List of pod templates</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#podtemplatespec","title":"PodTemplateSpec","text":"class <code>lightkube.models.core_v1.PodTemplateSpec</code>(metadata=None, spec=None) <p>PodTemplateSpec describes the data a pod should have when created from a template</p> <p>parameters</p> <ul> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[PodSpec]</code> - Specification of the desired behavior of the pod. More info</li> </ul>"},{"location":"models/core_v1/#portstatus","title":"PortStatus","text":"class <code>lightkube.models.core_v1.PortStatus</code>(port, protocol, error=None) <p>parameters</p> <ul> <li>port <code>int</code> - Port is the port number of the service port of which status is recorded here</li> <li>protocol <code>str</code> - Protocol is the protocol of the service port of which status is recorded here   The supported values are: \"TCP\", \"UDP\", \"SCTP\"</li> <li>error <code>Optional[str]</code> - Error is to record the problem with the service port The format of the error   shall comply with the following rules: - built-in error values shall be   specified in this file and those shall use     CamelCase names</li> <li>cloud provider specific error values must have names that comply with the     format foo.example.com/CamelCase.</li> </ul>"},{"location":"models/core_v1/#portworxvolumesource","title":"PortworxVolumeSource","text":"class <code>lightkube.models.core_v1.PortworxVolumeSource</code>(volumeID, fsType=None, readOnly=None) <p>PortworxVolumeSource represents a Portworx volume resource.</p> <p>parameters</p> <ul> <li>volumeID <code>str</code> - volumeID uniquely identifies a Portworx volume</li> <li>fsType <code>Optional[str]</code> - fSType represents the filesystem type to mount Must be a filesystem type   supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred   to be \"ext4\" if unspecified.</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> </ul>"},{"location":"models/core_v1/#preferredschedulingterm","title":"PreferredSchedulingTerm","text":"class <code>lightkube.models.core_v1.PreferredSchedulingTerm</code>(preference, weight) <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> <p>parameters</p> <ul> <li>preference <code>NodeSelectorTerm</code> - A node selector term, associated with the corresponding weight.</li> <li>weight <code>int</code> - Weight associated with matching the corresponding nodeSelectorTerm, in the   range 1-100.</li> </ul>"},{"location":"models/core_v1/#probe","title":"Probe","text":"class <code>lightkube.models.core_v1.Probe</code>(exec=None, failureThreshold=None, grpc=None, httpGet=None, initialDelaySeconds=None, periodSeconds=None, successThreshold=None, tcpSocket=None, terminationGracePeriodSeconds=None, timeoutSeconds=None) <p>Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.</p> <p>parameters</p> <ul> <li>exec <code>Optional[ExecAction]</code> - Exec specifies the action to take.</li> <li>failureThreshold <code>Optional[int]</code> - Minimum consecutive failures for the probe to be considered failed after   having succeeded. Defaults to 3. Minimum value is 1.</li> <li>grpc <code>Optional[GRPCAction]</code> - GRPC specifies an action involving a GRPC port.</li> <li>httpGet <code>Optional[HTTPGetAction]</code> - HTTPGet specifies the http request to perform.</li> <li>initialDelaySeconds <code>Optional[int]</code> - Number of seconds after the container has started before liveness probes are   initiated. More info</li> <li>periodSeconds <code>Optional[int]</code> - How often (in seconds) to perform the probe. Default to 10 seconds. Minimum   value is 1.</li> <li>successThreshold <code>Optional[int]</code> - Minimum consecutive successes for the probe to be considered successful after   having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum   value is 1.</li> <li>tcpSocket <code>Optional[TCPSocketAction]</code> - TCPSocket specifies an action involving a TCP port.</li> <li>terminationGracePeriodSeconds <code>Optional[int]</code> - Optional duration in seconds the pod needs to terminate gracefully upon probe   failure. The grace period is the duration in seconds after the processes   running in the pod are sent a termination signal and the time when the   processes are forcibly halted with a kill signal. Set this value longer than   the expected cleanup time for your process. If this value is nil, the pod's   terminationGracePeriodSeconds will be used. Otherwise, this value overrides   the value provided by the pod spec. Value must be non-negative integer. The   value zero indicates stop immediately via the kill signal (no opportunity to   shut down). This is a beta field and requires enabling   ProbeTerminationGracePeriod feature gate. Minimum value is 1.   spec.terminationGracePeriodSeconds is used if unset.</li> <li>timeoutSeconds <code>Optional[int]</code> - Number of seconds after which the probe times out. Defaults to 1 second.   Minimum value is 1. More info</li> </ul>"},{"location":"models/core_v1/#projectedvolumesource","title":"ProjectedVolumeSource","text":"class <code>lightkube.models.core_v1.ProjectedVolumeSource</code>(defaultMode=None, sources=None) <p>Represents a projected volume source</p> <p>parameters</p> <ul> <li>defaultMode <code>Optional[int]</code> - defaultMode are the mode bits used to set permissions on created files by   default. Must be an octal value between 0000 and 0777 or a decimal value   between 0 and 511. YAML accepts both octal and decimal values, JSON requires   decimal values for mode bits. Directories within the path are not affected by   this setting. This might be in conflict with other options that affect the   file mode, like fsGroup, and the result can be other mode bits set.</li> <li>sources <code>Optional[List[VolumeProjection]]</code> - sources is the list of volume projections</li> </ul>"},{"location":"models/core_v1/#quobytevolumesource","title":"QuobyteVolumeSource","text":"class <code>lightkube.models.core_v1.QuobyteVolumeSource</code>(registry, volume, group=None, readOnly=None, tenant=None, user=None) <p>Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.</p> <p>parameters</p> <ul> <li>registry <code>str</code> - registry represents a single or multiple Quobyte Registry services specified   as a string as host:port pair (multiple entries are separated with commas)   which acts as the central registry for volumes</li> <li>volume <code>str</code> - volume is a string that references an already created Quobyte volume by name.</li> <li>group <code>Optional[str]</code> - group to map volume access to Default is no group</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the Quobyte volume to be mounted with read-only   permissions. Defaults to false.</li> <li>tenant <code>Optional[str]</code> - tenant owning the given Quobyte volume in the Backend Used with dynamically   provisioned Quobyte volumes, value is set by the plugin</li> <li>user <code>Optional[str]</code> - user to map volume access to Defaults to serivceaccount user</li> </ul>"},{"location":"models/core_v1/#rbdpersistentvolumesource","title":"RBDPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.RBDPersistentVolumeSource</code>(image, monitors, fsType=None, keyring=None, pool=None, readOnly=None, secretRef=None, user=None) <p>Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>image <code>str</code> - image is the rados image name. More info</li> <li>monitors <code>List[str]</code> - monitors is a collection of Ceph monitors. More info</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type of the volume that you want to mount. Tip:   Ensure that the filesystem type is supported by the host operating system.   Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if   unspecified. More info</li> <li>keyring <code>Optional[str]</code> - keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.   More info</li> <li>pool <code>Optional[str]</code> - pool is the rados pool name. Default is rbd. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to   false. More info</li> <li>secretRef <code>Optional[SecretReference]</code> - secretRef is name of the authentication secret for RBDUser. If provided   overrides keyring. Default is nil. More info</li> <li>user <code>Optional[str]</code> - user is the rados user name. Default is admin. More info</li> </ul>"},{"location":"models/core_v1/#rbdvolumesource","title":"RBDVolumeSource","text":"class <code>lightkube.models.core_v1.RBDVolumeSource</code>(image, monitors, fsType=None, keyring=None, pool=None, readOnly=None, secretRef=None, user=None) <p>Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>image <code>str</code> - image is the rados image name. More info</li> <li>monitors <code>List[str]</code> - monitors is a collection of Ceph monitors. More info</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type of the volume that you want to mount. Tip:   Ensure that the filesystem type is supported by the host operating system.   Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if   unspecified. More info</li> <li>keyring <code>Optional[str]</code> - keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.   More info</li> <li>pool <code>Optional[str]</code> - pool is the rados pool name. Default is rbd. More info</li> <li>readOnly <code>Optional[bool]</code> - readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to   false. More info</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef is name of the authentication secret for RBDUser. If provided   overrides keyring. Default is nil. More info</li> <li>user <code>Optional[str]</code> - user is the rados user name. Default is admin. More info</li> </ul>"},{"location":"models/core_v1/#replicationcontroller","title":"ReplicationController","text":"class <code>lightkube.models.core_v1.ReplicationController</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ReplicationController represents the configuration of a replication controller.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - If the Labels of a ReplicationController are empty, they are defaulted to be   the same as the Pod(s) that the replication controller manages. Standard   object's metadata. More info</li> <li>spec <code>Optional[ReplicationControllerSpec]</code> - Spec defines the specification of the desired behavior of the replication   controller. More info</li> <li>status <code>Optional[ReplicationControllerStatus]</code> - Status is the most recently observed status of the replication controller.   This data may be out of date by some window of time. Populated by the system.   Read-only. More info</li> </ul>"},{"location":"models/core_v1/#replicationcontrollercondition","title":"ReplicationControllerCondition","text":"class <code>lightkube.models.core_v1.ReplicationControllerCondition</code>(status, type, lastTransitionTime=None, message=None, reason=None) <p>ReplicationControllerCondition describes the state of a replication controller at a certain point.</p> <p>parameters</p> <ul> <li>status <code>str</code> - Status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - Type of replication controller condition.</li> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - The last time the condition transitioned from one status to another.</li> <li>message <code>Optional[str]</code> - A human readable message indicating details about the transition.</li> <li>reason <code>Optional[str]</code> - The reason for the condition's last transition.</li> </ul>"},{"location":"models/core_v1/#replicationcontrollerlist","title":"ReplicationControllerList","text":"class <code>lightkube.models.core_v1.ReplicationControllerList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ReplicationControllerList is a collection of replication controllers.</p> <p>parameters</p> <ul> <li>items <code>ReplicationController</code> - List of replication controllers. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#replicationcontrollerspec","title":"ReplicationControllerSpec","text":"class <code>lightkube.models.core_v1.ReplicationControllerSpec</code>(minReadySeconds=None, replicas=None, selector=None, template=None) <p>ReplicationControllerSpec is the specification of a replication controller.</p> <p>parameters</p> <ul> <li>minReadySeconds <code>Optional[int]</code> - Minimum number of seconds for which a newly created pod should be ready   without any of its container crashing, for it to be considered available.   Defaults to 0 (pod will be considered available as soon as it is ready)</li> <li>replicas <code>Optional[int]</code> - Replicas is the number of desired replicas. This is a pointer to distinguish   between explicit zero and unspecified. Defaults to 1. More info</li> <li>selector <code>Optional[dict]</code> - Selector is a label query over pods that should match the Replicas count. If   Selector is empty, it is defaulted to the labels present on the Pod template.   Label keys and values that must match in order to be controlled by this   replication controller, if empty defaulted to labels on Pod template. More info</li> <li>template <code>Optional[PodTemplateSpec]</code> - Template is the object that describes the pod that will be created if   insufficient replicas are detected. This takes precedence over a TemplateRef.   The only allowed template.spec.restartPolicy value is \"Always\". More info</li> </ul>"},{"location":"models/core_v1/#replicationcontrollerstatus","title":"ReplicationControllerStatus","text":"class <code>lightkube.models.core_v1.ReplicationControllerStatus</code>(replicas, availableReplicas=None, conditions=None, fullyLabeledReplicas=None, observedGeneration=None, readyReplicas=None) <p>ReplicationControllerStatus represents the current status of a replication controller.</p> <p>parameters</p> <ul> <li>replicas <code>int</code> - Replicas is the most recently observed number of replicas. More info</li> <li>availableReplicas <code>Optional[int]</code> - The number of available replicas (ready for at least minReadySeconds) for this   replication controller.</li> <li>conditions <code>Optional[List[ReplicationControllerCondition]]</code> - Represents the latest available observations of a replication controller's   current state.</li> <li>fullyLabeledReplicas <code>Optional[int]</code> - The number of pods that have labels matching the labels of the pod template of   the replication controller.</li> <li>observedGeneration <code>Optional[int]</code> - ObservedGeneration reflects the generation of the most recently observed   replication controller.</li> <li>readyReplicas <code>Optional[int]</code> - The number of ready replicas for this replication controller.</li> </ul>"},{"location":"models/core_v1/#resourceclaim","title":"ResourceClaim","text":"class <code>lightkube.models.core_v1.ResourceClaim</code>(name) <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name must match the name of one entry in pod.spec.resourceClaims of the Pod   where this field is used. It makes that resource available inside a container.</li> </ul>"},{"location":"models/core_v1/#resourcefieldselector","title":"ResourceFieldSelector","text":"class <code>lightkube.models.core_v1.ResourceFieldSelector</code>(resource, containerName=None, divisor=None) <p>ResourceFieldSelector represents container resources (cpu, memory) and their output format</p> <p>parameters</p> <ul> <li>resource <code>str</code> - Required: resource to select</li> <li>containerName <code>Optional[str]</code> - Container name: required for volumes, optional for env vars</li> <li>divisor <code>Optional[resource.Quantity]</code> - Specifies the output format of the exposed resources, defaults to \"1\"</li> </ul>"},{"location":"models/core_v1/#resourcequota","title":"ResourceQuota","text":"class <code>lightkube.models.core_v1.ResourceQuota</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ResourceQuota sets aggregate quota restrictions enforced per namespace</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[ResourceQuotaSpec]</code> - Spec defines the desired quota.   https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</li> <li>status <code>Optional[ResourceQuotaStatus]</code> - Status defines the actual enforced quota and its current usage.   https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</li> </ul>"},{"location":"models/core_v1/#resourcequotalist","title":"ResourceQuotaList","text":"class <code>lightkube.models.core_v1.ResourceQuotaList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ResourceQuotaList is a list of ResourceQuota items.</p> <p>parameters</p> <ul> <li>items <code>ResourceQuota</code> - Items is a list of ResourceQuota objects. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#resourcequotaspec","title":"ResourceQuotaSpec","text":"class <code>lightkube.models.core_v1.ResourceQuotaSpec</code>(hard=None, scopeSelector=None, scopes=None) <p>ResourceQuotaSpec defines the desired hard limits to enforce for Quota.</p> <p>parameters</p> <ul> <li>hard <code>Optional[dict]</code> - hard is the set of desired hard limits for each named resource. More info</li> <li>scopeSelector <code>Optional[ScopeSelector]</code> - scopeSelector is also a collection of filters like scopes that must match each   object tracked by a quota but expressed using ScopeSelectorOperator in   combination with possible values. For a resource to match, both scopes AND   scopeSelector (if specified in spec), must be matched.</li> <li>scopes <code>Optional[List[str]]</code> - A collection of filters that must match each object tracked by a quota. If not   specified, the quota matches all objects.</li> </ul>"},{"location":"models/core_v1/#resourcequotastatus","title":"ResourceQuotaStatus","text":"class <code>lightkube.models.core_v1.ResourceQuotaStatus</code>(hard=None, used=None) <p>ResourceQuotaStatus defines the enforced hard limits and observed use.</p> <p>parameters</p> <ul> <li>hard <code>Optional[dict]</code> - Hard is the set of enforced hard limits for each named resource. More info</li> <li>used <code>Optional[dict]</code> - Used is the current observed total usage of the resource in the namespace.</li> </ul>"},{"location":"models/core_v1/#resourcerequirements","title":"ResourceRequirements","text":"class <code>lightkube.models.core_v1.ResourceRequirements</code>(claims=None, limits=None, requests=None) <p>ResourceRequirements describes the compute resource requirements.</p> <p>parameters</p> <ul> <li>claims <code>Optional[List[ResourceClaim]]</code> - Claims lists the names of resources, defined in spec.resourceClaims, that are   used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation   feature gate.   This field is immutable. It can only be set for containers.</li> <li>limits <code>Optional[dict]</code> - Limits describes the maximum amount of compute resources allowed. More info</li> <li>requests <code>Optional[dict]</code> - Requests describes the minimum amount of compute resources required. If   Requests is omitted for a container, it defaults to Limits if that is   explicitly specified, otherwise to an implementation-defined value. Requests   cannot exceed Limits. More info</li> </ul>"},{"location":"models/core_v1/#selinuxoptions","title":"SELinuxOptions","text":"class <code>lightkube.models.core_v1.SELinuxOptions</code>(level=None, role=None, type=None, user=None) <p>SELinuxOptions are the labels to be applied to the container</p> <p>parameters</p> <ul> <li>level <code>Optional[str]</code> - Level is SELinux level label that applies to the container.</li> <li>role <code>Optional[str]</code> - Role is a SELinux role label that applies to the container.</li> <li>type <code>Optional[str]</code> - Type is a SELinux type label that applies to the container.</li> <li>user <code>Optional[str]</code> - User is a SELinux user label that applies to the container.</li> </ul>"},{"location":"models/core_v1/#scaleiopersistentvolumesource","title":"ScaleIOPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.ScaleIOPersistentVolumeSource</code>(gateway, secretRef, system, fsType=None, protectionDomain=None, readOnly=None, sslEnabled=None, storageMode=None, storagePool=None, volumeName=None) <p>ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume</p> <p>parameters</p> <ul> <li>gateway <code>str</code> - gateway is the host address of the ScaleIO API Gateway.</li> <li>secretRef <code>SecretReference</code> - secretRef references to the secret for ScaleIO user and other sensitive   information. If this is not provided, Login operation will fail.</li> <li>system <code>str</code> - system is the name of the storage system as configured in ScaleIO.</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"</li> <li>protectionDomain <code>Optional[str]</code> - protectionDomain is the name of the ScaleIO Protection Domain for the   configured storage.</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> <li>sslEnabled <code>Optional[bool]</code> - sslEnabled is the flag to enable/disable SSL communication with Gateway,   default false</li> <li>storageMode <code>Optional[str]</code> - storageMode indicates whether the storage for a volume should be   ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.</li> <li>storagePool <code>Optional[str]</code> - storagePool is the ScaleIO Storage Pool associated with the protection domain.</li> <li>volumeName <code>Optional[str]</code> - volumeName is the name of a volume already created in the ScaleIO system that   is associated with this volume source.</li> </ul>"},{"location":"models/core_v1/#scaleiovolumesource","title":"ScaleIOVolumeSource","text":"class <code>lightkube.models.core_v1.ScaleIOVolumeSource</code>(gateway, secretRef, system, fsType=None, protectionDomain=None, readOnly=None, sslEnabled=None, storageMode=None, storagePool=None, volumeName=None) <p>ScaleIOVolumeSource represents a persistent ScaleIO volume</p> <p>parameters</p> <ul> <li>gateway <code>str</code> - gateway is the host address of the ScaleIO API Gateway.</li> <li>secretRef <code>LocalObjectReference</code> - secretRef references to the secret for ScaleIO user and other sensitive   information. If this is not provided, Login operation will fail.</li> <li>system <code>str</code> - system is the name of the storage system as configured in ScaleIO.</li> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".</li> <li>protectionDomain <code>Optional[str]</code> - protectionDomain is the name of the ScaleIO Protection Domain for the   configured storage.</li> <li>readOnly <code>Optional[bool]</code> - readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> <li>sslEnabled <code>Optional[bool]</code> - sslEnabled Flag enable/disable SSL communication with Gateway, default false</li> <li>storageMode <code>Optional[str]</code> - storageMode indicates whether the storage for a volume should be   ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.</li> <li>storagePool <code>Optional[str]</code> - storagePool is the ScaleIO Storage Pool associated with the protection domain.</li> <li>volumeName <code>Optional[str]</code> - volumeName is the name of a volume already created in the ScaleIO system that   is associated with this volume source.</li> </ul>"},{"location":"models/core_v1/#scopeselector","title":"ScopeSelector","text":"class <code>lightkube.models.core_v1.ScopeSelector</code>(matchExpressions=None) <p>A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.</p> <p>parameters</p> <ul> <li>matchExpressions <code>Optional[List[ScopedResourceSelectorRequirement]]</code> - A list of scope selector requirements by scope of the resources.</li> </ul>"},{"location":"models/core_v1/#scopedresourceselectorrequirement","title":"ScopedResourceSelectorRequirement","text":"class <code>lightkube.models.core_v1.ScopedResourceSelectorRequirement</code>(operator, scopeName, values=None) <p>A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.</p> <p>parameters</p> <ul> <li>operator <code>str</code> - Represents a scope's relationship to a set of values. Valid operators are In,   NotIn, Exists, DoesNotExist.</li> <li>scopeName <code>str</code> - The name of the scope that the selector applies to.</li> <li>values <code>Optional[List[str]]</code> - An array of string values. If the operator is In or NotIn, the values array   must be non-empty. If the operator is Exists or DoesNotExist, the values array   must be empty. This array is replaced during a strategic merge patch.</li> </ul>"},{"location":"models/core_v1/#seccompprofile","title":"SeccompProfile","text":"class <code>lightkube.models.core_v1.SeccompProfile</code>(type, localhostProfile=None) <p>SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.</p> <p>parameters</p> <ul> <li>type <code>str</code> - type indicates which kind of seccomp profile will be applied. Valid options   are:   Localhost - a profile defined in a file on the node should be used.   RuntimeDefault - the container runtime default profile should be used.   Unconfined - no profile should be applied.</li> <li>localhostProfile <code>Optional[str]</code> - localhostProfile indicates a profile defined in a file on the node should be   used. The profile must be preconfigured on the node to work. Must be a   descending path, relative to the kubelet's configured seccomp profile   location. Must be set if type is \"Localhost\". Must NOT be set for any other   type.</li> </ul>"},{"location":"models/core_v1/#secret","title":"Secret","text":"class <code>lightkube.models.core_v1.Secret</code>(apiVersion=None, data=None, immutable=None, kind=None, metadata=None, stringData=None, type=None) <p>Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>data <code>Optional[dict]</code> - Data contains the secret data. Each key must consist of alphanumeric   characters, '-', '_' or '.'. The serialized form of the secret data is a   base64 encoded string, representing the arbitrary (possibly non-string) data   value here. Described in https://tools.ietf.org/html/rfc4648#section-4</li> <li>immutable <code>Optional[bool]</code> - Immutable, if set to true, ensures that data stored in the Secret cannot be   updated (only object metadata can be modified). If not set to true, the field   can be modified at any time. Defaulted to nil.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>stringData <code>Optional[dict]</code> - stringData allows specifying non-binary secret data in string form. It is   provided as a write-only input field for convenience. All keys and values are   merged into the data field on write, overwriting any existing values. The   stringData field is never output when reading from the API.</li> <li>type <code>Optional[str]</code> - Used to facilitate programmatic handling of secret data. More info</li> </ul>"},{"location":"models/core_v1/#secretenvsource","title":"SecretEnvSource","text":"class <code>lightkube.models.core_v1.SecretEnvSource</code>(name=None, optional=None) <p>SecretEnvSource selects a Secret to populate the environment variables with.</p> <p>The contents of the target Secret's Data field will represent the key-value pairs as environment variables.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - Specify whether the Secret must be defined</li> </ul>"},{"location":"models/core_v1/#secretkeyselector","title":"SecretKeySelector","text":"class <code>lightkube.models.core_v1.SecretKeySelector</code>(key, name=None, optional=None) <p>SecretKeySelector selects a key of a Secret.</p> <p>parameters</p> <ul> <li>key <code>str</code> - The key of the secret to select from.  Must be a valid secret key.</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - Specify whether the Secret or its key must be defined</li> </ul>"},{"location":"models/core_v1/#secretlist","title":"SecretList","text":"class <code>lightkube.models.core_v1.SecretList</code>(items, apiVersion=None, kind=None, metadata=None) <p>SecretList is a list of Secret.</p> <p>parameters</p> <ul> <li>items <code>Secret</code> - Items is a list of secret objects. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#secretprojection","title":"SecretProjection","text":"class <code>lightkube.models.core_v1.SecretProjection</code>(items=None, name=None, optional=None) <p>Adapts a secret into a projected volume.</p> <p>The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.</p> <p>parameters</p> <ul> <li>items <code>Optional[List[KeyToPath]]</code> - items if unspecified, each key-value pair in the Data field of the referenced   Secret will be projected into the volume as a file whose name is the key and   content is the value. If specified, the listed keys will be projected into the   specified paths, and unlisted keys will not be present. If a key is specified   which is not present in the Secret, the volume setup will error unless it is   marked optional. Paths must be relative and may not contain the '..' path or   start with '..'.</li> <li>name <code>Optional[str]</code> - Name of the referent. More info</li> <li>optional <code>Optional[bool]</code> - optional field specify whether the Secret or its key must be defined</li> </ul>"},{"location":"models/core_v1/#secretreference","title":"SecretReference","text":"class <code>lightkube.models.core_v1.SecretReference</code>(name=None, namespace=None) <p>SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - name is unique within a namespace to reference a secret resource.</li> <li>namespace <code>Optional[str]</code> - namespace defines the space within which the secret name must be unique.</li> </ul>"},{"location":"models/core_v1/#secretvolumesource","title":"SecretVolumeSource","text":"class <code>lightkube.models.core_v1.SecretVolumeSource</code>(defaultMode=None, items=None, optional=None, secretName=None) <p>Adapts a Secret into a volume.</p> <p>The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.</p> <p>parameters</p> <ul> <li>defaultMode <code>Optional[int]</code> - defaultMode is Optional: mode bits used to set permissions on created files by   default. Must be an octal value between 0000 and 0777 or a decimal value   between 0 and 511. YAML accepts both octal and decimal values, JSON requires   decimal values for mode bits. Defaults to 0644. Directories within the path   are not affected by this setting. This might be in conflict with other options   that affect the file mode, like fsGroup, and the result can be other mode bits   set.</li> <li>items <code>Optional[List[KeyToPath]]</code> - items If unspecified, each key-value pair in the Data field of the referenced   Secret will be projected into the volume as a file whose name is the key and   content is the value. If specified, the listed keys will be projected into the   specified paths, and unlisted keys will not be present. If a key is specified   which is not present in the Secret, the volume setup will error unless it is   marked optional. Paths must be relative and may not contain the '..' path or   start with '..'.</li> <li>optional <code>Optional[bool]</code> - optional field specify whether the Secret or its keys must be defined</li> <li>secretName <code>Optional[str]</code> - secretName is the name of the secret in the pod's namespace to use. More info</li> </ul>"},{"location":"models/core_v1/#securitycontext","title":"SecurityContext","text":"class <code>lightkube.models.core_v1.SecurityContext</code>(allowPrivilegeEscalation=None, capabilities=None, privileged=None, procMount=None, readOnlyRootFilesystem=None, runAsGroup=None, runAsNonRoot=None, runAsUser=None, seLinuxOptions=None, seccompProfile=None, windowsOptions=None) <p>SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.</p> <p>parameters</p> <ul> <li>allowPrivilegeEscalation <code>Optional[bool]</code> - AllowPrivilegeEscalation controls whether a process can gain more privileges   than its parent process. This bool directly controls if the no_new_privs flag   will be set on the container process. AllowPrivilegeEscalation is true always   when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that   this field cannot be set when spec.os.name is windows.</li> <li>capabilities <code>Optional[Capabilities]</code> - The capabilities to add/drop when running containers. Defaults to the default   set of capabilities granted by the container runtime. Note that this field   cannot be set when spec.os.name is windows.</li> <li>privileged <code>Optional[bool]</code> - Run container in privileged mode. Processes in privileged containers are   essentially equivalent to root on the host. Defaults to false. Note that this   field cannot be set when spec.os.name is windows.</li> <li>procMount <code>Optional[str]</code> - procMount denotes the type of proc mount to use for the containers. The   default is DefaultProcMount which uses the container runtime defaults for   readonly paths and masked paths. This requires the ProcMountType feature flag   to be enabled. Note that this field cannot be set when spec.os.name is   windows.</li> <li>readOnlyRootFilesystem <code>Optional[bool]</code> - Whether this container has a read-only root filesystem. Default is false. Note   that this field cannot be set when spec.os.name is windows.</li> <li>runAsGroup <code>Optional[int]</code> - The GID to run the entrypoint of the container process. Uses runtime default   if unset. May also be set in PodSecurityContext.  If set in both   SecurityContext and PodSecurityContext, the value specified in SecurityContext   takes precedence. Note that this field cannot be set when spec.os.name is   windows.</li> <li>runAsNonRoot <code>Optional[bool]</code> - Indicates that the container must run as a non-root user. If true, the Kubelet   will validate the image at runtime to ensure that it does not run as UID 0   (root) and fail to start the container if it does. If unset or false, no such   validation will be performed. May also be set in PodSecurityContext.  If set   in both SecurityContext and PodSecurityContext, the value specified in   SecurityContext takes precedence.</li> <li>runAsUser <code>Optional[int]</code> - The UID to run the entrypoint of the container process. Defaults to user   specified in image metadata if unspecified. May also be set in   PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,   the value specified in SecurityContext takes precedence. Note that this field   cannot be set when spec.os.name is windows.</li> <li>seLinuxOptions <code>Optional[SELinuxOptions]</code> - The SELinux context to be applied to the container. If unspecified, the   container runtime will allocate a random SELinux context for each container.   May also be set in PodSecurityContext.  If set in both SecurityContext and   PodSecurityContext, the value specified in SecurityContext takes precedence.   Note that this field cannot be set when spec.os.name is windows.</li> <li>seccompProfile <code>Optional[SeccompProfile]</code> - The seccomp options to use by this container. If seccomp options are provided   at both the pod &amp; container level, the container options override the pod   options. Note that this field cannot be set when spec.os.name is windows.</li> <li>windowsOptions <code>Optional[WindowsSecurityContextOptions]</code> - The Windows specific settings applied to all containers. If unspecified, the   options from the PodSecurityContext will be used. If set in both   SecurityContext and PodSecurityContext, the value specified in SecurityContext   takes precedence. Note that this field cannot be set when spec.os.name is   linux.</li> </ul>"},{"location":"models/core_v1/#service","title":"Service","text":"class <code>lightkube.models.core_v1.Service</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[ServiceSpec]</code> - Spec defines the behavior of a service.   https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</li> <li>status <code>Optional[ServiceStatus]</code> - Most recently observed status of the service. Populated by the system.   Read-only. More info</li> </ul>"},{"location":"models/core_v1/#serviceaccount","title":"ServiceAccount","text":"class <code>lightkube.models.core_v1.ServiceAccount</code>(apiVersion=None, automountServiceAccountToken=None, imagePullSecrets=None, kind=None, metadata=None, secrets=None) <p>ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>automountServiceAccountToken <code>Optional[bool]</code> - AutomountServiceAccountToken indicates whether pods running as this service   account should have an API token automatically mounted. Can be overridden at   the pod level.</li> <li>imagePullSecrets <code>Optional[List[LocalObjectReference]]</code> - ImagePullSecrets is a list of references to secrets in the same namespace to   use for pulling any images in pods that reference this ServiceAccount.   ImagePullSecrets are distinct from Secrets because Secrets can be mounted in   the pod, but ImagePullSecrets are only accessed by the kubelet. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>secrets <code>Optional[List[ObjectReference]]</code> - Secrets is a list of the secrets in the same namespace that pods running using   this ServiceAccount are allowed to use. Pods are only limited to this list if   this service account has a \"kubernetes.io/enforce-mountable-secrets\"   annotation set to \"true\". This field should not be used to find auto-generated   service account token secrets for use outside of pods. Instead, tokens can be   requested directly using the TokenRequest API, or service account token   secrets can be manually created. More info</li> </ul>"},{"location":"models/core_v1/#serviceaccountlist","title":"ServiceAccountList","text":"class <code>lightkube.models.core_v1.ServiceAccountList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ServiceAccountList is a list of ServiceAccount objects</p> <p>parameters</p> <ul> <li>items <code>ServiceAccount</code> - List of ServiceAccounts. More info</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#serviceaccounttokenprojection","title":"ServiceAccountTokenProjection","text":"class <code>lightkube.models.core_v1.ServiceAccountTokenProjection</code>(path, audience=None, expirationSeconds=None) <p>ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).</p> <p>parameters</p> <ul> <li>path <code>str</code> - path is the path relative to the mount point of the file to project the token   into.</li> <li>audience <code>Optional[str]</code> - audience is the intended audience of the token. A recipient of a token must   identify itself with an identifier specified in the audience of the token, and   otherwise should reject the token. The audience defaults to the identifier of   the apiserver.</li> <li>expirationSeconds <code>Optional[int]</code> - expirationSeconds is the requested duration of validity of the service account   token. As the token approaches expiration, the kubelet volume plugin will   proactively rotate the service account token. The kubelet will start trying to   rotate the token if the token is older than 80 percent of its time to live or   if the token is older than 24 hours.Defaults to 1 hour and must be at least 10   minutes.</li> </ul>"},{"location":"models/core_v1/#servicelist","title":"ServiceList","text":"class <code>lightkube.models.core_v1.ServiceList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ServiceList holds a list of services.</p> <p>parameters</p> <ul> <li>items <code>Service</code> - List of services</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/core_v1/#serviceport","title":"ServicePort","text":"class <code>lightkube.models.core_v1.ServicePort</code>(port, appProtocol=None, name=None, nodePort=None, protocol=None, targetPort=None) <p>ServicePort contains information on service's port.</p> <p>parameters</p> <ul> <li>port <code>int</code> - The port that will be exposed by this service.</li> <li>appProtocol <code>Optional[str]</code> - The application protocol for this port. This is used as a hint for   implementations to offer richer behavior for protocols that they understand.   This field follows standard Kubernetes label syntax. Valid values are either:</li> <li>Un-prefixed protocol names - reserved for IANA standard service names (as   per RFC-6335 and https://www.iana.org/assignments/service-names).</li> <li>Kubernetes-defined prefixed names:<ul> <li>'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described   in   https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-</li> <li>'kubernetes.io/ws'  - WebSocket over cleartext as described in   https://www.rfc-editor.org/rfc/rfc6455</li> <li>'kubernetes.io/wss' - WebSocket over TLS as described in   https://www.rfc-editor.org/rfc/rfc6455</li> </ul> </li> <li>Other protocols should use implementation-defined prefixed names such as   mycompany.com/my-custom-protocol.</li> <li>name <code>Optional[str]</code> - The name of this port within the service. This must be a DNS_LABEL. All ports   within a ServiceSpec must have unique names. When considering the endpoints   for a Service, this must match the 'name' field in the EndpointPort. Optional   if only one ServicePort is defined on this service.</li> <li>nodePort <code>Optional[int]</code> - The port on each node on which this service is exposed when type is NodePort   or LoadBalancer.  Usually assigned by the system. If a value is specified,   in-range, and not in use it will be used, otherwise the operation will fail.   If not specified, a port will be allocated if this Service requires one.  If   this field is specified when creating a Service which does not need it,   creation will fail. This field will be wiped when updating a Service to no   longer need it (e.g. changing type from NodePort to ClusterIP). More info</li> <li>protocol <code>Optional[str]</code> - The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is   TCP.</li> <li>targetPort <code>Optional[util_intstr.IntOrString]</code> - Number or name of the port to access on the pods targeted by the service.   Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this   is a string, it will be looked up as a named port in the target Pod's   container ports. If this is not specified, the value of the 'port' field is   used (an identity map). This field is ignored for services with   clusterIP=None, and should be omitted or set equal to the 'port' field. More info</li> </ul>"},{"location":"models/core_v1/#servicespec","title":"ServiceSpec","text":"class <code>lightkube.models.core_v1.ServiceSpec</code>(allocateLoadBalancerNodePorts=None, clusterIP=None, clusterIPs=None, externalIPs=None, externalName=None, externalTrafficPolicy=None, healthCheckNodePort=None, internalTrafficPolicy=None, ipFamilies=None, ipFamilyPolicy=None, loadBalancerClass=None, loadBalancerIP=None, loadBalancerSourceRanges=None, ports=None, publishNotReadyAddresses=None, selector=None, sessionAffinity=None, sessionAffinityConfig=None, type=None) <p>ServiceSpec describes the attributes that a user creates on a service.</p> <p>parameters</p> <ul> <li>allocateLoadBalancerNodePorts <code>Optional[bool]</code> - allocateLoadBalancerNodePorts defines if NodePorts will be automatically   allocated for services with type LoadBalancer.  Default is \"true\". It may be   set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If   the caller requests specific NodePorts (by specifying a value), those requests   will be respected, regardless of this field. This field may only be set for   services with type LoadBalancer and will be cleared if the type is changed to   any other type.</li> <li>clusterIP <code>Optional[str]</code> - clusterIP is the IP address of the service and is usually assigned randomly.   If an address is specified manually, is in-range (as per system   configuration), and is not in use, it will be allocated to the service;   otherwise creation of the service will fail. This field may not be changed   through updates unless the type field is also being changed to ExternalName   (which requires this field to be blank) or the type field is being changed   from ExternalName (in which case this field may optionally be specified, as   describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP   address. Setting this to \"None\" makes a \"headless service\" (no virtual IP),   which is useful when direct endpoint connections are preferred and proxying is   not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If   this field is specified when creating a Service of type ExternalName, creation   will fail. This field will be wiped when updating a Service to type   ExternalName. More info</li> <li>clusterIPs <code>Optional[List[str]]</code> - ClusterIPs is a list of IP addresses assigned to this service, and are usually   assigned randomly.  If an address is specified manually, is in-range (as per   system configuration), and is not in use, it will be allocated to the service;   otherwise creation of the service will fail. This field may not be changed   through updates unless the type field is also being changed to ExternalName   (which requires this field to be empty) or the type field is being changed   from ExternalName (in which case this field may optionally be specified, as   describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP   address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP),   which is useful when direct endpoint connections are preferred and proxying is   not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If   this field is specified when creating a Service of type ExternalName, creation   will fail. This field will be wiped when updating a Service to type   ExternalName.  If this field is not specified, it will be initialized from the   clusterIP field.  If this field is specified, clients must ensure that   clusterIPs[0] and clusterIP have the same value.   This field may hold a maximum of two entries (dual-stack IPs, in either   order). These IPs must correspond to the values of the ipFamilies field. Both   clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info</li> <li>externalIPs <code>Optional[List[str]]</code> - externalIPs is a list of IP addresses for which nodes in the cluster will also   accept traffic for this service.  These IPs are not managed by Kubernetes.   The user is responsible for ensuring that traffic arrives at a node with this   IP.  A common example is external load-balancers that are not part of the   Kubernetes system.</li> <li>externalName <code>Optional[str]</code> - externalName is the external reference that discovery mechanisms will return   as an alias for this service (e.g. a DNS CNAME record). No proxying will be   involved.  Must be a lowercase RFC-1123 hostname   (https://tools.ietf.org/html/rfc1123) and requires <code>type</code> to be   \"ExternalName\".</li> <li>externalTrafficPolicy <code>Optional[str]</code> - externalTrafficPolicy describes how nodes distribute service traffic they   receive on one of the Service's \"externally-facing\" addresses (NodePorts,   ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will   configure the service in a way that assumes that external load balancers will   take care of balancing the service traffic between nodes, and so each node   will deliver traffic only to the node-local endpoints of the service, without   masquerading the client source IP. (Traffic mistakenly sent to a node with no   endpoints will be dropped.) The default value, \"Cluster\", uses the standard   behavior of routing to all endpoints evenly (possibly modified by topology and   other features). Note that traffic sent to an External IP or LoadBalancer IP   from within the cluster will always get \"Cluster\" semantics, but clients   sending to a NodePort from within the cluster may need to take traffic policy   into account when picking a node.</li> <li>healthCheckNodePort <code>Optional[int]</code> - healthCheckNodePort specifies the healthcheck nodePort for the service. This   only applies when type is set to LoadBalancer and externalTrafficPolicy is set   to Local. If a value is specified, is in-range, and is not in use, it will be   used.  If not specified, a value will be automatically allocated.  External   systems (e.g. load-balancers) can use this port to determine if a given node   holds endpoints for this service or not.  If this field is specified when   creating a Service which does not need it, creation will fail. This field will   be wiped when updating a Service to no longer need it (e.g. changing type).   This field cannot be updated once set.</li> <li>internalTrafficPolicy <code>Optional[str]</code> - InternalTrafficPolicy describes how nodes distribute service traffic they   receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods   only want to talk to endpoints of the service on the same node as the pod,   dropping the traffic if there are no local endpoints. The default value,   \"Cluster\", uses the standard behavior of routing to all endpoints evenly   (possibly modified by topology and other features).</li> <li>ipFamilies <code>Optional[List[str]]</code> - IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this   service. This field is usually assigned automatically based on cluster   configuration and the ipFamilyPolicy field. If this field is specified   manually, the requested family is available in the cluster, and ipFamilyPolicy   allows it, it will be used; otherwise creation of the service will fail. This   field is conditionally mutable: it allows for adding or removing a secondary   IP family, but it does not allow changing the primary IP family of the   Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to   Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to   \"headless\" services. This field will be wiped when updating a Service to type   ExternalName.   This field may hold a maximum of two entries (dual-stack families, in either   order).  These families must correspond to the values of the clusterIPs field,   if specified. Both clusterIPs and ipFamilies are governed by the   ipFamilyPolicy field.</li> <li>ipFamilyPolicy <code>Optional[str]</code> - IPFamilyPolicy represents the dual-stack-ness requested or required by this   Service. If there is no value provided, then this field will be set to   SingleStack. Services can be \"SingleStack\" (a single IP family),   \"PreferDualStack\" (two IP families on dual-stack configured clusters or a   single IP family on single-stack clusters), or \"RequireDualStack\" (two IP   families on dual-stack configured clusters, otherwise fail). The ipFamilies   and clusterIPs fields depend on the value of this field. This field will be   wiped when updating a service to type ExternalName.</li> <li>loadBalancerClass <code>Optional[str]</code> - loadBalancerClass is the class of the load balancer implementation this   Service belongs to. If specified, the value of this field must be a   label-style identifier, with an optional prefix, e.g. \"internal-vip\" or   \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This   field can only be set when the Service type is 'LoadBalancer'. If not set, the   default load balancer implementation is used, today this is typically done   through the cloud provider integration, but should apply for any default   implementation. If set, it is assumed that a load balancer implementation is   watching for Services with a matching class. Any default load balancer   implementation (e.g. cloud providers) should ignore Services that set this   field. This field can only be set when creating or updating a Service to type   'LoadBalancer'. Once set, it can not be changed. This field will be wiped when   a service is updated to a non 'LoadBalancer' type.</li> <li>loadBalancerIP <code>Optional[str]</code> - Only applies to Service Type: LoadBalancer. This feature depends on whether   the underlying cloud-provider supports specifying the loadBalancerIP when a   load balancer is created. This field will be ignored if the cloud-provider   does not support the feature. Deprecated: This field was under-specified and   its meaning varies across implementations. Using it is non-portable and it may   not support dual-stack. Users are encouraged to use implementation-specific   annotations when available.</li> <li>loadBalancerSourceRanges <code>Optional[List[str]]</code> - If specified and supported by the platform, this will restrict traffic through   the cloud-provider load-balancer will be restricted to the specified client   IPs. This field will be ignored if the cloud-provider does not support the   feature.\" More info</li> <li>ports <code>Optional[List[ServicePort]]</code> - The list of ports that are exposed by this service. More info</li> <li>publishNotReadyAddresses <code>Optional[bool]</code> - publishNotReadyAddresses indicates that any agent which deals with endpoints   for this Service should disregard any indications of ready/not-ready. The   primary use case for setting this field is for a StatefulSet's Headless   Service to propagate SRV DNS records for its Pods for the purpose of peer   discovery. The Kubernetes controllers that generate Endpoints and   EndpointSlice resources for Services interpret this to mean that all endpoints   are considered \"ready\" even if the Pods themselves are not. Agents which   consume only Kubernetes generated endpoints through the Endpoints or   EndpointSlice resources can safely assume this behavior.</li> <li>selector <code>Optional[dict]</code> - Route service traffic to pods with label keys and values matching this   selector. If empty or not present, the service is assumed to have an external   process managing its endpoints, which Kubernetes will not modify. Only applies   to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is   ExternalName. More info</li> <li>sessionAffinity <code>Optional[str]</code> - Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable   client IP based session affinity. Must be ClientIP or None. Defaults to None.   More info</li> <li>sessionAffinityConfig <code>Optional[SessionAffinityConfig]</code> - sessionAffinityConfig contains the configurations of session affinity.</li> <li>type <code>Optional[str]</code> - type determines how the Service is exposed. Defaults to ClusterIP. Valid   options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\"   allocates a cluster-internal IP address for load-balancing to endpoints.   Endpoints are determined by the selector or if that is not specified, by   manual construction of an Endpoints object or EndpointSlice objects. If   clusterIP is \"None\", no virtual IP is allocated and the endpoints are   published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on   ClusterIP and allocates a port on every node which routes to the same   endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an   external load-balancer (if supported in the current cloud) which routes to the   same endpoints as the clusterIP. \"ExternalName\" aliases this service to the   specified externalName. Several other fields do not apply to ExternalName   services. More info</li> </ul>"},{"location":"models/core_v1/#servicestatus","title":"ServiceStatus","text":"class <code>lightkube.models.core_v1.ServiceStatus</code>(conditions=None, loadBalancer=None) <p>ServiceStatus represents the current status of a service.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[meta_v1.Condition]]</code> - Current service state</li> <li>loadBalancer <code>Optional[LoadBalancerStatus]</code> - LoadBalancer contains the current status of the load-balancer, if one is   present.</li> </ul>"},{"location":"models/core_v1/#sessionaffinityconfig","title":"SessionAffinityConfig","text":"class <code>lightkube.models.core_v1.SessionAffinityConfig</code>(clientIP=None) <p>SessionAffinityConfig represents the configurations of session affinity.</p> <p>parameters</p> <ul> <li>clientIP <code>Optional[ClientIPConfig]</code> - clientIP contains the configurations of Client IP based session affinity.</li> </ul>"},{"location":"models/core_v1/#sleepaction","title":"SleepAction","text":"class <code>lightkube.models.core_v1.SleepAction</code>(seconds) <p>SleepAction describes a \"sleep\" action.</p> <p>parameters</p> <ul> <li>seconds <code>int</code> - Seconds is the number of seconds to sleep.</li> </ul>"},{"location":"models/core_v1/#storageospersistentvolumesource","title":"StorageOSPersistentVolumeSource","text":"class <code>lightkube.models.core_v1.StorageOSPersistentVolumeSource</code>(fsType=None, readOnly=None, secretRef=None, volumeName=None, volumeNamespace=None) <p>Represents a StorageOS persistent volume resource.</p> <p>parameters</p> <ul> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to   be \"ext4\" if unspecified.</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> <li>secretRef <code>Optional[ObjectReference]</code> - secretRef specifies the secret to use for obtaining the StorageOS API   credentials.  If not specified, default values will be attempted.</li> <li>volumeName <code>Optional[str]</code> - volumeName is the human-readable name of the StorageOS volume.  Volume names   are only unique within a namespace.</li> <li>volumeNamespace <code>Optional[str]</code> - volumeNamespace specifies the scope of the volume within StorageOS.  If no   namespace is specified then the Pod's namespace will be used.  This allows the   Kubernetes name scoping to be mirrored within StorageOS for tighter   integration. Set VolumeName to any name to override the default behaviour. Set   to \"default\" if you are not using namespaces within StorageOS. Namespaces that   do not pre-exist within StorageOS will be created.</li> </ul>"},{"location":"models/core_v1/#storageosvolumesource","title":"StorageOSVolumeSource","text":"class <code>lightkube.models.core_v1.StorageOSVolumeSource</code>(fsType=None, readOnly=None, secretRef=None, volumeName=None, volumeNamespace=None) <p>Represents a StorageOS persistent volume resource.</p> <p>parameters</p> <ul> <li>fsType <code>Optional[str]</code> - fsType is the filesystem type to mount. Must be a filesystem type supported by   the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to   be \"ext4\" if unspecified.</li> <li>readOnly <code>Optional[bool]</code> - readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly   setting in VolumeMounts.</li> <li>secretRef <code>Optional[LocalObjectReference]</code> - secretRef specifies the secret to use for obtaining the StorageOS API   credentials.  If not specified, default values will be attempted.</li> <li>volumeName <code>Optional[str]</code> - volumeName is the human-readable name of the StorageOS volume.  Volume names   are only unique within a namespace.</li> <li>volumeNamespace <code>Optional[str]</code> - volumeNamespace specifies the scope of the volume within StorageOS.  If no   namespace is specified then the Pod's namespace will be used.  This allows the   Kubernetes name scoping to be mirrored within StorageOS for tighter   integration. Set VolumeName to any name to override the default behaviour. Set   to \"default\" if you are not using namespaces within StorageOS. Namespaces that   do not pre-exist within StorageOS will be created.</li> </ul>"},{"location":"models/core_v1/#sysctl","title":"Sysctl","text":"class <code>lightkube.models.core_v1.Sysctl</code>(name, value) <p>Sysctl defines a kernel parameter to be set</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name of a property to set</li> <li>value <code>str</code> - Value of a property to set</li> </ul>"},{"location":"models/core_v1/#tcpsocketaction","title":"TCPSocketAction","text":"class <code>lightkube.models.core_v1.TCPSocketAction</code>(port, host=None) <p>TCPSocketAction describes an action based on opening a socket</p> <p>parameters</p> <ul> <li>port <code>util_intstr.IntOrString</code> - Number or name of the port to access on the container. Number must be in the   range 1 to 65535. Name must be an IANA_SVC_NAME.</li> <li>host <code>Optional[str]</code> - Optional: Host name to connect to, defaults to the pod IP.</li> </ul>"},{"location":"models/core_v1/#taint","title":"Taint","text":"class <code>lightkube.models.core_v1.Taint</code>(effect, key, timeAdded=None, value=None) <p>The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.</p> <p>parameters</p> <ul> <li>effect <code>str</code> - Required. The effect of the taint on pods that do not tolerate the taint.   Valid effects are NoSchedule, PreferNoSchedule and NoExecute.</li> <li>key <code>str</code> - Required. The taint key to be applied to a node.</li> <li>timeAdded <code>Optional[meta_v1.Time]</code> - TimeAdded represents the time at which the taint was added. It is only written   for NoExecute taints.</li> <li>value <code>Optional[str]</code> - The taint value corresponding to the taint key.</li> </ul>"},{"location":"models/core_v1/#toleration","title":"Toleration","text":"class <code>lightkube.models.core_v1.Toleration</code>(effect=None, key=None, operator=None, tolerationSeconds=None, value=None) <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . <p>parameters</p> <ul> <li>effect <code>Optional[str]</code> - Effect indicates the taint effect to match. Empty means match all taint   effects. When specified, allowed values are NoSchedule, PreferNoSchedule and   NoExecute.</li> <li>key <code>Optional[str]</code> - Key is the taint key that the toleration applies to. Empty means match all   taint keys. If the key is empty, operator must be Exists; this combination   means to match all values and all keys.</li> <li>operator <code>Optional[str]</code> - Operator represents a key's relationship to the value. Valid operators are   Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for   value, so that a pod can tolerate all taints of a particular category.</li> <li>tolerationSeconds <code>Optional[int]</code> - TolerationSeconds represents the period of time the toleration (which must be   of effect NoExecute, otherwise this field is ignored) tolerates the taint. By   default, it is not set, which means tolerate the taint forever (do not evict).   Zero and negative values will be treated as 0 (evict immediately) by the   system.</li> <li>value <code>Optional[str]</code> - Value is the taint value the toleration matches to. If the operator is Exists,   the value should be empty, otherwise just a regular string.</li> </ul>"},{"location":"models/core_v1/#topologyselectorlabelrequirement","title":"TopologySelectorLabelRequirement","text":"class <code>lightkube.models.core_v1.TopologySelectorLabelRequirement</code>(key, values) <p>A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.</p> <p>parameters</p> <ul> <li>key <code>str</code> - The label key that the selector applies to.</li> <li>values <code>List[str]</code> - An array of string values. One value must match the label to be selected. Each   entry in Values is ORed.</li> </ul>"},{"location":"models/core_v1/#topologyselectorterm","title":"TopologySelectorTerm","text":"class <code>lightkube.models.core_v1.TopologySelectorTerm</code>(matchLabelExpressions=None) <p>A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.</p> <p>parameters</p> <ul> <li>matchLabelExpressions <code>Optional[List[TopologySelectorLabelRequirement]]</code> - A list of topology selector requirements by labels.</li> </ul>"},{"location":"models/core_v1/#topologyspreadconstraint","title":"TopologySpreadConstraint","text":"class <code>lightkube.models.core_v1.TopologySpreadConstraint</code>(maxSkew, topologyKey, whenUnsatisfiable, labelSelector=None, matchLabelKeys=None, minDomains=None, nodeAffinityPolicy=None, nodeTaintsPolicy=None) <p>TopologySpreadConstraint specifies how to spread matching pods among the given topology.</p> <p>parameters</p> <ul> <li>maxSkew <code>int</code> - MaxSkew describes the degree to which pods may be unevenly distributed. When   <code>whenUnsatisfiable=DoNotSchedule</code>, it is the maximum permitted difference   between the number of matching pods in the target topology and the global   minimum. The global minimum is the minimum number of matching pods in an   eligible domain or zero if the number of eligible domains is less than   MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods   with the same labelSelector spread as 2/2/1: In this case, the global minimum   is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1,   incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it   onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate   MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone.   When <code>whenUnsatisfiable=ScheduleAnyway</code>, it is used to give higher precedence   to topologies that satisfy it. It's a required field. Default value is 1 and 0   is not allowed.</li> <li>topologyKey <code>str</code> - TopologyKey is the key of node labels. Nodes that have a label with this key   and identical values are considered to be in the same topology. We consider   each  as a \"bucket\", and try to put balanced number of pods into   each bucket. We define a domain as a particular instance of a topology. Also,   we define an eligible domain as a domain whose nodes meet the requirements of   nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is   \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if   TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that   topology. It's a required field. <li>whenUnsatisfiable <code>str</code> - WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the   spread constraint. - DoNotSchedule (default) tells the scheduler not to   schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any   location,     but giving higher precedence to topologies that would help reduce the     skew.   A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if   every possible node assignment for that pod would violate \"MaxSkew\" on some   topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with   the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can   only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on   zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be   imbalanced, but scheduler won't make it more imbalanced. It's a required   field.</li> <li>labelSelector <code>Optional[meta_v1.LabelSelector]</code> - LabelSelector is used to find matching pods. Pods that match this label   selector are counted to determine the number of pods in their corresponding   topology domain.</li> <li>matchLabelKeys <code>Optional[List[str]]</code> - MatchLabelKeys is a set of pod label keys to select the pods over which   spreading will be calculated. The keys are used to lookup values from the   incoming pod labels, those key-value labels are ANDed with labelSelector to   select the group of existing pods over which spreading will be calculated for   the incoming pod. The same key is forbidden to exist in both MatchLabelKeys   and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set.   Keys that don't exist in the incoming pod labels will be ignored. A null or   empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread   feature gate to be enabled (enabled by default).</li> <li>minDomains <code>Optional[int]</code> - MinDomains indicates a minimum number of eligible domains. When the number of   eligible domains with matching topology keys is less than minDomains, Pod   Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew   is performed. And when the number of eligible domains with matching topology   keys equals or greater than minDomains, this value has no effect on   scheduling. As a result, when the number of eligible domains is less than   minDomains, scheduler won't schedule more than maxSkew Pods to those domains.   If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid   values are integers greater than 0. When value is not nil, WhenUnsatisfiable   must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5   and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3   | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains),   so \"global minimum\" is treated as 0. In this situation, new pod with the same   labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if   new Pod is scheduled to any of the three zones, it will violate MaxSkew.   This is a beta field and requires the MinDomainsInPodTopologySpread feature   gate to be enabled (enabled by default).</li> <li>nodeAffinityPolicy <code>Optional[str]</code> - NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector   when calculating pod topology spread skew. Options are: - Honor: only nodes   matching nodeAffinity/nodeSelector are included in the calculations. - Ignore:   nodeAffinity/nodeSelector are ignored. All nodes are included in the   calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is   a beta-level feature default enabled by the   NodeInclusionPolicyInPodTopologySpread feature flag.</li> <li>nodeTaintsPolicy <code>Optional[str]</code> - NodeTaintsPolicy indicates how we will treat node taints when calculating pod   topology spread skew. Options are: - Honor: nodes without taints, along with   tainted nodes for which the incoming pod has a toleration, are included. -   Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is   a beta-level feature default enabled by the   NodeInclusionPolicyInPodTopologySpread feature flag.</li>"},{"location":"models/core_v1/#typedlocalobjectreference","title":"TypedLocalObjectReference","text":"class <code>lightkube.models.core_v1.TypedLocalObjectReference</code>(kind, name, apiGroup=None) <p>TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - Kind is the type of resource being referenced</li> <li>name <code>str</code> - Name is the name of resource being referenced</li> <li>apiGroup <code>Optional[str]</code> - APIGroup is the group for the resource being referenced. If APIGroup is not   specified, the specified Kind must be in the core API group. For any other   third-party types, APIGroup is required.</li> </ul>"},{"location":"models/core_v1/#typedobjectreference","title":"TypedObjectReference","text":"class <code>lightkube.models.core_v1.TypedObjectReference</code>(kind, name, apiGroup=None, namespace=None) <p>parameters</p> <ul> <li>kind <code>str</code> - Kind is the type of resource being referenced</li> <li>name <code>str</code> - Name is the name of resource being referenced</li> <li>apiGroup <code>Optional[str]</code> - APIGroup is the group for the resource being referenced. If APIGroup is not   specified, the specified Kind must be in the core API group. For any other   third-party types, APIGroup is required.</li> <li>namespace <code>Optional[str]</code> - Namespace is the namespace of resource being referenced Note that when a   namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is   required in the referent namespace to allow that namespace's owner to accept   the reference. See the ReferenceGrant documentation for details. (Alpha) This   field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</li> </ul>"},{"location":"models/core_v1/#volume","title":"Volume","text":"class <code>lightkube.models.core_v1.Volume</code>(name, awsElasticBlockStore=None, azureDisk=None, azureFile=None, cephfs=None, cinder=None, configMap=None, csi=None, downwardAPI=None, emptyDir=None, ephemeral=None, fc=None, flexVolume=None, flocker=None, gcePersistentDisk=None, gitRepo=None, glusterfs=None, hostPath=None, iscsi=None, nfs=None, persistentVolumeClaim=None, photonPersistentDisk=None, portworxVolume=None, projected=None, quobyte=None, rbd=None, scaleIO=None, secret=None, storageos=None, vsphereVolume=None) <p>Volume represents a named volume in a pod that may be accessed by any container in the pod.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name of the volume. Must be a DNS_LABEL and unique within the pod. More info</li> <li>awsElasticBlockStore <code>Optional[AWSElasticBlockStoreVolumeSource]</code> - awsElasticBlockStore represents an AWS Disk resource that is attached to a   kubelet's host machine and then exposed to the pod. More info</li> <li>azureDisk <code>Optional[AzureDiskVolumeSource]</code> - azureDisk represents an Azure Data Disk mount on the host and bind mount to   the pod.</li> <li>azureFile <code>Optional[AzureFileVolumeSource]</code> - azureFile represents an Azure File Service mount on the host and bind mount to   the pod.</li> <li>cephfs <code>Optional[CephFSVolumeSource]</code> - cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</li> <li>cinder <code>Optional[CinderVolumeSource]</code> - cinder represents a cinder volume attached and mounted on kubelets host   machine. More info</li> <li>configMap <code>Optional[ConfigMapVolumeSource]</code> - configMap represents a configMap that should populate this volume</li> <li>csi <code>Optional[CSIVolumeSource]</code> - csi (Container Storage Interface) represents ephemeral storage that is handled   by certain external CSI drivers (Beta feature).</li> <li>downwardAPI <code>Optional[DownwardAPIVolumeSource]</code> - downwardAPI represents downward API about the pod that should populate this   volume</li> <li>emptyDir <code>Optional[EmptyDirVolumeSource]</code> - emptyDir represents a temporary directory that shares a pod's lifetime. More info</li> <li>ephemeral <code>Optional[EphemeralVolumeSource]</code> - ephemeral represents a volume that is handled by a cluster storage driver. The   volume's lifecycle is tied to the pod that defines it - it will be created   before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of   normal volumes like restoring from snapshot or capacity      tracking are needed,   c) the storage driver is specified through a storage class, and d) the storage   driver supports dynamic volume provisioning through      a PersistentVolumeClaim (see EphemeralVolumeSource for more      information on the connection between this volume type      and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that   persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to   be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the   same time.</li> <li>fc <code>Optional[FCVolumeSource]</code> - fc represents a Fibre Channel resource that is attached to a kubelet's host   machine and then exposed to the pod.</li> <li>flexVolume <code>Optional[FlexVolumeSource]</code> - flexVolume represents a generic volume resource that is provisioned/attached   using an exec based plugin.</li> <li>flocker <code>Optional[FlockerVolumeSource]</code> - flocker represents a Flocker volume attached to a kubelet's host machine. This   depends on the Flocker control service being running</li> <li>gcePersistentDisk <code>Optional[GCEPersistentDiskVolumeSource]</code> - gcePersistentDisk represents a GCE Disk resource that is attached to a   kubelet's host machine and then exposed to the pod. More info</li> <li>gitRepo <code>Optional[GitRepoVolumeSource]</code> - gitRepo represents a git repository at a particular revision. DEPRECATED:   GitRepo is deprecated. To provision a container with a git repo, mount an   EmptyDir into an InitContainer that clones the repo using git, then mount the   EmptyDir into the Pod's container.</li> <li>glusterfs <code>Optional[GlusterfsVolumeSource]</code> - glusterfs represents a Glusterfs mount on the host that shares a pod's   lifetime. More info</li> <li>hostPath <code>Optional[HostPathVolumeSource]</code> - hostPath represents a pre-existing file or directory on the host machine that   is directly exposed to the container. This is generally used for system agents   or other privileged things that are allowed to see the host machine. Most   containers will NOT need this. More info</li> <li>iscsi <code>Optional[ISCSIVolumeSource]</code> - iscsi represents an ISCSI Disk resource that is attached to a kubelet's host   machine and then exposed to the pod. More info</li> <li>nfs <code>Optional[NFSVolumeSource]</code> - nfs represents an NFS mount on the host that shares a pod's lifetime More info</li> <li>persistentVolumeClaim <code>Optional[PersistentVolumeClaimVolumeSource]</code> - persistentVolumeClaimVolumeSource represents a reference to a   PersistentVolumeClaim in the same namespace. More info</li> <li>photonPersistentDisk <code>Optional[PhotonPersistentDiskVolumeSource]</code> - photonPersistentDisk represents a PhotonController persistent disk attached   and mounted on kubelets host machine</li> <li>portworxVolume <code>Optional[PortworxVolumeSource]</code> - portworxVolume represents a portworx volume attached and mounted on kubelets   host machine</li> <li>projected <code>Optional[ProjectedVolumeSource]</code> - projected items for all in one resources secrets, configmaps, and downward API</li> <li>quobyte <code>Optional[QuobyteVolumeSource]</code> - quobyte represents a Quobyte mount on the host that shares a pod's lifetime</li> <li>rbd <code>Optional[RBDVolumeSource]</code> - rbd represents a Rados Block Device mount on the host that shares a pod's   lifetime. More info</li> <li>scaleIO <code>Optional[ScaleIOVolumeSource]</code> - scaleIO represents a ScaleIO persistent volume attached and mounted on   Kubernetes nodes.</li> <li>secret <code>Optional[SecretVolumeSource]</code> - secret represents a secret that should populate this volume. More info</li> <li>storageos <code>Optional[StorageOSVolumeSource]</code> - storageOS represents a StorageOS volume attached and mounted on Kubernetes   nodes.</li> <li>vsphereVolume <code>Optional[VsphereVirtualDiskVolumeSource]</code> - vsphereVolume represents a vSphere volume attached and mounted on kubelets   host machine</li> </ul>"},{"location":"models/core_v1/#volumedevice","title":"VolumeDevice","text":"class <code>lightkube.models.core_v1.VolumeDevice</code>(devicePath, name) <p>volumeDevice describes a mapping of a raw block device within a container.</p> <p>parameters</p> <ul> <li>devicePath <code>str</code> - devicePath is the path inside of the container that the device will be mapped   to.</li> <li>name <code>str</code> - name must match the name of a persistentVolumeClaim in the pod</li> </ul>"},{"location":"models/core_v1/#volumemount","title":"VolumeMount","text":"class <code>lightkube.models.core_v1.VolumeMount</code>(mountPath, name, mountPropagation=None, readOnly=None, subPath=None, subPathExpr=None) <p>VolumeMount describes a mounting of a Volume within a container.</p> <p>parameters</p> <ul> <li>mountPath <code>str</code> - Path within the container at which the volume should be mounted.  Must not   contain ':'.</li> <li>name <code>str</code> - This must match the Name of a Volume.</li> <li>mountPropagation <code>Optional[str]</code> - mountPropagation determines how mounts are propagated from the host to   container and the other way around. When not set, MountPropagationNone is   used. This field is beta in 1.10.</li> <li>readOnly <code>Optional[bool]</code> - Mounted read-only if true, read-write otherwise (false or unspecified).   Defaults to false.</li> <li>subPath <code>Optional[str]</code> - Path within the volume from which the container's volume should be mounted.   Defaults to \"\" (volume's root).</li> <li>subPathExpr <code>Optional[str]</code> - Expanded path within the volume from which the container's volume should be   mounted. Behaves similarly to SubPath but environment variable references   $(VAR_NAME) are expanded using the container's environment. Defaults to \"\"   (volume's root). SubPathExpr and SubPath are mutually exclusive.</li> </ul>"},{"location":"models/core_v1/#volumenodeaffinity","title":"VolumeNodeAffinity","text":"class <code>lightkube.models.core_v1.VolumeNodeAffinity</code>(required=None) <p>VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.</p> <p>parameters</p> <ul> <li>required <code>Optional[NodeSelector]</code> - required specifies hard node constraints that must be met.</li> </ul>"},{"location":"models/core_v1/#volumeprojection","title":"VolumeProjection","text":"class <code>lightkube.models.core_v1.VolumeProjection</code>(clusterTrustBundle=None, configMap=None, downwardAPI=None, secret=None, serviceAccountToken=None) <p>Projection that may be projected along with other supported volume types</p> <p>parameters</p> <ul> <li>clusterTrustBundle <code>Optional[ClusterTrustBundleProjection]</code> - ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of   ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the   combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the   pod filesystem.  Esoteric PEM features such as inter-block comments and block   headers are stripped.  Certificates are deduplicated. The ordering of   certificates within the file is arbitrary, and Kubelet may change the order   over time.</li> <li>configMap <code>Optional[ConfigMapProjection]</code> - configMap information about the configMap data to project</li> <li>downwardAPI <code>Optional[DownwardAPIProjection]</code> - downwardAPI information about the downwardAPI data to project</li> <li>secret <code>Optional[SecretProjection]</code> - secret information about the secret data to project</li> <li>serviceAccountToken <code>Optional[ServiceAccountTokenProjection]</code> - serviceAccountToken is information about the serviceAccountToken data to   project</li> </ul>"},{"location":"models/core_v1/#volumeresourcerequirements","title":"VolumeResourceRequirements","text":"class <code>lightkube.models.core_v1.VolumeResourceRequirements</code>(limits=None, requests=None) <p>VolumeResourceRequirements describes the storage resource requirements for a volume.</p> <p>parameters</p> <ul> <li>limits <code>Optional[dict]</code> - Limits describes the maximum amount of compute resources allowed. More info</li> <li>requests <code>Optional[dict]</code> - Requests describes the minimum amount of compute resources required. If   Requests is omitted for a container, it defaults to Limits if that is   explicitly specified, otherwise to an implementation-defined value. Requests   cannot exceed Limits. More info</li> </ul>"},{"location":"models/core_v1/#vspherevirtualdiskvolumesource","title":"VsphereVirtualDiskVolumeSource","text":"class <code>lightkube.models.core_v1.VsphereVirtualDiskVolumeSource</code>(volumePath, fsType=None, storagePolicyID=None, storagePolicyName=None) <p>Represents a vSphere volume resource.</p> <p>parameters</p> <ul> <li>volumePath <code>str</code> - volumePath is the path that identifies vSphere volume vmdk</li> <li>fsType <code>Optional[str]</code> - fsType is filesystem type to mount. Must be a filesystem type supported by the   host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be   \"ext4\" if unspecified.</li> <li>storagePolicyID <code>Optional[str]</code> - storagePolicyID is the storage Policy Based Management (SPBM) profile ID   associated with the StoragePolicyName.</li> <li>storagePolicyName <code>Optional[str]</code> - storagePolicyName is the storage Policy Based Management (SPBM) profile name.</li> </ul>"},{"location":"models/core_v1/#weightedpodaffinityterm","title":"WeightedPodAffinityTerm","text":"class <code>lightkube.models.core_v1.WeightedPodAffinityTerm</code>(podAffinityTerm, weight) <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> <p>parameters</p> <ul> <li>podAffinityTerm <code>PodAffinityTerm</code> - Required. A pod affinity term, associated with the corresponding weight.</li> <li>weight <code>int</code> - weight associated with matching the corresponding podAffinityTerm, in the   range 1-100.</li> </ul>"},{"location":"models/core_v1/#windowssecuritycontextoptions","title":"WindowsSecurityContextOptions","text":"class <code>lightkube.models.core_v1.WindowsSecurityContextOptions</code>(gmsaCredentialSpec=None, gmsaCredentialSpecName=None, hostProcess=None, runAsUserName=None) <p>WindowsSecurityContextOptions contain Windows-specific options and credentials.</p> <p>parameters</p> <ul> <li>gmsaCredentialSpec <code>Optional[str]</code> - GMSACredentialSpec is where the GMSA admission webhook   (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the   GMSA credential spec named by the GMSACredentialSpecName field.</li> <li>gmsaCredentialSpecName <code>Optional[str]</code> - GMSACredentialSpecName is the name of the GMSA credential spec to use.</li> <li>hostProcess <code>Optional[bool]</code> - HostProcess determines if a container should be run as a 'Host Process'   container. All of a Pod's containers must have the same effective HostProcess   value (it is not allowed to have a mix of HostProcess containers and   non-HostProcess containers). In addition, if HostProcess is true then   HostNetwork must also be set to true.</li> <li>runAsUserName <code>Optional[str]</code> - The UserName in Windows to run the entrypoint of the container process.   Defaults to the user specified in image metadata if unspecified. May also be   set in PodSecurityContext. If set in both SecurityContext and   PodSecurityContext, the value specified in SecurityContext takes precedence.</li> </ul>"},{"location":"models/discovery_v1/","title":"discovery_v1","text":""},{"location":"models/discovery_v1/#endpoint","title":"Endpoint","text":"class <code>lightkube.models.discovery_v1.Endpoint</code>(addresses, conditions=None, deprecatedTopology=None, hints=None, hostname=None, nodeName=None, targetRef=None, zone=None) <p>Endpoint represents a single logical \"backend\" implementing a service.</p> <p>parameters</p> <ul> <li>addresses <code>List[str]</code> - addresses of this endpoint. The contents of this field are interpreted   according to the corresponding EndpointSlice addressType field. Consumers must   handle different types of addresses in the context of their own capabilities.   This must contain at least one address but no more than 100. These are all   assumed to be fungible and clients may choose to only use the first element.   Refer to: https://issue.k8s.io/106267</li> <li>conditions <code>Optional[EndpointConditions]</code> - conditions contains information about the current status of the endpoint.</li> <li>deprecatedTopology <code>Optional[dict]</code> - deprecatedTopology contains topology information part of the v1beta1 API. This   field is deprecated, and will be removed when the v1beta1 API is removed (no   sooner than kubernetes v1.24).  While this field can hold values, it is not   writable through the v1 API, and any attempts to write to it will be silently   ignored. Topology information can be found in the zone and nodeName fields   instead.</li> <li>hints <code>Optional[EndpointHints]</code> - hints contains information associated with how an endpoint should be consumed.</li> <li>hostname <code>Optional[str]</code> - hostname of this endpoint. This field may be used by consumers of endpoints to   distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints   which use the same hostname should be considered fungible (e.g. multiple A   values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.</li> <li>nodeName <code>Optional[str]</code> - nodeName represents the name of the Node hosting this endpoint. This can be   used to determine endpoints local to a Node.</li> <li>targetRef <code>Optional[core_v1.ObjectReference]</code> - targetRef is a reference to a Kubernetes object that represents this endpoint.</li> <li>zone <code>Optional[str]</code> - zone is the name of the Zone this endpoint exists in.</li> </ul>"},{"location":"models/discovery_v1/#endpointconditions","title":"EndpointConditions","text":"class <code>lightkube.models.discovery_v1.EndpointConditions</code>(ready=None, serving=None, terminating=None) <p>EndpointConditions represents the current condition of an endpoint.</p> <p>parameters</p> <ul> <li>ready <code>Optional[bool]</code> - ready indicates that this endpoint is prepared to receive traffic, according   to whatever system is managing the endpoint. A nil value indicates an unknown   state. In most cases consumers should interpret this unknown state as ready.   For compatibility reasons, ready should never be \"true\" for terminating   endpoints, except when the normal readiness behavior is being explicitly   overridden, for example when the associated Service has set the   publishNotReadyAddresses flag.</li> <li>serving <code>Optional[bool]</code> - serving is identical to ready except that it is set regardless of the   terminating state of endpoints. This condition should be set to true for a   ready endpoint that is terminating. If nil, consumers should defer to the   ready condition.</li> <li>terminating <code>Optional[bool]</code> - terminating indicates that this endpoint is terminating. A nil value indicates   an unknown state. Consumers should interpret this unknown state to mean that   the endpoint is not terminating.</li> </ul>"},{"location":"models/discovery_v1/#endpointhints","title":"EndpointHints","text":"class <code>lightkube.models.discovery_v1.EndpointHints</code>(forZones=None) <p>EndpointHints provides hints describing how an endpoint should be consumed.</p> <p>parameters</p> <ul> <li>forZones <code>Optional[List[ForZone]]</code> - forZones indicates the zone(s) this endpoint should be consumed by to enable   topology aware routing.</li> </ul>"},{"location":"models/discovery_v1/#endpointport","title":"EndpointPort","text":"class <code>lightkube.models.discovery_v1.EndpointPort</code>(appProtocol=None, name=None, port=None, protocol=None) <p>EndpointPort represents a Port used by an EndpointSlice</p> <p>parameters</p> <ul> <li>appProtocol <code>Optional[str]</code> - The application protocol for this port. This is used as a hint for   implementations to offer richer behavior for protocols that they understand.   This field follows standard Kubernetes label syntax. Valid values are either:</li> <li>Un-prefixed protocol names - reserved for IANA standard service names (as   per RFC-6335 and https://www.iana.org/assignments/service-names).</li> <li>Kubernetes-defined prefixed names:<ul> <li>'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described   in   https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-</li> <li>'kubernetes.io/ws'  - WebSocket over cleartext as described in   https://www.rfc-editor.org/rfc/rfc6455</li> <li>'kubernetes.io/wss' - WebSocket over TLS as described in   https://www.rfc-editor.org/rfc/rfc6455</li> </ul> </li> <li>Other protocols should use implementation-defined prefixed names such as   mycompany.com/my-custom-protocol.</li> <li>name <code>Optional[str]</code> - name represents the name of this port. All ports in an EndpointSlice must have   a unique name. If the EndpointSlice is derived from a Kubernetes service, this   corresponds to the Service.ports[].name. Name must either be an empty string   or pass DNS_LABEL validation: * must be no more than 63 characters long. *   must consist of lower case alphanumeric characters or '-'. * must start and   end with an alphanumeric character. Default is empty string.</li> <li>port <code>Optional[int]</code> - port represents the port number of the endpoint. If this is not specified,   ports are not restricted and must be interpreted in the context of the   specific consumer.</li> <li>protocol <code>Optional[str]</code> - protocol represents the IP protocol for this port. Must be UDP, TCP, or SCTP.   Default is TCP.</li> </ul>"},{"location":"models/discovery_v1/#endpointslice","title":"EndpointSlice","text":"class <code>lightkube.models.discovery_v1.EndpointSlice</code>(addressType, endpoints, apiVersion=None, kind=None, metadata=None, ports=None) <p>EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.</p> <p>parameters</p> <ul> <li>addressType <code>str</code> - addressType specifies the type of address carried by this EndpointSlice. All   addresses in this slice must be the same type. This field is immutable after   creation. The following address types are currently supported: * IPv4:   Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN:   Represents a Fully Qualified Domain Name.</li> <li>endpoints <code>Endpoint</code> - endpoints is a list of unique endpoints in this slice. Each slice may include   a maximum of 1000 endpoints.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata.</li> <li>ports <code>Optional[List[EndpointPort]]</code> - ports specifies the list of network ports exposed by each endpoint in this   slice. Each port must have a unique name. When ports is empty, it indicates   that there are no defined ports. When a port is defined with a nil port value,   it indicates \"all ports\". Each slice may include a maximum of 100 ports.</li> </ul>"},{"location":"models/discovery_v1/#endpointslicelist","title":"EndpointSliceList","text":"class <code>lightkube.models.discovery_v1.EndpointSliceList</code>(items, apiVersion=None, kind=None, metadata=None) <p>EndpointSliceList represents a list of endpoint slices</p> <p>parameters</p> <ul> <li>items <code>EndpointSlice</code> - items is the list of endpoint slices</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata.</li> </ul>"},{"location":"models/discovery_v1/#forzone","title":"ForZone","text":"class <code>lightkube.models.discovery_v1.ForZone</code>(name) <p>ForZone provides information about which zones should consume this endpoint.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name represents the name of the zone.</li> </ul>"},{"location":"models/events_v1/","title":"events_v1","text":""},{"location":"models/events_v1/#event","title":"Event","text":"class <code>lightkube.models.events_v1.Event</code>(eventTime, action=None, apiVersion=None, deprecatedCount=None, deprecatedFirstTimestamp=None, deprecatedLastTimestamp=None, deprecatedSource=None, kind=None, metadata=None, note=None, reason=None, regarding=None, related=None, reportingController=None, reportingInstance=None, series=None, type=None) <p>Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason. Events should be treated as informative, best-effort, supplemental data.</p> <p>parameters</p> <ul> <li>eventTime <code>meta_v1.MicroTime</code> - eventTime is the time when this Event was first observed. It is required.</li> <li>action <code>Optional[str]</code> - action is what action was taken/failed regarding to the regarding object. It   is machine-readable. This field cannot be empty for new Events and it can have   at most 128 characters.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>deprecatedCount <code>Optional[int]</code> - deprecatedCount is the deprecated field assuring backward compatibility with   core.v1 Event type.</li> <li>deprecatedFirstTimestamp <code>Optional[meta_v1.Time]</code> - deprecatedFirstTimestamp is the deprecated field assuring backward   compatibility with core.v1 Event type.</li> <li>deprecatedLastTimestamp <code>Optional[meta_v1.Time]</code> - deprecatedLastTimestamp is the deprecated field assuring backward   compatibility with core.v1 Event type.</li> <li>deprecatedSource <code>Optional[core_v1.EventSource]</code> - deprecatedSource is the deprecated field assuring backward compatibility with   core.v1 Event type.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>note <code>Optional[str]</code> - note is a human-readable description of the status of this operation. Maximal   length of the note is 1kB, but libraries should be prepared to handle values   up to 64kB.</li> <li>reason <code>Optional[str]</code> - reason is why the action was taken. It is human-readable. This field cannot be   empty for new Events and it can have at most 128 characters.</li> <li>regarding <code>Optional[core_v1.ObjectReference]</code> - regarding contains the object this Event is about. In most cases it's an   Object reporting controller implements, e.g. ReplicaSetController implements   ReplicaSets and this event is emitted because it acts on some changes in a   ReplicaSet object.</li> <li>related <code>Optional[core_v1.ObjectReference]</code> - related is the optional secondary object for more complex actions. E.g. when   regarding object triggers a creation or deletion of related object.</li> <li>reportingController <code>Optional[str]</code> - reportingController is the name of the controller that emitted this Event,   e.g. <code>kubernetes.io/kubelet</code>. This field cannot be empty for new Events.</li> <li>reportingInstance <code>Optional[str]</code> - reportingInstance is the ID of the controller instance, e.g. <code>kubelet-xyzf</code>.   This field cannot be empty for new Events and it can have at most 128   characters.</li> <li>series <code>Optional[EventSeries]</code> - series is data about the Event series this event represents or nil if it's a   singleton Event.</li> <li>type <code>Optional[str]</code> - type is the type of this event (Normal, Warning), new types could be added in   the future. It is machine-readable. This field cannot be empty for new Events.</li> </ul>"},{"location":"models/events_v1/#eventlist","title":"EventList","text":"class <code>lightkube.models.events_v1.EventList</code>(items, apiVersion=None, kind=None, metadata=None) <p>EventList is a list of Event objects.</p> <p>parameters</p> <ul> <li>items <code>Event</code> - items is a list of schema objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/events_v1/#eventseries","title":"EventSeries","text":"class <code>lightkube.models.events_v1.EventSeries</code>(count, lastObservedTime) <p>EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in \"k8s.io/client-go/tools/events/event_broadcaster.go\" shows how this struct is updated on heartbeats and can guide customized reporter implementations.</p> <p>parameters</p> <ul> <li>count <code>int</code> - count is the number of occurrences in this series up to the last heartbeat   time.</li> <li>lastObservedTime <code>meta_v1.MicroTime</code> - lastObservedTime is the time when last Event from the series was seen before   last heartbeat.</li> </ul>"},{"location":"models/flowcontrol_v1/","title":"flowcontrol_v1","text":""},{"location":"models/flowcontrol_v1/#exemptprioritylevelconfiguration","title":"ExemptPriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1.ExemptPriorityLevelConfiguration</code>(lendablePercent=None, nominalConcurrencyShares=None) <p>ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the <code>spec</code>.</p> <p>parameters</p> <ul> <li>lendablePercent <code>Optional[int]</code> - <code>lendablePercent</code> prescribes the fraction of the level's NominalCL that can be   borrowed by other priority levels.  This value of this field must be between 0   and 100, inclusive, and it defaults to 0. The number of seats that other   levels can borrow from this level, known as this level's   LendableConcurrencyLimit (LendableCL), is defined as follows.   LendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )</li> <li>nominalConcurrencyShares <code>Optional[int]</code> - <code>nominalConcurrencyShares</code> (NCS) contributes to the computation of the   NominalConcurrencyLimit (NominalCL) of this level. This is the number of   execution seats nominally reserved for this priority level. This DOES NOT   limit the dispatching from this priority level but affects the other priority   levels through the borrowing mechanism. The server's concurrency limit   (ServerCL) is divided among all the priority levels in proportion to their NCS   values:   NominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority   level k] NCS(k)   Bigger numbers mean a larger nominal concurrency limit, at the expense of   every other priority level. This field has a default value of zero.</li> </ul>"},{"location":"models/flowcontrol_v1/#flowdistinguishermethod","title":"FlowDistinguisherMethod","text":"class <code>lightkube.models.flowcontrol_v1.FlowDistinguisherMethod</code>(type) <p>FlowDistinguisherMethod specifies the method of a flow distinguisher.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> is the type of flow distinguisher method The supported types are   \"ByUser\" and \"ByNamespace\". Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#flowschema","title":"FlowSchema","text":"class <code>lightkube.models.flowcontrol_v1.FlowSchema</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> <li>spec <code>Optional[FlowSchemaSpec]</code> - <code>spec</code> is the specification of the desired behavior of a FlowSchema. More info</li> <li>status <code>Optional[FlowSchemaStatus]</code> - <code>status</code> is the current status of a FlowSchema. More info</li> </ul>"},{"location":"models/flowcontrol_v1/#flowschemacondition","title":"FlowSchemaCondition","text":"class <code>lightkube.models.flowcontrol_v1.FlowSchemaCondition</code>(lastTransitionTime=None, message=None, reason=None, status=None, type=None) <p>FlowSchemaCondition describes conditions for a FlowSchema.</p> <p>parameters</p> <ul> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - <code>lastTransitionTime</code> is the last time the condition transitioned from one   status to another.</li> <li>message <code>Optional[str]</code> - <code>message</code> is a human-readable message indicating details about last   transition.</li> <li>reason <code>Optional[str]</code> - <code>reason</code> is a unique, one-word, CamelCase reason for the condition's last   transition.</li> <li>status <code>Optional[str]</code> - <code>status</code> is the status of the condition. Can be True, False, Unknown.   Required.</li> <li>type <code>Optional[str]</code> - <code>type</code> is the type of the condition. Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#flowschemalist","title":"FlowSchemaList","text":"class <code>lightkube.models.flowcontrol_v1.FlowSchemaList</code>(items, apiVersion=None, kind=None, metadata=None) <p>FlowSchemaList is a list of FlowSchema objects.</p> <p>parameters</p> <ul> <li>items <code>FlowSchema</code> - <code>items</code> is a list of FlowSchemas.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - <code>metadata</code> is the standard list metadata. More info</li> </ul>"},{"location":"models/flowcontrol_v1/#flowschemaspec","title":"FlowSchemaSpec","text":"class <code>lightkube.models.flowcontrol_v1.FlowSchemaSpec</code>(priorityLevelConfiguration, distinguisherMethod=None, matchingPrecedence=None, rules=None) <p>FlowSchemaSpec describes how the FlowSchema's specification looks like.</p> <p>parameters</p> <ul> <li>priorityLevelConfiguration <code>PriorityLevelConfigurationReference</code> - <code>priorityLevelConfiguration</code> should reference a PriorityLevelConfiguration in   the cluster. If the reference cannot be resolved, the FlowSchema will be   ignored and marked as invalid in its status. Required.</li> <li>distinguisherMethod <code>Optional[FlowDistinguisherMethod]</code> - <code>distinguisherMethod</code> defines how to compute the flow distinguisher for   requests that match this schema. <code>nil</code> specifies that the distinguisher is   disabled and thus will always be the empty string.</li> <li>matchingPrecedence <code>Optional[int]</code> - <code>matchingPrecedence</code> is used to choose among the FlowSchemas that match a   given request. The chosen FlowSchema is among those with the numerically   lowest (which we take to be logically highest) MatchingPrecedence.  Each   MatchingPrecedence value must be ranged in [1,10000]. Note that if the   precedence is not specified, it will be set to 1000 as default.</li> <li>rules <code>Optional[List[PolicyRulesWithSubjects]]</code> - <code>rules</code> describes which requests will match this flow schema. This FlowSchema   matches a request if and only if at least one member of rules matches the   request. if it is an empty slice, there will be no requests matching the   FlowSchema.</li> </ul>"},{"location":"models/flowcontrol_v1/#flowschemastatus","title":"FlowSchemaStatus","text":"class <code>lightkube.models.flowcontrol_v1.FlowSchemaStatus</code>(conditions=None) <p>FlowSchemaStatus represents the current state of a FlowSchema.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[FlowSchemaCondition]]</code> - <code>conditions</code> is a list of the current states of FlowSchema.</li> </ul>"},{"location":"models/flowcontrol_v1/#groupsubject","title":"GroupSubject","text":"class <code>lightkube.models.flowcontrol_v1.GroupSubject</code>(name) <p>GroupSubject holds detailed information for group-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the user group that matches, or \"*\" to match all user groups. See   https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go   for some well-known group names. Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#limitresponse","title":"LimitResponse","text":"class <code>lightkube.models.flowcontrol_v1.LimitResponse</code>(type, queuing=None) <p>LimitResponse defines how to handle requests that can not be executed right now.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be   executed upon arrival are held in a queue until they can be executed or a   queuing limit is reached. \"Reject\" means that requests that can not be   executed upon arrival are rejected. Required.</li> <li>queuing <code>Optional[QueuingConfiguration]</code> - <code>queuing</code> holds the configuration parameters for queuing. This field may be   non-empty only if <code>type</code> is <code>\"Queue\"</code>.</li> </ul>"},{"location":"models/flowcontrol_v1/#limitedprioritylevelconfiguration","title":"LimitedPriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1.LimitedPriorityLevelConfiguration</code>(borrowingLimitPercent=None, lendablePercent=None, limitResponse=None, nominalConcurrencyShares=None) <p>LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:   - How are requests for this priority level limited?   - What should be done with requests that exceed the limit?</p> <p>parameters</p> <ul> <li>borrowingLimitPercent <code>Optional[int]</code> - <code>borrowingLimitPercent</code>, if present, configures a limit on how many seats this   priority level can borrow from other priority levels. The limit is known as   this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the   total number of seats that this level may borrow at any one time. This field   holds the ratio of that limit to the level's nominal concurrency limit. When   this field is non-nil, it must hold a non-negative integer and the limit is   calculated as follows.   BorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )   The value of this field can be more than 100, implying that this priority   level can borrow a number of seats that is greater than its own nominal   concurrency limit (NominalCL). When this field is left <code>nil</code>, the limit is   effectively infinite.</li> <li>lendablePercent <code>Optional[int]</code> - <code>lendablePercent</code> prescribes the fraction of the level's NominalCL that can be   borrowed by other priority levels. The value of this field must be between 0   and 100, inclusive, and it defaults to 0. The number of seats that other   levels can borrow from this level, known as this level's   LendableConcurrencyLimit (LendableCL), is defined as follows.   LendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )</li> <li>limitResponse <code>Optional[LimitResponse]</code> - <code>limitResponse</code> indicates what to do with requests that can not be executed   right now</li> <li>nominalConcurrencyShares <code>Optional[int]</code> - <code>nominalConcurrencyShares</code> (NCS) contributes to the computation of the   NominalConcurrencyLimit (NominalCL) of this level. This is the number of   execution seats available at this priority level. This is used both for   requests dispatched from this priority level as well as requests dispatched   from other priority levels borrowing seats from this level. The server's   concurrency limit (ServerCL) is divided among the Limited priority levels in   proportion to their NCS values:   NominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority   level k] NCS(k)   Bigger numbers mean a larger nominal concurrency limit, at the expense of   every other priority level.   If not specified, this field defaults to a value of 30.   Setting this field to zero supports the construction of a \"jail\" for this   priority level that is used to hold some request(s)</li> </ul>"},{"location":"models/flowcontrol_v1/#nonresourcepolicyrule","title":"NonResourcePolicyRule","text":"class <code>lightkube.models.flowcontrol_v1.NonResourcePolicyRule</code>(nonResourceURLs, verbs) <p>NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.</p> <p>parameters</p> <ul> <li>nonResourceURLs <code>List[str]</code> - <code>nonResourceURLs</code> is a set of url prefixes that a user should have access to   and may not be empty. For example:<ul> <li>\"/healthz\" is legal</li> <li>\"/hea\" is illegal <li>\"/hea\" is legal but matches nothing</li> <li>\"/hea/\" also matches nothing</li> <li>\"/healthz/\" matches all per-component health checks.   \"\" matches all non-resource urls. if it is present, it must be the only   entry. Required.</li> <li>verbs <code>List[str]</code> - <code>verbs</code> is a list of matching verbs and may not be empty. \"*\" matches all   verbs. If it is present, it must be the only entry. Required.</li>"},{"location":"models/flowcontrol_v1/#policyruleswithsubjects","title":"PolicyRulesWithSubjects","text":"class <code>lightkube.models.flowcontrol_v1.PolicyRulesWithSubjects</code>(subjects, nonResourceRules=None, resourceRules=None) <p>PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.</p> <p>parameters</p> <ul> <li>subjects <code>Subject</code> - subjects is the list of normal user, serviceaccount, or group that this rule   cares about. There must be at least one member in this slice. A slice that   includes both the system:authenticated and system:unauthenticated user groups   matches every request. Required.</li> <li>nonResourceRules <code>Optional[List[NonResourcePolicyRule]]</code> - <code>nonResourceRules</code> is a list of NonResourcePolicyRules that identify matching   requests according to their verb and the target non-resource URL.</li> <li>resourceRules <code>Optional[List[ResourcePolicyRule]]</code> - <code>resourceRules</code> is a slice of ResourcePolicyRules that identify matching   requests according to their verb and the target resource. At least one of   <code>resourceRules</code> and <code>nonResourceRules</code> has to be non-empty.</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfiguration","title":"PriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfiguration</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>PriorityLevelConfiguration represents the configuration of a priority level.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> <li>spec <code>Optional[PriorityLevelConfigurationSpec]</code> - <code>spec</code> is the specification of the desired behavior of a \"request-priority\".   More info</li> <li>status <code>Optional[PriorityLevelConfigurationStatus]</code> - <code>status</code> is the current status of a \"request-priority\". More info</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfigurationcondition","title":"PriorityLevelConfigurationCondition","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfigurationCondition</code>(lastTransitionTime=None, message=None, reason=None, status=None, type=None) <p>PriorityLevelConfigurationCondition defines the condition of priority level.</p> <p>parameters</p> <ul> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - <code>lastTransitionTime</code> is the last time the condition transitioned from one   status to another.</li> <li>message <code>Optional[str]</code> - <code>message</code> is a human-readable message indicating details about last   transition.</li> <li>reason <code>Optional[str]</code> - <code>reason</code> is a unique, one-word, CamelCase reason for the condition's last   transition.</li> <li>status <code>Optional[str]</code> - <code>status</code> is the status of the condition. Can be True, False, Unknown.   Required.</li> <li>type <code>Optional[str]</code> - <code>type</code> is the type of the condition. Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfigurationlist","title":"PriorityLevelConfigurationList","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfigurationList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.</p> <p>parameters</p> <ul> <li>items <code>PriorityLevelConfiguration</code> - <code>items</code> is a list of request-priorities.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfigurationreference","title":"PriorityLevelConfigurationReference","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfigurationReference</code>(name) <p>PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the name of the priority level configuration being referenced   Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfigurationspec","title":"PriorityLevelConfigurationSpec","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfigurationSpec</code>(type, exempt=None, limited=None) <p>PriorityLevelConfigurationSpec specifies the configuration of a priority level.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> indicates whether this priority level is subject to limitation on   request execution.  A value of <code>\"Exempt\"</code> means that requests of this priority   level are not subject to a limit (and thus are never queued) and do not   detract from the capacity made available to other priority levels.  A value of   <code>\"Limited\"</code> means that (a) requests of this priority level are subject to   limits and (b) some of the server's limited capacity is made available   exclusively to this priority level. Required.</li> <li>exempt <code>Optional[ExemptPriorityLevelConfiguration]</code> - <code>exempt</code> specifies how requests are handled for an exempt priority level. This   field MUST be empty if <code>type</code> is <code>\"Limited\"</code>. This field MAY be non-empty if   <code>type</code> is <code>\"Exempt\"</code>. If empty and <code>type</code> is <code>\"Exempt\"</code> then the default   values for <code>ExemptPriorityLevelConfiguration</code> apply.</li> <li>limited <code>Optional[LimitedPriorityLevelConfiguration]</code> - <code>limited</code> specifies how requests are handled for a Limited priority level.   This field must be non-empty if and only if <code>type</code> is <code>\"Limited\"</code>.</li> </ul>"},{"location":"models/flowcontrol_v1/#prioritylevelconfigurationstatus","title":"PriorityLevelConfigurationStatus","text":"class <code>lightkube.models.flowcontrol_v1.PriorityLevelConfigurationStatus</code>(conditions=None) <p>PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[PriorityLevelConfigurationCondition]]</code> - <code>conditions</code> is the current state of \"request-priority\".</li> </ul>"},{"location":"models/flowcontrol_v1/#queuingconfiguration","title":"QueuingConfiguration","text":"class <code>lightkube.models.flowcontrol_v1.QueuingConfiguration</code>(handSize=None, queueLengthLimit=None, queues=None) <p>QueuingConfiguration holds the configuration parameters for queuing</p> <p>parameters</p> <ul> <li>handSize <code>Optional[int]</code> - <code>handSize</code> is a small positive number that configures the shuffle sharding of   requests into queues.  When enqueuing a request at this priority level the   request's flow identifier (a string pair) is hashed and the hash value is used   to shuffle the list of queues and deal a hand of the size specified here.  The   request is put into one of the shortest queues in that hand. <code>handSize</code> must   be no larger than <code>queues</code>, and should be significantly smaller (so that a few   heavy flows do not saturate most of the queues).  See the user-facing   documentation for more extensive guidance on setting this field.  This field   has a default value of 8.</li> <li>queueLengthLimit <code>Optional[int]</code> - <code>queueLengthLimit</code> is the maximum number of requests allowed to be waiting in   a given queue of this priority level at a time; excess requests are rejected.   This value must be positive.  If not specified, it will be defaulted to 50.</li> <li>queues <code>Optional[int]</code> - <code>queues</code> is the number of queues for this priority level. The queues exist   independently at each apiserver. The value must be positive.  Setting it to 1   effectively precludes shufflesharding and thus makes the distinguisher method   of associated flow schemas irrelevant.  This field has a default value of 64.</li> </ul>"},{"location":"models/flowcontrol_v1/#resourcepolicyrule","title":"ResourcePolicyRule","text":"class <code>lightkube.models.flowcontrol_v1.ResourcePolicyRule</code>(apiGroups, resources, verbs, clusterScope=None, namespaces=None) <p>ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., <code>Namespace==\"\"</code>) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.</p> <p>parameters</p> <ul> <li>apiGroups <code>List[str]</code> - <code>apiGroups</code> is a list of matching API groups and may not be empty. \"\" matches   all API groups and, if present, must be the only entry. Required. <li>resources <code>List[str]</code> - <code>resources</code> is a list of matching resources (i.e., lowercase and plural) with,   if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This   list may not be empty. \"\" matches all resources and, if present, must be the   only entry. Required.</li> <li>verbs <code>List[str]</code> - <code>verbs</code> is a list of matching verbs and may not be empty. \"*\" matches all   verbs and, if present, must be the only entry. Required.</li> <li>clusterScope <code>Optional[bool]</code> - <code>clusterScope</code> indicates whether to match requests that do not specify a   namespace (which happens either because the resource is not namespaced or the   request targets all namespaces). If this field is omitted or false then the   <code>namespaces</code> field must contain a non-empty list.</li> <li>namespaces <code>Optional[List[str]]</code> - <code>namespaces</code> is a list of target namespaces that restricts matches.  A request   that specifies a target namespace matches only if either (a) this list   contains that target namespace or (b) this list contains \"\".  Note that \"\"   matches any specified namespace but does not match a request that does not   specify a namespace (see the <code>clusterScope</code> field for that). This list may be   empty, but only if <code>clusterScope</code> is true.</li>"},{"location":"models/flowcontrol_v1/#serviceaccountsubject","title":"ServiceAccountSubject","text":"class <code>lightkube.models.flowcontrol_v1.ServiceAccountSubject</code>(name, namespace) <p>ServiceAccountSubject holds detailed information for service-account-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the name of matching ServiceAccount objects, or \"*\" to match   regardless of name. Required.</li> <li>namespace <code>str</code> - <code>namespace</code> is the namespace of matching ServiceAccount objects. Required.</li> </ul>"},{"location":"models/flowcontrol_v1/#subject","title":"Subject","text":"class <code>lightkube.models.flowcontrol_v1.Subject</code>(kind, group=None, serviceAccount=None, user=None) <p>Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - <code>kind</code> indicates which one of the other fields is non-empty. Required</li> <li>group <code>Optional[GroupSubject]</code> - <code>group</code> matches based on user group name.</li> <li>serviceAccount <code>Optional[ServiceAccountSubject]</code> - <code>serviceAccount</code> matches ServiceAccounts.</li> <li>user <code>Optional[UserSubject]</code> - <code>user</code> matches based on username.</li> </ul>"},{"location":"models/flowcontrol_v1/#usersubject","title":"UserSubject","text":"class <code>lightkube.models.flowcontrol_v1.UserSubject</code>(name) <p>UserSubject holds detailed information for user-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the username that matches, or \"*\" to match all usernames. Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/","title":"flowcontrol_v1beta3","text":""},{"location":"models/flowcontrol_v1beta3/#exemptprioritylevelconfiguration","title":"ExemptPriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1beta3.ExemptPriorityLevelConfiguration</code>(lendablePercent=None, nominalConcurrencyShares=None) <p>ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the <code>spec</code>.</p> <p>parameters</p> <ul> <li>lendablePercent <code>Optional[int]</code> - <code>lendablePercent</code> prescribes the fraction of the level's NominalCL that can be   borrowed by other priority levels.  This value of this field must be between 0   and 100, inclusive, and it defaults to 0. The number of seats that other   levels can borrow from this level, known as this level's   LendableConcurrencyLimit (LendableCL), is defined as follows.   LendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )</li> <li>nominalConcurrencyShares <code>Optional[int]</code> - <code>nominalConcurrencyShares</code> (NCS) contributes to the computation of the   NominalConcurrencyLimit (NominalCL) of this level. This is the number of   execution seats nominally reserved for this priority level. This DOES NOT   limit the dispatching from this priority level but affects the other priority   levels through the borrowing mechanism. The server's concurrency limit   (ServerCL) is divided among all the priority levels in proportion to their NCS   values:   NominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority   level k] NCS(k)   Bigger numbers mean a larger nominal concurrency limit, at the expense of   every other priority level. This field has a default value of zero.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowdistinguishermethod","title":"FlowDistinguisherMethod","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowDistinguisherMethod</code>(type) <p>FlowDistinguisherMethod specifies the method of a flow distinguisher.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> is the type of flow distinguisher method The supported types are   \"ByUser\" and \"ByNamespace\". Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowschema","title":"FlowSchema","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowSchema</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> <li>spec <code>Optional[FlowSchemaSpec]</code> - <code>spec</code> is the specification of the desired behavior of a FlowSchema. More info</li> <li>status <code>Optional[FlowSchemaStatus]</code> - <code>status</code> is the current status of a FlowSchema. More info</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowschemacondition","title":"FlowSchemaCondition","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowSchemaCondition</code>(lastTransitionTime=None, message=None, reason=None, status=None, type=None) <p>FlowSchemaCondition describes conditions for a FlowSchema.</p> <p>parameters</p> <ul> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - <code>lastTransitionTime</code> is the last time the condition transitioned from one   status to another.</li> <li>message <code>Optional[str]</code> - <code>message</code> is a human-readable message indicating details about last   transition.</li> <li>reason <code>Optional[str]</code> - <code>reason</code> is a unique, one-word, CamelCase reason for the condition's last   transition.</li> <li>status <code>Optional[str]</code> - <code>status</code> is the status of the condition. Can be True, False, Unknown.   Required.</li> <li>type <code>Optional[str]</code> - <code>type</code> is the type of the condition. Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowschemalist","title":"FlowSchemaList","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowSchemaList</code>(items, apiVersion=None, kind=None, metadata=None) <p>FlowSchemaList is a list of FlowSchema objects.</p> <p>parameters</p> <ul> <li>items <code>FlowSchema</code> - <code>items</code> is a list of FlowSchemas.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - <code>metadata</code> is the standard list metadata. More info</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowschemaspec","title":"FlowSchemaSpec","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowSchemaSpec</code>(priorityLevelConfiguration, distinguisherMethod=None, matchingPrecedence=None, rules=None) <p>FlowSchemaSpec describes how the FlowSchema's specification looks like.</p> <p>parameters</p> <ul> <li>priorityLevelConfiguration <code>PriorityLevelConfigurationReference</code> - <code>priorityLevelConfiguration</code> should reference a PriorityLevelConfiguration in   the cluster. If the reference cannot be resolved, the FlowSchema will be   ignored and marked as invalid in its status. Required.</li> <li>distinguisherMethod <code>Optional[FlowDistinguisherMethod]</code> - <code>distinguisherMethod</code> defines how to compute the flow distinguisher for   requests that match this schema. <code>nil</code> specifies that the distinguisher is   disabled and thus will always be the empty string.</li> <li>matchingPrecedence <code>Optional[int]</code> - <code>matchingPrecedence</code> is used to choose among the FlowSchemas that match a   given request. The chosen FlowSchema is among those with the numerically   lowest (which we take to be logically highest) MatchingPrecedence.  Each   MatchingPrecedence value must be ranged in [1,10000]. Note that if the   precedence is not specified, it will be set to 1000 as default.</li> <li>rules <code>Optional[List[PolicyRulesWithSubjects]]</code> - <code>rules</code> describes which requests will match this flow schema. This FlowSchema   matches a request if and only if at least one member of rules matches the   request. if it is an empty slice, there will be no requests matching the   FlowSchema.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#flowschemastatus","title":"FlowSchemaStatus","text":"class <code>lightkube.models.flowcontrol_v1beta3.FlowSchemaStatus</code>(conditions=None) <p>FlowSchemaStatus represents the current state of a FlowSchema.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[FlowSchemaCondition]]</code> - <code>conditions</code> is a list of the current states of FlowSchema.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#groupsubject","title":"GroupSubject","text":"class <code>lightkube.models.flowcontrol_v1beta3.GroupSubject</code>(name) <p>GroupSubject holds detailed information for group-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the user group that matches, or \"*\" to match all user groups. See   https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go   for some well-known group names. Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#limitresponse","title":"LimitResponse","text":"class <code>lightkube.models.flowcontrol_v1beta3.LimitResponse</code>(type, queuing=None) <p>LimitResponse defines how to handle requests that can not be executed right now.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be   executed upon arrival are held in a queue until they can be executed or a   queuing limit is reached. \"Reject\" means that requests that can not be   executed upon arrival are rejected. Required.</li> <li>queuing <code>Optional[QueuingConfiguration]</code> - <code>queuing</code> holds the configuration parameters for queuing. This field may be   non-empty only if <code>type</code> is <code>\"Queue\"</code>.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#limitedprioritylevelconfiguration","title":"LimitedPriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1beta3.LimitedPriorityLevelConfiguration</code>(borrowingLimitPercent=None, lendablePercent=None, limitResponse=None, nominalConcurrencyShares=None) <p>LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:   - How are requests for this priority level limited?   - What should be done with requests that exceed the limit?</p> <p>parameters</p> <ul> <li>borrowingLimitPercent <code>Optional[int]</code> - <code>borrowingLimitPercent</code>, if present, configures a limit on how many seats this   priority level can borrow from other priority levels. The limit is known as   this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the   total number of seats that this level may borrow at any one time. This field   holds the ratio of that limit to the level's nominal concurrency limit. When   this field is non-nil, it must hold a non-negative integer and the limit is   calculated as follows.   BorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )   The value of this field can be more than 100, implying that this priority   level can borrow a number of seats that is greater than its own nominal   concurrency limit (NominalCL). When this field is left <code>nil</code>, the limit is   effectively infinite.</li> <li>lendablePercent <code>Optional[int]</code> - <code>lendablePercent</code> prescribes the fraction of the level's NominalCL that can be   borrowed by other priority levels. The value of this field must be between 0   and 100, inclusive, and it defaults to 0. The number of seats that other   levels can borrow from this level, known as this level's   LendableConcurrencyLimit (LendableCL), is defined as follows.   LendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )</li> <li>limitResponse <code>Optional[LimitResponse]</code> - <code>limitResponse</code> indicates what to do with requests that can not be executed   right now</li> <li>nominalConcurrencyShares <code>Optional[int]</code> - <code>nominalConcurrencyShares</code> (NCS) contributes to the computation of the   NominalConcurrencyLimit (NominalCL) of this level. This is the number of   execution seats available at this priority level. This is used both for   requests dispatched from this priority level as well as requests dispatched   from other priority levels borrowing seats from this level. The server's   concurrency limit (ServerCL) is divided among the Limited priority levels in   proportion to their NCS values:   NominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority   level k] NCS(k)   Bigger numbers mean a larger nominal concurrency limit, at the expense of   every other priority level. This field has a default value of 30.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#nonresourcepolicyrule","title":"NonResourcePolicyRule","text":"class <code>lightkube.models.flowcontrol_v1beta3.NonResourcePolicyRule</code>(nonResourceURLs, verbs) <p>NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.</p> <p>parameters</p> <ul> <li>nonResourceURLs <code>List[str]</code> - <code>nonResourceURLs</code> is a set of url prefixes that a user should have access to   and may not be empty. For example:<ul> <li>\"/healthz\" is legal</li> <li>\"/hea\" is illegal <li>\"/hea\" is legal but matches nothing</li> <li>\"/hea/\" also matches nothing</li> <li>\"/healthz/\" matches all per-component health checks.   \"\" matches all non-resource urls. if it is present, it must be the only   entry. Required.</li> <li>verbs <code>List[str]</code> - <code>verbs</code> is a list of matching verbs and may not be empty. \"*\" matches all   verbs. If it is present, it must be the only entry. Required.</li>"},{"location":"models/flowcontrol_v1beta3/#policyruleswithsubjects","title":"PolicyRulesWithSubjects","text":"class <code>lightkube.models.flowcontrol_v1beta3.PolicyRulesWithSubjects</code>(subjects, nonResourceRules=None, resourceRules=None) <p>PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.</p> <p>parameters</p> <ul> <li>subjects <code>Subject</code> - subjects is the list of normal user, serviceaccount, or group that this rule   cares about. There must be at least one member in this slice. A slice that   includes both the system:authenticated and system:unauthenticated user groups   matches every request. Required.</li> <li>nonResourceRules <code>Optional[List[NonResourcePolicyRule]]</code> - <code>nonResourceRules</code> is a list of NonResourcePolicyRules that identify matching   requests according to their verb and the target non-resource URL.</li> <li>resourceRules <code>Optional[List[ResourcePolicyRule]]</code> - <code>resourceRules</code> is a slice of ResourcePolicyRules that identify matching   requests according to their verb and the target resource. At least one of   <code>resourceRules</code> and <code>nonResourceRules</code> has to be non-empty.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfiguration","title":"PriorityLevelConfiguration","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfiguration</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>PriorityLevelConfiguration represents the configuration of a priority level.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> <li>spec <code>Optional[PriorityLevelConfigurationSpec]</code> - <code>spec</code> is the specification of the desired behavior of a \"request-priority\".   More info</li> <li>status <code>Optional[PriorityLevelConfigurationStatus]</code> - <code>status</code> is the current status of a \"request-priority\". More info</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfigurationcondition","title":"PriorityLevelConfigurationCondition","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfigurationCondition</code>(lastTransitionTime=None, message=None, reason=None, status=None, type=None) <p>PriorityLevelConfigurationCondition defines the condition of priority level.</p> <p>parameters</p> <ul> <li>lastTransitionTime <code>Optional[meta_v1.Time]</code> - <code>lastTransitionTime</code> is the last time the condition transitioned from one   status to another.</li> <li>message <code>Optional[str]</code> - <code>message</code> is a human-readable message indicating details about last   transition.</li> <li>reason <code>Optional[str]</code> - <code>reason</code> is a unique, one-word, CamelCase reason for the condition's last   transition.</li> <li>status <code>Optional[str]</code> - <code>status</code> is the status of the condition. Can be True, False, Unknown.   Required.</li> <li>type <code>Optional[str]</code> - <code>type</code> is the type of the condition. Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfigurationlist","title":"PriorityLevelConfigurationList","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfigurationList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.</p> <p>parameters</p> <ul> <li>items <code>PriorityLevelConfiguration</code> - <code>items</code> is a list of request-priorities.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - <code>metadata</code> is the standard object's metadata. More info</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfigurationreference","title":"PriorityLevelConfigurationReference","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfigurationReference</code>(name) <p>PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the name of the priority level configuration being referenced   Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfigurationspec","title":"PriorityLevelConfigurationSpec","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfigurationSpec</code>(type, exempt=None, limited=None) <p>PriorityLevelConfigurationSpec specifies the configuration of a priority level.</p> <p>parameters</p> <ul> <li>type <code>str</code> - <code>type</code> indicates whether this priority level is subject to limitation on   request execution.  A value of <code>\"Exempt\"</code> means that requests of this priority   level are not subject to a limit (and thus are never queued) and do not   detract from the capacity made available to other priority levels.  A value of   <code>\"Limited\"</code> means that (a) requests of this priority level are subject to   limits and (b) some of the server's limited capacity is made available   exclusively to this priority level. Required.</li> <li>exempt <code>Optional[ExemptPriorityLevelConfiguration]</code> - <code>exempt</code> specifies how requests are handled for an exempt priority level. This   field MUST be empty if <code>type</code> is <code>\"Limited\"</code>. This field MAY be non-empty if   <code>type</code> is <code>\"Exempt\"</code>. If empty and <code>type</code> is <code>\"Exempt\"</code> then the default   values for <code>ExemptPriorityLevelConfiguration</code> apply.</li> <li>limited <code>Optional[LimitedPriorityLevelConfiguration]</code> - <code>limited</code> specifies how requests are handled for a Limited priority level.   This field must be non-empty if and only if <code>type</code> is <code>\"Limited\"</code>.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#prioritylevelconfigurationstatus","title":"PriorityLevelConfigurationStatus","text":"class <code>lightkube.models.flowcontrol_v1beta3.PriorityLevelConfigurationStatus</code>(conditions=None) <p>PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[PriorityLevelConfigurationCondition]]</code> - <code>conditions</code> is the current state of \"request-priority\".</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#queuingconfiguration","title":"QueuingConfiguration","text":"class <code>lightkube.models.flowcontrol_v1beta3.QueuingConfiguration</code>(handSize=None, queueLengthLimit=None, queues=None) <p>QueuingConfiguration holds the configuration parameters for queuing</p> <p>parameters</p> <ul> <li>handSize <code>Optional[int]</code> - <code>handSize</code> is a small positive number that configures the shuffle sharding of   requests into queues.  When enqueuing a request at this priority level the   request's flow identifier (a string pair) is hashed and the hash value is used   to shuffle the list of queues and deal a hand of the size specified here.  The   request is put into one of the shortest queues in that hand. <code>handSize</code> must   be no larger than <code>queues</code>, and should be significantly smaller (so that a few   heavy flows do not saturate most of the queues).  See the user-facing   documentation for more extensive guidance on setting this field.  This field   has a default value of 8.</li> <li>queueLengthLimit <code>Optional[int]</code> - <code>queueLengthLimit</code> is the maximum number of requests allowed to be waiting in   a given queue of this priority level at a time; excess requests are rejected.   This value must be positive.  If not specified, it will be defaulted to 50.</li> <li>queues <code>Optional[int]</code> - <code>queues</code> is the number of queues for this priority level. The queues exist   independently at each apiserver. The value must be positive.  Setting it to 1   effectively precludes shufflesharding and thus makes the distinguisher method   of associated flow schemas irrelevant.  This field has a default value of 64.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#resourcepolicyrule","title":"ResourcePolicyRule","text":"class <code>lightkube.models.flowcontrol_v1beta3.ResourcePolicyRule</code>(apiGroups, resources, verbs, clusterScope=None, namespaces=None) <p>ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., <code>Namespace==\"\"</code>) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.</p> <p>parameters</p> <ul> <li>apiGroups <code>List[str]</code> - <code>apiGroups</code> is a list of matching API groups and may not be empty. \"\" matches   all API groups and, if present, must be the only entry. Required. <li>resources <code>List[str]</code> - <code>resources</code> is a list of matching resources (i.e., lowercase and plural) with,   if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This   list may not be empty. \"\" matches all resources and, if present, must be the   only entry. Required.</li> <li>verbs <code>List[str]</code> - <code>verbs</code> is a list of matching verbs and may not be empty. \"*\" matches all   verbs and, if present, must be the only entry. Required.</li> <li>clusterScope <code>Optional[bool]</code> - <code>clusterScope</code> indicates whether to match requests that do not specify a   namespace (which happens either because the resource is not namespaced or the   request targets all namespaces). If this field is omitted or false then the   <code>namespaces</code> field must contain a non-empty list.</li> <li>namespaces <code>Optional[List[str]]</code> - <code>namespaces</code> is a list of target namespaces that restricts matches.  A request   that specifies a target namespace matches only if either (a) this list   contains that target namespace or (b) this list contains \"\".  Note that \"\"   matches any specified namespace but does not match a request that does not   specify a namespace (see the <code>clusterScope</code> field for that). This list may be   empty, but only if <code>clusterScope</code> is true.</li>"},{"location":"models/flowcontrol_v1beta3/#serviceaccountsubject","title":"ServiceAccountSubject","text":"class <code>lightkube.models.flowcontrol_v1beta3.ServiceAccountSubject</code>(name, namespace) <p>ServiceAccountSubject holds detailed information for service-account-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the name of matching ServiceAccount objects, or \"*\" to match   regardless of name. Required.</li> <li>namespace <code>str</code> - <code>namespace</code> is the namespace of matching ServiceAccount objects. Required.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#subject","title":"Subject","text":"class <code>lightkube.models.flowcontrol_v1beta3.Subject</code>(kind, group=None, serviceAccount=None, user=None) <p>Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - <code>kind</code> indicates which one of the other fields is non-empty. Required</li> <li>group <code>Optional[GroupSubject]</code> - <code>group</code> matches based on user group name.</li> <li>serviceAccount <code>Optional[ServiceAccountSubject]</code> - <code>serviceAccount</code> matches ServiceAccounts.</li> <li>user <code>Optional[UserSubject]</code> - <code>user</code> matches based on username.</li> </ul>"},{"location":"models/flowcontrol_v1beta3/#usersubject","title":"UserSubject","text":"class <code>lightkube.models.flowcontrol_v1beta3.UserSubject</code>(name) <p>UserSubject holds detailed information for user-kind subject.</p> <p>parameters</p> <ul> <li>name <code>str</code> - <code>name</code> is the username that matches, or \"*\" to match all usernames. Required.</li> </ul>"},{"location":"models/meta_v1/","title":"meta_v1","text":""},{"location":"models/meta_v1/#apigroup","title":"APIGroup","text":"class <code>lightkube.models.meta_v1.APIGroup</code>(name, versions, apiVersion=None, kind=None, preferredVersion=None, serverAddressByClientCIDRs=None) <p>APIGroup contains the name, the supported versions, and the preferred version of a group.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the name of the group.</li> <li>versions <code>GroupVersionForDiscovery</code> - versions are the versions supported in this group.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>preferredVersion <code>Optional[GroupVersionForDiscovery]</code> - preferredVersion is the version preferred by the API server, which probably is   the storage version.</li> <li>serverAddressByClientCIDRs <code>Optional[List[ServerAddressByClientCIDR]]</code> - a map of client CIDR to server address that is serving this group. This is to   help clients reach servers in the most network-efficient way possible. Clients   can use the appropriate server address as per the CIDR that they match. In   case of multiple matches, clients should use the longest matching CIDR. The   server returns only those CIDRs that it thinks that the client can match. For   example: the master will return an internal IP CIDR only, if the client   reaches the server using an internal IP. Server looks at X-Forwarded-For   header or X-Real-Ip header or request.RemoteAddr (in that order) to get the   client IP.</li> </ul>"},{"location":"models/meta_v1/#apigrouplist","title":"APIGroupList","text":"class <code>lightkube.models.meta_v1.APIGroupList</code>(groups, apiVersion=None, kind=None) <p>APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.</p> <p>parameters</p> <ul> <li>groups <code>APIGroup</code> - groups is a list of APIGroup.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> </ul>"},{"location":"models/meta_v1/#apiresource","title":"APIResource","text":"class <code>lightkube.models.meta_v1.APIResource</code>(kind, name, namespaced, singularName, verbs, categories=None, group=None, shortNames=None, storageVersionHash=None, version=None) <p>APIResource specifies the name of a resource and whether it is namespaced.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - kind is the kind for the resource (e.g. 'Foo' is the kind for a resource   'foo')</li> <li>name <code>str</code> - name is the plural name of the resource.</li> <li>namespaced <code>bool</code> - namespaced indicates if a resource is namespaced or not.</li> <li>singularName <code>str</code> - singularName is the singular name of the resource.  This allows clients to   handle plural and singular opaquely. The singularName is more correct for   reporting status on a single item and both singular and plural are allowed   from the kubectl CLI interface.</li> <li>verbs <code>List[str]</code> - verbs is a list of supported kube verbs (this includes get, list, watch,   create, update, patch, delete, deletecollection, and proxy)</li> <li>categories <code>Optional[List[str]]</code> - categories is a list of the grouped resources this resource belongs to (e.g.   'all')</li> <li>group <code>Optional[str]</code> - group is the preferred group of the resource.  Empty implies the group of the   containing resource list. For subresources, this may have a different value,   for example: Scale\".</li> <li>shortNames <code>Optional[List[str]]</code> - shortNames is a list of suggested short names of the resource.</li> <li>storageVersionHash <code>Optional[str]</code> - The hash value of the storage version, the version this resource is converted   to when written to the data store. Value must be treated as opaque by clients.   Only equality comparison on the value is valid. This is an alpha feature and   may change or be removed in the future. The field is populated by the   apiserver only if the StorageVersionHash feature gate is enabled. This field   will remain optional even if it graduates.</li> <li>version <code>Optional[str]</code> - version is the preferred version of the resource.  Empty implies the version   of the containing resource list For subresources, this may have a different   value, for example: v1 (while inside a v1beta1 version of the core resource's   group)\".</li> </ul>"},{"location":"models/meta_v1/#apiresourcelist","title":"APIResourceList","text":"class <code>lightkube.models.meta_v1.APIResourceList</code>(groupVersion, resources, apiVersion=None, kind=None) <p>APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.</p> <p>parameters</p> <ul> <li>groupVersion <code>str</code> - groupVersion is the group and version this APIResourceList is for.</li> <li>resources <code>APIResource</code> - resources contains the name of the resources and if they are namespaced.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> </ul>"},{"location":"models/meta_v1/#apiversions","title":"APIVersions","text":"class <code>lightkube.models.meta_v1.APIVersions</code>(serverAddressByClientCIDRs, versions, apiVersion=None, kind=None) <p>APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.</p> <p>parameters</p> <ul> <li>serverAddressByClientCIDRs <code>ServerAddressByClientCIDR</code> - a map of client CIDR to server address that is serving this group. This is to   help clients reach servers in the most network-efficient way possible. Clients   can use the appropriate server address as per the CIDR that they match. In   case of multiple matches, clients should use the longest matching CIDR. The   server returns only those CIDRs that it thinks that the client can match. For   example: the master will return an internal IP CIDR only, if the client   reaches the server using an internal IP. Server looks at X-Forwarded-For   header or X-Real-Ip header or request.RemoteAddr (in that order) to get the   client IP.</li> <li>versions <code>List[str]</code> - versions are the api versions that are available.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> </ul>"},{"location":"models/meta_v1/#condition","title":"Condition","text":"class <code>lightkube.models.meta_v1.Condition</code>(lastTransitionTime, message, reason, status, type, observedGeneration=None) <p>Condition contains details for one aspect of the current state of this API Resource.</p> <p>parameters</p> <ul> <li>lastTransitionTime <code>Time</code> - lastTransitionTime is the last time the condition transitioned from one status   to another. This should be when the underlying condition changed.  If that is   not known, then using the time when the API field changed is acceptable.</li> <li>message <code>str</code> - message is a human readable message indicating details about the transition.   This may be an empty string.</li> <li>reason <code>str</code> - reason contains a programmatic identifier indicating the reason for the   condition's last transition. Producers of specific condition types may define   expected values and meanings for this field, and whether the values are   considered a guaranteed API. The value should be a CamelCase string. This   field may not be empty.</li> <li>status <code>str</code> - status of the condition, one of True, False, Unknown.</li> <li>type <code>str</code> - type of condition in CamelCase or in foo.example.com/CamelCase.</li> <li>observedGeneration <code>Optional[int]</code> - observedGeneration represents the .metadata.generation that the condition was   set based upon. For instance, if .metadata.generation is currently 12, but the   .status.conditions[x].observedGeneration is 9, the condition is out of date   with respect to the current state of the instance.</li> </ul>"},{"location":"models/meta_v1/#deleteoptions","title":"DeleteOptions","text":"class <code>lightkube.models.meta_v1.DeleteOptions</code>(apiVersion=None, dryRun=None, gracePeriodSeconds=None, kind=None, orphanDependents=None, preconditions=None, propagationPolicy=None) <p>DeleteOptions may be provided when deleting an API object.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>dryRun <code>Optional[List[str]]</code> - When present, indicates that modifications should not be persisted. An invalid   or unrecognized dryRun directive will result in an error response and no   further processing of the request. Valid values are: - All: all dry run stages   will be processed</li> <li>gracePeriodSeconds <code>Optional[int]</code> - The duration in seconds before the object should be deleted. Value must be   non-negative integer. The value zero indicates delete immediately. If this   value is nil, the default grace period for the specified type will be used.   Defaults to a per object value if not specified. zero means delete   immediately.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>orphanDependents <code>Optional[bool]</code> - Deprecated: please use the PropagationPolicy, this field will be deprecated in   1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\"   finalizer will be added to/removed from the object's finalizers list. Either   this field or PropagationPolicy may be set, but not both.</li> <li>preconditions <code>Optional[Preconditions]</code> - Must be fulfilled before a deletion is carried out. If not possible, a 409   Conflict status will be returned.</li> <li>propagationPolicy <code>Optional[str]</code> - Whether and how garbage collection will be performed. Either this field or   OrphanDependents may be set, but not both. The default policy is decided by   the existing finalizer set in the metadata.finalizers and the   resource-specific default policy. Acceptable values are: 'Orphan' - orphan the   dependents; 'Background' - allow the garbage collector to delete the   dependents in the background; 'Foreground' - a cascading policy that deletes   all dependents in the foreground.</li> </ul>"},{"location":"models/meta_v1/#fieldsv1","title":"FieldsV1","text":""},{"location":"models/meta_v1/#groupversionfordiscovery","title":"GroupVersionForDiscovery","text":"class <code>lightkube.models.meta_v1.GroupVersionForDiscovery</code>(groupVersion, version) <p>GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.</p> <p>parameters</p> <ul> <li>groupVersion <code>str</code> - groupVersion specifies the API group and version in the form \"group/version\"</li> <li>version <code>str</code> - version specifies the version in the form of \"version\". This is to save the   clients the trouble of splitting the GroupVersion.</li> </ul>"},{"location":"models/meta_v1/#labelselector","title":"LabelSelector","text":"class <code>lightkube.models.meta_v1.LabelSelector</code>(matchExpressions=None, matchLabels=None) <p>A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.</p> <p>parameters</p> <ul> <li>matchExpressions <code>Optional[List[LabelSelectorRequirement]]</code> - matchExpressions is a list of label selector requirements. The requirements   are ANDed.</li> <li>matchLabels <code>Optional[dict]</code> - matchLabels is a map of {key,value} pairs. A single {key,value} in the   matchLabels map is equivalent to an element of matchExpressions, whose key   field is \"key\", the operator is \"In\", and the values array contains only   \"value\". The requirements are ANDed.</li> </ul>"},{"location":"models/meta_v1/#labelselectorrequirement","title":"LabelSelectorRequirement","text":"class <code>lightkube.models.meta_v1.LabelSelectorRequirement</code>(key, operator, values=None) <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> <p>parameters</p> <ul> <li>key <code>str</code> - key is the label key that the selector applies to.</li> <li>operator <code>str</code> - operator represents a key's relationship to a set of values. Valid operators   are In, NotIn, Exists and DoesNotExist.</li> <li>values <code>Optional[List[str]]</code> - values is an array of string values. If the operator is In or NotIn, the   values array must be non-empty. If the operator is Exists or DoesNotExist, the   values array must be empty. This array is replaced during a strategic merge   patch.</li> </ul>"},{"location":"models/meta_v1/#listmeta","title":"ListMeta","text":"class <code>lightkube.models.meta_v1.ListMeta</code>(continue_=None, remainingItemCount=None, resourceVersion=None, selfLink=None) <p>ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.</p> <p>parameters</p> <ul> <li>continue_ <code>Optional[str]</code> - continue may be set if the user set a limit on the number of items returned,   and indicates that the server has more data available. The value is opaque and   may be used to issue another request to the endpoint that served this list to   retrieve the next set of available objects. Continuing a consistent list may   not be possible if the server configuration has changed or more than a few   minutes have passed. The resourceVersion field returned when using this   continue value will be identical to the value in the first response, unless   you have received this token from an error message.</li> <li>remainingItemCount <code>Optional[int]</code> - remainingItemCount is the number of subsequent items in the list which are not   included in this list response. If the list request contained label or field   selectors, then the number of remaining items is unknown and the field will be   left unset and omitted during serialization. If the list is complete (either   because it is not chunking or because this is the last chunk), then there are   no more remaining items and this field will be left unset and omitted during   serialization. Servers older than v1.15 do not set this field. The intended   use of the remainingItemCount is estimating the size of a collection.   Clients should not rely on the remainingItemCount to be set or to be exact.</li> <li>resourceVersion <code>Optional[str]</code> - String that identifies the server's internal version of this object that can   be used by clients to determine when objects have changed. Value must be   treated as opaque by clients and passed unmodified back to the server.   Populated by the system. Read-only. More info</li> <li>selfLink <code>Optional[str]</code> - Deprecated: selfLink is a legacy read-only field that is no longer populated   by the system.</li> </ul>"},{"location":"models/meta_v1/#managedfieldsentry","title":"ManagedFieldsEntry","text":"class <code>lightkube.models.meta_v1.ManagedFieldsEntry</code>(apiVersion=None, fieldsType=None, fieldsV1=None, manager=None, operation=None, subresource=None, time=None) <p>ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the version of this resource that this field set applies   to. The format is \"group/version\" just like the top-level APIVersion field. It   is necessary to track the version of a field set because it cannot be   automatically converted.</li> <li>fieldsType <code>Optional[str]</code> - FieldsType is the discriminator for the different fields format and version.   There is currently only one possible value: \"FieldsV1\"</li> <li>fieldsV1 <code>Optional[FieldsV1]</code> - FieldsV1 holds the first JSON version format as described in the \"FieldsV1\"   type.</li> <li>manager <code>Optional[str]</code> - Manager is an identifier of the workflow managing these fields.</li> <li>operation <code>Optional[str]</code> - Operation is the type of operation which lead to this ManagedFieldsEntry being   created. The only valid values for this field are 'Apply' and 'Update'.</li> <li>subresource <code>Optional[str]</code> - Subresource is the name of the subresource used to update that object, or   empty string if the object was updated through the main resource. The value of   this field is used to distinguish between managers, even if they share the   same name. For example, a status update will be distinct from a regular update   using the same manager name. Note that the APIVersion field is not related to   the Subresource field and it always corresponds to the version of the main   resource.</li> <li>time <code>Optional[Time]</code> - Time is the timestamp of when the ManagedFields entry was added. The timestamp   will also be updated if a field is added, the manager changes any of the owned   fields value or removes a field. The timestamp does not update when a field is   removed from the entry because another manager took it over.</li> </ul>"},{"location":"models/meta_v1/#microtime","title":"MicroTime","text":""},{"location":"models/meta_v1/#objectmeta","title":"ObjectMeta","text":"class <code>lightkube.models.meta_v1.ObjectMeta</code>(annotations=None, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels=None, managedFields=None, name=None, namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None) <p>ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.</p> <p>parameters</p> <ul> <li>annotations <code>Optional[dict]</code> - Annotations is an unstructured key value map stored with a resource that may   be set by external tools to store and retrieve arbitrary metadata. They are   not queryable and should be preserved when modifying objects. More info</li> <li>creationTimestamp <code>Optional[Time]</code> - CreationTimestamp is a timestamp representing the server time when this object   was created. It is not guaranteed to be set in happens-before order across   separate operations. Clients may not set this value. It is represented in   RFC3339 form and is in UTC.   Populated by the system. Read-only. Null for lists. More info</li> <li>deletionGracePeriodSeconds <code>Optional[int]</code> - Number of seconds allowed for this object to gracefully terminate before it   will be removed from the system. Only set when deletionTimestamp is also set.   May only be shortened. Read-only.</li> <li>deletionTimestamp <code>Optional[Time]</code> - DeletionTimestamp is RFC 3339 date and time at which this resource will be   deleted. This field is set by the server when a graceful deletion is requested   by the user, and is not directly settable by a client. The resource is   expected to be deleted (no longer visible from resource lists, and not   reachable by name) after the time in this field, once the finalizers list is   empty. As long as the finalizers list contains items, deletion is blocked.   Once the deletionTimestamp is set, this value may not be unset or be set   further into the future, although it may be shortened or the resource may be   deleted prior to this time. For example, a user may request that a pod is   deleted in 30 seconds. The Kubelet will react by sending a graceful   termination signal to the containers in the pod. After that 30 seconds, the   Kubelet will send a hard termination signal (SIGKILL) to the container and   after cleanup, remove the pod from the API. In the presence of network   partitions, this object may still exist after this timestamp, until an   administrator or automated process can determine the resource is fully   terminated. If not set, graceful deletion of the object has not been   requested.   Populated by the system when a graceful deletion is requested. Read-only. More info</li> <li>finalizers <code>Optional[List[str]]</code> - Must be empty before the object is deleted from the registry. Each entry is an   identifier for the responsible component that will remove the entry from the   list. If the deletionTimestamp of the object is non-nil, entries in this list   can only be removed. Finalizers may be processed and removed in any order.   Order is NOT enforced because it introduces significant risk of stuck   finalizers. finalizers is a shared field, any actor with permission can   reorder it. If the finalizer list is processed in order, then this can lead to   a situation in which the component responsible for the first finalizer in the   list is waiting for a signal (field value, external system, or other) produced   by a component responsible for a finalizer later in the list, resulting in a   deadlock. Without enforced ordering finalizers are free to order amongst   themselves and are not vulnerable to ordering changes in the list.</li> <li>generateName <code>Optional[str]</code> - GenerateName is an optional prefix, used by the server, to generate a unique   name ONLY IF the Name field has not been provided. If this field is used, the   name returned to the client will be different than the name passed. This value   will also be combined with a unique suffix. The provided value has the same   validation rules as the Name field, and may be truncated by the length of the   suffix required to make the value unique on the server.   If this field is specified and the generated name exists, the server will   return a 409.   Applied only if Name is not specified. More info</li> <li>generation <code>Optional[int]</code> - A sequence number representing a specific generation of the desired state.   Populated by the system. Read-only.</li> <li>labels <code>Optional[dict]</code> - Map of string keys and values that can be used to organize and categorize   (scope and select) objects. May match selectors of replication controllers and   services. More info</li> <li>managedFields <code>Optional[List[ManagedFieldsEntry]]</code> - ManagedFields maps workflow-id and version to the set of fields that are   managed by that workflow. This is mostly for internal housekeeping, and users   typically shouldn't need to set or understand this field. A workflow can be   the user's name, a controller's name, or the name of a specific apply path   like \"ci-cd\". The set of fields is always in the version that the workflow   used when modifying the object.</li> <li>name <code>Optional[str]</code> - Name must be unique within a namespace. Is required when creating resources,   although some resources may allow a client to request the generation of an   appropriate name automatically. Name is primarily intended for creation   idempotence and configuration definition. Cannot be updated. More info</li> <li>namespace <code>Optional[str]</code> - Namespace defines the space within which each name must be unique. An empty   namespace is equivalent to the \"default\" namespace, but \"default\" is the   canonical representation. Not all objects are required to be scoped to a   namespace - the value of this field for those objects will be empty.   Must be a DNS_LABEL. Cannot be updated. More info</li> <li>ownerReferences <code>Optional[List[OwnerReference]]</code> - List of objects depended by this object. If ALL objects in the list have been   deleted, this object will be garbage collected. If this object is managed by a   controller, then an entry in this list will point to this controller, with the   controller field set to true. There cannot be more than one managing   controller.</li> <li>resourceVersion <code>Optional[str]</code> - An opaque value that represents the internal version of this object that can   be used by clients to determine when objects have changed. May be used for   optimistic concurrency, change detection, and the watch operation on a   resource or set of resources. Clients must treat these values as opaque and   passed unmodified back to the server. They may only be valid for a particular   resource or set of resources.   Populated by the system. Read-only. Value must be treated as opaque by clients   and . More info</li> <li>selfLink <code>Optional[str]</code> - Deprecated: selfLink is a legacy read-only field that is no longer populated   by the system.</li> <li>uid <code>Optional[str]</code> - UID is the unique in time and space value for this object. It is typically   generated by the server on successful creation of a resource and is not   allowed to change on PUT operations.   Populated by the system. Read-only. More info</li> </ul>"},{"location":"models/meta_v1/#ownerreference","title":"OwnerReference","text":"class <code>lightkube.models.meta_v1.OwnerReference</code>(apiVersion, kind, name, uid, blockOwnerDeletion=None, controller=None) <p>OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.</p> <p>parameters</p> <ul> <li>apiVersion <code>str</code> - API version of the referent.</li> <li>kind <code>str</code> - Kind of the referent. More info</li> <li>name <code>str</code> - Name of the referent. More info</li> <li>uid <code>str</code> - UID of the referent. More info</li> <li>blockOwnerDeletion <code>Optional[bool]</code> - If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the   owner cannot be deleted from the key-value store until this reference is   removed. See   https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion   for how the garbage collector interacts with this field and enforces the   foreground deletion. Defaults to false. To set this field, a user needs   \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be   returned.</li> <li>controller <code>Optional[bool]</code> - If true, this reference points to the managing controller.</li> </ul>"},{"location":"models/meta_v1/#patch","title":"Patch","text":""},{"location":"models/meta_v1/#preconditions","title":"Preconditions","text":"class <code>lightkube.models.meta_v1.Preconditions</code>(resourceVersion=None, uid=None) <p>Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.</p> <p>parameters</p> <ul> <li>resourceVersion <code>Optional[str]</code> - Specifies the target ResourceVersion</li> <li>uid <code>Optional[str]</code> - Specifies the target UID.</li> </ul>"},{"location":"models/meta_v1/#serveraddressbyclientcidr","title":"ServerAddressByClientCIDR","text":"class <code>lightkube.models.meta_v1.ServerAddressByClientCIDR</code>(clientCIDR, serverAddress) <p>ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.</p> <p>parameters</p> <ul> <li>clientCIDR <code>str</code> - The CIDR with which clients can match their IP to figure out the server   address that they should use.</li> <li>serverAddress <code>str</code> - Address of this server, suitable for a client that matches the above CIDR.   This can be a hostname, hostname:port, IP or IP:port.</li> </ul>"},{"location":"models/meta_v1/#status","title":"Status","text":"class <code>lightkube.models.meta_v1.Status</code>(apiVersion=None, code=None, details=None, kind=None, message=None, metadata=None, reason=None, status=None) <p>Status is a return value for calls that don't return other objects.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>code <code>Optional[int]</code> - Suggested HTTP return code for this status, 0 if not set.</li> <li>details <code>Optional[StatusDetails]</code> - Extended data associated with the reason.  Each reason may define its own   extended details. This field is optional and the data returned is not   guaranteed to conform to any schema except that defined by the reason type.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>message <code>Optional[str]</code> - A human-readable description of the status of this operation.</li> <li>metadata <code>Optional[ListMeta]</code> - Standard list metadata. More info</li> <li>reason <code>Optional[str]</code> - A machine-readable description of why this operation is in the \"Failure\"   status. If this value is empty there is no information available. A Reason   clarifies an HTTP status code but does not override it.</li> <li>status <code>Optional[str]</code> - Status of the operation. One of: \"Success\" or \"Failure\". More info</li> </ul>"},{"location":"models/meta_v1/#statuscause","title":"StatusCause","text":"class <code>lightkube.models.meta_v1.StatusCause</code>(field=None, message=None, reason=None) <p>StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.</p> <p>parameters</p> <ul> <li>field <code>Optional[str]</code> - The field of the resource that has caused this error, as named by its JSON   serialization. May include dot and postfix notation for nested attributes.   Arrays are zero-indexed.  Fields may appear more than once in an array of   causes due to fields having multiple errors. Optional.   Examples:     \"name\" - the field \"name\" on the current resource     \"items[0].name\" - the field \"name\" on the first array entry in \"items\"</li> <li>message <code>Optional[str]</code> - A human-readable description of the cause of the error.  This field may be   presented as-is to a reader.</li> <li>reason <code>Optional[str]</code> - A machine-readable description of the cause of the error. If this value is   empty there is no information available.</li> </ul>"},{"location":"models/meta_v1/#statusdetails","title":"StatusDetails","text":"class <code>lightkube.models.meta_v1.StatusDetails</code>(causes=None, group=None, kind=None, name=None, retryAfterSeconds=None, uid=None) <p>StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.</p> <p>parameters</p> <ul> <li>causes <code>Optional[List[StatusCause]]</code> - The Causes array includes more details associated with the StatusReason   failure. Not all StatusReasons may provide detailed causes.</li> <li>group <code>Optional[str]</code> - The group attribute of the resource associated with the status StatusReason.</li> <li>kind <code>Optional[str]</code> - The kind attribute of the resource associated with the status StatusReason. On   some operations may differ from the requested resource Kind. More info</li> <li>name <code>Optional[str]</code> - The name attribute of the resource associated with the status StatusReason   (when there is a single name which can be described).</li> <li>retryAfterSeconds <code>Optional[int]</code> - If specified, the time in seconds before the operation should be retried. Some   errors may indicate the client must take an alternate action - for those   errors this field may indicate how long to wait before taking the alternate   action.</li> <li>uid <code>Optional[str]</code> - UID of the resource. (when there is a single resource which can be described).   More info</li> </ul>"},{"location":"models/meta_v1/#time","title":"Time","text":""},{"location":"models/meta_v1/#watchevent","title":"WatchEvent","text":"class <code>lightkube.models.meta_v1.WatchEvent</code>(object, type) <p>Event represents a single event to a watched resource.</p> <p>parameters</p> <ul> <li>object <code>runtime.RawExtension</code> - Object is:</li> <li>If Type is Added or Modified: the new state of the object.</li> <li>If Type is Deleted: the state of the object immediately before deletion.</li> <li>If Type is Error: *Status is recommended; other types may make sense      depending on context.</li> <li>type <code>str</code> -</li> </ul>"},{"location":"models/networking_v1/","title":"networking_v1","text":""},{"location":"models/networking_v1/#httpingresspath","title":"HTTPIngressPath","text":"class <code>lightkube.models.networking_v1.HTTPIngressPath</code>(backend, pathType, path=None) <p>HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.</p> <p>parameters</p> <ul> <li>backend <code>IngressBackend</code> - backend defines the referenced service endpoint to which the traffic will be   forwarded to.</li> <li>pathType <code>str</code> - pathType determines the interpretation of the path matching. PathType can be   one of the following values: * Exact: Matches the URL path exactly. * Prefix:   Matches based on a URL path prefix split by '/'. Matching is     done on a path element by element basis. A path element refers is the     list of labels in the path split by the '/' separator. A request is a     match for path p if every p is an element-wise prefix of p of the     request path. Note that if the last element of the path is a substring     of the last element in request path, it is not a match (e.g. /foo/bar     matches /foo/bar/baz, but does not match /foo/barbaz).</li> <li>ImplementationSpecific: Interpretation of the Path matching is up to     the IngressClass. Implementations can treat this as a separate PathType     or treat it identically to Prefix or Exact path types.   Implementations are required to support all path types.</li> <li>path <code>Optional[str]</code> - path is matched against the path of an incoming request. Currently it can   contain characters disallowed from the conventional \"path\" part of a URL as   defined by RFC 3986. Paths must begin with a '/' and must be present when   using PathType with value \"Exact\" or \"Prefix\".</li> </ul>"},{"location":"models/networking_v1/#httpingressrulevalue","title":"HTTPIngressRuleValue","text":"class <code>lightkube.models.networking_v1.HTTPIngressRuleValue</code>(paths) <p>HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http:///? -&gt; backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'. <p>parameters</p> <ul> <li>paths <code>HTTPIngressPath</code> - paths is a collection of paths that map requests to backends.</li> </ul>"},{"location":"models/networking_v1/#ipblock","title":"IPBlock","text":"class <code>lightkube.models.networking_v1.IPBlock</code>(cidr, except_=None) <p>IPBlock describes a particular CIDR (Ex. \"192.168.1.0/24\",\"2001:db8::/64\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.</p> <p>parameters</p> <ul> <li>cidr <code>str</code> - cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\"   or \"2001:db8::/64\"</li> <li>except_ <code>Optional[List[str]]</code> - except is a slice of CIDRs that should not be included within an IPBlock Valid   examples are \"192.168.1.0/24\" or \"2001:db8::/64\" Except values will be   rejected if they are outside the cidr range</li> </ul>"},{"location":"models/networking_v1/#ingress","title":"Ingress","text":"class <code>lightkube.models.networking_v1.Ingress</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[IngressSpec]</code> - spec is the desired state of the Ingress. More info</li> <li>status <code>Optional[IngressStatus]</code> - status is the current state of the Ingress. More info</li> </ul>"},{"location":"models/networking_v1/#ingressbackend","title":"IngressBackend","text":"class <code>lightkube.models.networking_v1.IngressBackend</code>(resource=None, service=None) <p>IngressBackend describes all endpoints for a given service and port.</p> <p>parameters</p> <ul> <li>resource <code>Optional[core_v1.TypedLocalObjectReference]</code> - resource is an ObjectRef to another Kubernetes resource in the namespace of   the Ingress object. If resource is specified, a service.Name and service.Port   must not be specified. This is a mutually exclusive setting with \"Service\".</li> <li>service <code>Optional[IngressServiceBackend]</code> - service references a service as a backend. This is a mutually exclusive   setting with \"Resource\".</li> </ul>"},{"location":"models/networking_v1/#ingressclass","title":"IngressClass","text":"class <code>lightkube.models.networking_v1.IngressClass</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>IngressClass represents the class of the Ingress, referenced by the Ingress Spec. The <code>ingressclass.kubernetes.io/is-default-class</code> annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[IngressClassSpec]</code> - spec is the desired state of the IngressClass. More info</li> </ul>"},{"location":"models/networking_v1/#ingressclasslist","title":"IngressClassList","text":"class <code>lightkube.models.networking_v1.IngressClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>IngressClassList is a collection of IngressClasses.</p> <p>parameters</p> <ul> <li>items <code>IngressClass</code> - items is the list of IngressClasses.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata.</li> </ul>"},{"location":"models/networking_v1/#ingressclassparametersreference","title":"IngressClassParametersReference","text":"class <code>lightkube.models.networking_v1.IngressClassParametersReference</code>(kind, name, apiGroup=None, namespace=None, scope=None) <p>IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - kind is the type of resource being referenced.</li> <li>name <code>str</code> - name is the name of resource being referenced.</li> <li>apiGroup <code>Optional[str]</code> - apiGroup is the group for the resource being referenced. If APIGroup is not   specified, the specified Kind must be in the core API group. For any other   third-party types, APIGroup is required.</li> <li>namespace <code>Optional[str]</code> - namespace is the namespace of the resource being referenced. This field is   required when scope is set to \"Namespace\" and must be unset when scope is set   to \"Cluster\".</li> <li>scope <code>Optional[str]</code> - scope represents if this refers to a cluster or namespace scoped resource.   This may be set to \"Cluster\" (default) or \"Namespace\".</li> </ul>"},{"location":"models/networking_v1/#ingressclassspec","title":"IngressClassSpec","text":"class <code>lightkube.models.networking_v1.IngressClassSpec</code>(controller=None, parameters=None) <p>IngressClassSpec provides information about the class of an Ingress.</p> <p>parameters</p> <ul> <li>controller <code>Optional[str]</code> - controller refers to the name of the controller that should handle this class.   This allows for different \"flavors\" that are controlled by the same   controller. For example, you may have different parameters for the same   implementing controller. This should be specified as a domain-prefixed path no   more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This   field is immutable.</li> <li>parameters <code>Optional[IngressClassParametersReference]</code> - parameters is a link to a custom resource containing additional configuration   for the controller. This is optional if the controller does not require extra   parameters.</li> </ul>"},{"location":"models/networking_v1/#ingresslist","title":"IngressList","text":"class <code>lightkube.models.networking_v1.IngressList</code>(items, apiVersion=None, kind=None, metadata=None) <p>IngressList is a collection of Ingress.</p> <p>parameters</p> <ul> <li>items <code>Ingress</code> - items is the list of Ingress.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/networking_v1/#ingressloadbalanceringress","title":"IngressLoadBalancerIngress","text":"class <code>lightkube.models.networking_v1.IngressLoadBalancerIngress</code>(hostname=None, ip=None, ports=None) <p>IngressLoadBalancerIngress represents the status of a load-balancer ingress point.</p> <p>parameters</p> <ul> <li>hostname <code>Optional[str]</code> - hostname is set for load-balancer ingress points that are DNS based.</li> <li>ip <code>Optional[str]</code> - ip is set for load-balancer ingress points that are IP based.</li> <li>ports <code>Optional[List[IngressPortStatus]]</code> - ports provides information about the ports exposed by this LoadBalancer.</li> </ul>"},{"location":"models/networking_v1/#ingressloadbalancerstatus","title":"IngressLoadBalancerStatus","text":"class <code>lightkube.models.networking_v1.IngressLoadBalancerStatus</code>(ingress=None) <p>IngressLoadBalancerStatus represents the status of a load-balancer.</p> <p>parameters</p> <ul> <li>ingress <code>Optional[List[IngressLoadBalancerIngress]]</code> - ingress is a list containing ingress points for the load-balancer.</li> </ul>"},{"location":"models/networking_v1/#ingressportstatus","title":"IngressPortStatus","text":"class <code>lightkube.models.networking_v1.IngressPortStatus</code>(port, protocol, error=None) <p>IngressPortStatus represents the error condition of a service port</p> <p>parameters</p> <ul> <li>port <code>int</code> - port is the port number of the ingress port.</li> <li>protocol <code>str</code> - protocol is the protocol of the ingress port. The supported values are: \"TCP\",   \"UDP\", \"SCTP\"</li> <li>error <code>Optional[str]</code> - error is to record the problem with the service port The format of the error   shall comply with the following rules: - built-in error values shall be   specified in this file and those shall use     CamelCase names</li> <li>cloud provider specific error values must have names that comply with the     format foo.example.com/CamelCase.</li> </ul>"},{"location":"models/networking_v1/#ingressrule","title":"IngressRule","text":"class <code>lightkube.models.networking_v1.IngressRule</code>(host=None, http=None) <p>IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.</p> <p>parameters</p> <ul> <li>host <code>Optional[str]</code> - host is the fully qualified domain name of a network host, as defined by RFC</li> <li>Note the following deviations from the \"host\" part of the URI as defined   in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only   apply to      the IP in the Spec of the parent Ingress.</li> <li>The <code>:</code> delimiter is not respected because ports are not allowed.             Currently the port of an Ingress is implicitly :80 for http and             :443 for https.   Both these may change in the future. Incoming requests are matched against the   host before the IngressRuleValue. If the host is unspecified, the Ingress   routes all traffic based on the specified IngressRuleValue.   host can be \"precise\" which is a domain name without the terminating dot of a   network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name   prefixed with a single wildcard label (e.g. \".foo.com\"). The wildcard   character '' must appear by itself as the first DNS label and matches only a   single label. You cannot have a wildcard label by itself (e.g. Host == \"*\").   Requests will be matched against the Host field in the following way: 1. If   host is precise, the request matches this rule if the http host header is   equal to Host. 2. If host is a wildcard, then the request matches this rule if   the http host header is to equal to the suffix (removing the first label) of   the wildcard rule.</li> <li>http <code>Optional[HTTPIngressRuleValue]</code> -</li> </ul>"},{"location":"models/networking_v1/#ingressservicebackend","title":"IngressServiceBackend","text":"class <code>lightkube.models.networking_v1.IngressServiceBackend</code>(name, port=None) <p>IngressServiceBackend references a Kubernetes Service as a Backend.</p> <p>parameters</p> <ul> <li>name <code>str</code> - name is the referenced service. The service must exist in the same namespace   as the Ingress object.</li> <li>port <code>Optional[ServiceBackendPort]</code> - port of the referenced service. A port name or port number is required for a   IngressServiceBackend.</li> </ul>"},{"location":"models/networking_v1/#ingressspec","title":"IngressSpec","text":"class <code>lightkube.models.networking_v1.IngressSpec</code>(defaultBackend=None, ingressClassName=None, rules=None, tls=None) <p>IngressSpec describes the Ingress the user wishes to exist.</p> <p>parameters</p> <ul> <li>defaultBackend <code>Optional[IngressBackend]</code> - defaultBackend is the backend that should handle requests that don't match any   rule. If Rules are not specified, DefaultBackend must be specified. If   DefaultBackend is not set, the handling of requests that do not match any of   the rules will be up to the Ingress controller.</li> <li>ingressClassName <code>Optional[str]</code> - ingressClassName is the name of an IngressClass cluster resource. Ingress   controller implementations use this field to know whether they should be   serving this Ingress resource, by a transitive connection (controller -&gt;   IngressClass -&gt; Ingress resource). Although the <code>kubernetes.io/ingress.class</code>   annotation (simple constant name) was never formally defined, it was widely   supported by Ingress controllers to create a direct binding between Ingress   controller and Ingress resources. Newly created Ingress resources should   prefer using the field. However, even though the annotation is officially   deprecated, for backwards compatibility reasons, ingress controllers should   still honor that annotation if present.</li> <li>rules <code>Optional[List[IngressRule]]</code> - rules is a list of host rules used to configure the Ingress. If unspecified,   or no rule matches, all traffic is sent to the default backend.</li> <li>tls <code>Optional[List[IngressTLS]]</code> - tls represents the TLS configuration. Currently the Ingress only supports a   single TLS port, 443. If multiple members of this list specify different   hosts, they will be multiplexed on the same port according to the hostname   specified through the SNI TLS extension, if the ingress controller fulfilling   the ingress supports SNI.</li> </ul>"},{"location":"models/networking_v1/#ingressstatus","title":"IngressStatus","text":"class <code>lightkube.models.networking_v1.IngressStatus</code>(loadBalancer=None) <p>IngressStatus describe the current state of the Ingress.</p> <p>parameters</p> <ul> <li>loadBalancer <code>Optional[IngressLoadBalancerStatus]</code> - loadBalancer contains the current status of the load-balancer.</li> </ul>"},{"location":"models/networking_v1/#ingresstls","title":"IngressTLS","text":"class <code>lightkube.models.networking_v1.IngressTLS</code>(hosts=None, secretName=None) <p>IngressTLS describes the transport layer security associated with an ingress.</p> <p>parameters</p> <ul> <li>hosts <code>Optional[List[str]]</code> - hosts is a list of hosts included in the TLS certificate. The values in this   list must match the name/s used in the tlsSecret. Defaults to the wildcard   host setting for the loadbalancer controller fulfilling this Ingress, if left   unspecified.</li> <li>secretName <code>Optional[str]</code> - secretName is the name of the secret used to terminate TLS traffic on port</li> <li>Field is left optional to allow TLS routing based on SNI hostname alone.   If the SNI host in a listener conflicts with the \"Host\" header field used by   an IngressRule, the SNI host is used for termination and value of the \"Host\"   header is used for routing.</li> </ul>"},{"location":"models/networking_v1/#networkpolicy","title":"NetworkPolicy","text":"class <code>lightkube.models.networking_v1.NetworkPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>NetworkPolicy describes what network traffic is allowed for a set of Pods</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[NetworkPolicySpec]</code> - spec represents the specification of the desired behavior for this   NetworkPolicy.</li> </ul>"},{"location":"models/networking_v1/#networkpolicyegressrule","title":"NetworkPolicyEgressRule","text":"class <code>lightkube.models.networking_v1.NetworkPolicyEgressRule</code>(ports=None, to=None) <p>NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8</p> <p>parameters</p> <ul> <li>ports <code>Optional[List[NetworkPolicyPort]]</code> - ports is a list of destination ports for outgoing traffic. Each item in this   list is combined using a logical OR. If this field is empty or missing, this   rule matches all ports (traffic not restricted by port). If this field is   present and contains at least one item, then this rule allows traffic only if   the traffic matches at least one port in the list.</li> <li>to <code>Optional[List[NetworkPolicyPeer]]</code> - to is a list of destinations for outgoing traffic of pods selected for this   rule. Items in this list are combined using a logical OR operation. If this   field is empty or missing, this rule matches all destinations (traffic not   restricted by destination). If this field is present and contains at least one   item, this rule allows traffic only if the traffic matches at least one item   in the to list.</li> </ul>"},{"location":"models/networking_v1/#networkpolicyingressrule","title":"NetworkPolicyIngressRule","text":"class <code>lightkube.models.networking_v1.NetworkPolicyIngressRule</code>(from_=None, ports=None) <p>NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.</p> <p>parameters</p> <ul> <li>from_ <code>Optional[List[NetworkPolicyPeer]]</code> - from is a list of sources which should be able to access the pods selected for   this rule. Items in this list are combined using a logical OR operation. If   this field is empty or missing, this rule matches all sources (traffic not   restricted by source). If this field is present and contains at least one   item, this rule allows traffic only if the traffic matches at least one item   in the from list.</li> <li>ports <code>Optional[List[NetworkPolicyPort]]</code> - ports is a list of ports which should be made accessible on the pods selected   for this rule. Each item in this list is combined using a logical OR. If this   field is empty or missing, this rule matches all ports (traffic not restricted   by port). If this field is present and contains at least one item, then this   rule allows traffic only if the traffic matches at least one port in the list.</li> </ul>"},{"location":"models/networking_v1/#networkpolicylist","title":"NetworkPolicyList","text":"class <code>lightkube.models.networking_v1.NetworkPolicyList</code>(items, apiVersion=None, kind=None, metadata=None) <p>NetworkPolicyList is a list of NetworkPolicy objects.</p> <p>parameters</p> <ul> <li>items <code>NetworkPolicy</code> - items is a list of schema objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/networking_v1/#networkpolicypeer","title":"NetworkPolicyPeer","text":"class <code>lightkube.models.networking_v1.NetworkPolicyPeer</code>(ipBlock=None, namespaceSelector=None, podSelector=None) <p>NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed</p> <p>parameters</p> <ul> <li>ipBlock <code>Optional[IPBlock]</code> - ipBlock defines policy on a particular IPBlock. If this field is set then   neither of the other fields can be.</li> <li>namespaceSelector <code>Optional[meta_v1.LabelSelector]</code> - namespaceSelector selects namespaces using cluster-scoped labels. This field   follows standard label selector semantics; if present but empty, it selects   all namespaces.   If podSelector is also set, then the NetworkPolicyPeer as a whole selects the   pods matching podSelector in the namespaces selected by namespaceSelector.   Otherwise it selects all pods in the namespaces selected by namespaceSelector.</li> <li>podSelector <code>Optional[meta_v1.LabelSelector]</code> - podSelector is a label selector which selects pods. This field follows   standard label selector semantics; if present but empty, it selects all pods.   If namespaceSelector is also set, then the NetworkPolicyPeer as a whole   selects the pods matching podSelector in the Namespaces selected by   NamespaceSelector. Otherwise it selects the pods matching podSelector in the   policy's own namespace.</li> </ul>"},{"location":"models/networking_v1/#networkpolicyport","title":"NetworkPolicyPort","text":"class <code>lightkube.models.networking_v1.NetworkPolicyPort</code>(endPort=None, port=None, protocol=None) <p>NetworkPolicyPort describes a port to allow traffic on</p> <p>parameters</p> <ul> <li>endPort <code>Optional[int]</code> - endPort indicates that the range of ports from port to endPort if set,   inclusive, should be allowed by the policy. This field cannot be defined if   the port field is not defined or if the port field is defined as a named   (string) port. The endPort must be equal or greater than port.</li> <li>port <code>Optional[util_intstr.IntOrString]</code> - port represents the port on the given protocol. This can either be a numerical   or named port on a pod. If this field is not provided, this matches all port   names and numbers. If present, only traffic on the specified protocol AND port   will be matched.</li> <li>protocol <code>Optional[str]</code> - protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.   If not specified, this field defaults to TCP.</li> </ul>"},{"location":"models/networking_v1/#networkpolicyspec","title":"NetworkPolicySpec","text":"class <code>lightkube.models.networking_v1.NetworkPolicySpec</code>(podSelector, egress=None, ingress=None, policyTypes=None) <p>NetworkPolicySpec provides the specification of a NetworkPolicy</p> <p>parameters</p> <ul> <li>podSelector <code>meta_v1.LabelSelector</code> - podSelector selects the pods to which this NetworkPolicy object applies. The   array of ingress rules is applied to any pods selected by this field. Multiple   network policies can select the same set of pods. In this case, the ingress   rules for each are combined additively. This field is NOT optional and follows   standard label selector semantics. An empty podSelector matches all pods in   this namespace.</li> <li>egress <code>Optional[List[NetworkPolicyEgressRule]]</code> - egress is a list of egress rules to be applied to the selected pods. Outgoing   traffic is allowed if there are no NetworkPolicies selecting the pod (and   cluster policy otherwise allows the traffic), OR if the traffic matches at   least one egress rule across all of the NetworkPolicy objects whose   podSelector matches the pod. If this field is empty then this NetworkPolicy   limits all outgoing traffic (and serves solely to ensure that the pods it   selects are isolated by default). This field is beta-level in 1.8</li> <li>ingress <code>Optional[List[NetworkPolicyIngressRule]]</code> - ingress is a list of ingress rules to be applied to the selected pods. Traffic   is allowed to a pod if there are no NetworkPolicies selecting the pod (and   cluster policy otherwise allows the traffic), OR if the traffic source is the   pod's local node, OR if the traffic matches at least one ingress rule across   all of the NetworkPolicy objects whose podSelector matches the pod. If this   field is empty then this NetworkPolicy does not allow any traffic (and serves   solely to ensure that the pods it selects are isolated by default)</li> <li>policyTypes <code>Optional[List[str]]</code> - policyTypes is a list of rule types that the NetworkPolicy relates to. Valid   options are [\"Ingress\"], [\"Egress\"], or [\"Ingress\", \"Egress\"]. If this field   is not specified, it will default based on the existence of ingress or egress   rules; policies that contain an egress section are assumed to affect egress,   and all policies (whether or not they contain an ingress section) are assumed   to affect ingress. If you want to write an egress-only policy, you must   explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a   policy that specifies that no egress is allowed, you must specify a   policyTypes value that include \"Egress\" (since such a policy would not include   an egress section and would otherwise default to just [ \"Ingress\" ]). This   field is beta-level in 1.8</li> </ul>"},{"location":"models/networking_v1/#servicebackendport","title":"ServiceBackendPort","text":"class <code>lightkube.models.networking_v1.ServiceBackendPort</code>(name=None, number=None) <p>ServiceBackendPort is the service port being referenced.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - name is the name of the port on the Service. This is a mutually exclusive   setting with \"Number\".</li> <li>number <code>Optional[int]</code> - number is the numerical port number (e.g. 80) on the Service. This is a   mutually exclusive setting with \"Name\".</li> </ul>"},{"location":"models/networking_v1alpha1/","title":"networking_v1alpha1","text":""},{"location":"models/networking_v1alpha1/#ipaddress","title":"IPAddress","text":"class <code>lightkube.models.networking_v1alpha1.IPAddress</code>(apiVersion=None, kind=None, metadata=None, spec=None) <p>IPAddress represents a single IP of a single IP Family. The object is designed to be used by APIs that operate on IP addresses. The object is used by the Service core API for allocation of IP addresses. An IP address can be represented in different formats, to guarantee the uniqueness of the IP, the name of the object is the IP address in canonical format, four decimal digits separated by dots suppressing leading zeros for IPv4 and the representation defined by RFC 5952 for IPv6. Valid: 192.168.1.5 or 2001:db8::1 or 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1 Invalid: 10.01.2.3 or 2001:db8:0:0:0::1</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[IPAddressSpec]</code> - spec is the desired state of the IPAddress. More info</li> </ul>"},{"location":"models/networking_v1alpha1/#ipaddresslist","title":"IPAddressList","text":"class <code>lightkube.models.networking_v1alpha1.IPAddressList</code>(items, apiVersion=None, kind=None, metadata=None) <p>IPAddressList contains a list of IPAddress.</p> <p>parameters</p> <ul> <li>items <code>IPAddress</code> - items is the list of IPAddresses.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/networking_v1alpha1/#ipaddressspec","title":"IPAddressSpec","text":"class <code>lightkube.models.networking_v1alpha1.IPAddressSpec</code>(parentRef=None) <p>IPAddressSpec describe the attributes in an IP Address.</p> <p>parameters</p> <ul> <li>parentRef <code>Optional[ParentReference]</code> - ParentRef references the resource that an IPAddress is attached to. An   IPAddress must reference a parent object.</li> </ul>"},{"location":"models/networking_v1alpha1/#parentreference","title":"ParentReference","text":"class <code>lightkube.models.networking_v1alpha1.ParentReference</code>(group=None, name=None, namespace=None, resource=None) <p>ParentReference describes a reference to a parent object.</p> <p>parameters</p> <ul> <li>group <code>Optional[str]</code> - Group is the group of the object being referenced.</li> <li>name <code>Optional[str]</code> - Name is the name of the object being referenced.</li> <li>namespace <code>Optional[str]</code> - Namespace is the namespace of the object being referenced.</li> <li>resource <code>Optional[str]</code> - Resource is the resource of the object being referenced.</li> </ul>"},{"location":"models/networking_v1alpha1/#servicecidr","title":"ServiceCIDR","text":"class <code>lightkube.models.networking_v1alpha1.ServiceCIDR</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>ServiceCIDR defines a range of IP addresses using CIDR format (e.g. 192.168.0.0/24 or 2001:db2::/64). This range is used to allocate ClusterIPs to Service objects.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[ServiceCIDRSpec]</code> - spec is the desired state of the ServiceCIDR. More info</li> <li>status <code>Optional[ServiceCIDRStatus]</code> - status represents the current state of the ServiceCIDR. More info</li> </ul>"},{"location":"models/networking_v1alpha1/#servicecidrlist","title":"ServiceCIDRList","text":"class <code>lightkube.models.networking_v1alpha1.ServiceCIDRList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ServiceCIDRList contains a list of ServiceCIDR objects.</p> <p>parameters</p> <ul> <li>items <code>ServiceCIDR</code> - items is the list of ServiceCIDRs.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/networking_v1alpha1/#servicecidrspec","title":"ServiceCIDRSpec","text":"class <code>lightkube.models.networking_v1alpha1.ServiceCIDRSpec</code>(cidrs=None) <p>ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.</p> <p>parameters</p> <ul> <li>cidrs <code>Optional[List[str]]</code> - CIDRs defines the IP blocks in CIDR notation (e.g. \"192.168.0.0/24\" or   \"2001:db8::/64\") from which to assign service cluster IPs. Max of two CIDRs is   allowed, one of each IP family. This field is immutable.</li> </ul>"},{"location":"models/networking_v1alpha1/#servicecidrstatus","title":"ServiceCIDRStatus","text":"class <code>lightkube.models.networking_v1alpha1.ServiceCIDRStatus</code>(conditions=None) <p>ServiceCIDRStatus describes the current state of the ServiceCIDR.</p> <p>parameters</p> <ul> <li>conditions <code>Optional[List[meta_v1.Condition]]</code> - conditions holds an array of metav1.Condition that describe the state of the   ServiceCIDR. Current service state</li> </ul>"},{"location":"models/node_v1/","title":"node_v1","text":""},{"location":"models/node_v1/#overhead","title":"Overhead","text":"class <code>lightkube.models.node_v1.Overhead</code>(podFixed=None) <p>Overhead structure represents the resource overhead associated with running a pod.</p> <p>parameters</p> <ul> <li>podFixed <code>Optional[dict]</code> - podFixed represents the fixed resource overhead associated with running a pod.</li> </ul>"},{"location":"models/node_v1/#runtimeclass","title":"RuntimeClass","text":"class <code>lightkube.models.node_v1.RuntimeClass</code>(handler, apiVersion=None, kind=None, metadata=None, overhead=None, scheduling=None) <p>RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/</p> <p>parameters</p> <ul> <li>handler <code>str</code> - handler specifies the underlying runtime and configuration that the CRI   implementation will use to handle pods of this class. The possible values are   specific to the node &amp; CRI configuration.  It is assumed that all handlers are   available on every node, and handlers of the same name are equivalent on every   node. For example, a handler called \"runc\" might specify that the runc OCI   runtime (using native Linux containers) will be used to run the containers in   a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123)   requirements, and is immutable.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - More info</li> <li>overhead <code>Optional[Overhead]</code> - overhead represents the resource overhead associated with running a pod for a   given RuntimeClass. For more details, see    https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/</li> <li>scheduling <code>Optional[Scheduling]</code> - scheduling holds the scheduling constraints to ensure that pods running with   this RuntimeClass are scheduled to nodes that support it. If scheduling is   nil, this RuntimeClass is assumed to be supported by all nodes.</li> </ul>"},{"location":"models/node_v1/#runtimeclasslist","title":"RuntimeClassList","text":"class <code>lightkube.models.node_v1.RuntimeClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>RuntimeClassList is a list of RuntimeClass objects.</p> <p>parameters</p> <ul> <li>items <code>RuntimeClass</code> - items is a list of schema objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata. More info</li> </ul>"},{"location":"models/node_v1/#scheduling","title":"Scheduling","text":"class <code>lightkube.models.node_v1.Scheduling</code>(nodeSelector=None, tolerations=None) <p>Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.</p> <p>parameters</p> <ul> <li>nodeSelector <code>Optional[dict]</code> - nodeSelector lists labels that must be present on nodes that support this   RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node   matched by this selector. The RuntimeClass nodeSelector is merged with a pod's   existing nodeSelector. Any conflicts will cause the pod to be rejected in   admission.</li> <li>tolerations <code>Optional[List[core_v1.Toleration]]</code> - tolerations are appended (excluding duplicates) to pods running with this   RuntimeClass during admission, effectively unioning the set of nodes tolerated   by the pod and the RuntimeClass.</li> </ul>"},{"location":"models/policy_v1/","title":"policy_v1","text":""},{"location":"models/policy_v1/#eviction","title":"Eviction","text":"class <code>lightkube.models.policy_v1.Eviction</code>(apiVersion=None, deleteOptions=None, kind=None, metadata=None) <p>Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods//evictions. <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>deleteOptions <code>Optional[meta_v1.DeleteOptions]</code> - DeleteOptions may be provided</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - ObjectMeta describes the pod that is being evicted.</li> </ul>"},{"location":"models/policy_v1/#poddisruptionbudget","title":"PodDisruptionBudget","text":"class <code>lightkube.models.policy_v1.PodDisruptionBudget</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <p>PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>spec <code>Optional[PodDisruptionBudgetSpec]</code> - Specification of the desired behavior of the PodDisruptionBudget.</li> <li>status <code>Optional[PodDisruptionBudgetStatus]</code> - Most recently observed status of the PodDisruptionBudget.</li> </ul>"},{"location":"models/policy_v1/#poddisruptionbudgetlist","title":"PodDisruptionBudgetList","text":"class <code>lightkube.models.policy_v1.PodDisruptionBudgetList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PodDisruptionBudgetList is a collection of PodDisruptionBudgets.</p> <p>parameters</p> <ul> <li>items <code>PodDisruptionBudget</code> - Items is a list of PodDisruptionBudgets</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata. More info</li> </ul>"},{"location":"models/policy_v1/#poddisruptionbudgetspec","title":"PodDisruptionBudgetSpec","text":"class <code>lightkube.models.policy_v1.PodDisruptionBudgetSpec</code>(maxUnavailable=None, minAvailable=None, selector=None, unhealthyPodEvictionPolicy=None) <p>PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.</p> <p>parameters</p> <ul> <li>maxUnavailable <code>Optional[util_intstr.IntOrString]</code> - An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\"   are unavailable after the eviction, i.e. even in absence of the evicted pod.   For example, one can prevent all voluntary evictions by specifying 0. This is   a mutually exclusive setting with \"minAvailable\".</li> <li>minAvailable <code>Optional[util_intstr.IntOrString]</code> - An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\"   will still be available after the eviction, i.e. even in the absence of the   evicted pod.  So for example you can prevent all voluntary evictions by   specifying \"100%\".</li> <li>selector <code>Optional[meta_v1.LabelSelector]</code> - Label query over pods whose evictions are managed by the disruption budget. A   null selector will match no pods, while an empty ({}) selector will select all   pods within the namespace.</li> <li>unhealthyPodEvictionPolicy <code>Optional[str]</code> - UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods should   be considered for eviction. Current implementation considers healthy pods, as   pods that have status.conditions item with type=\"Ready\",status=\"True\".   Valid policies are IfHealthyBudget and AlwaysAllow. If no policy is specified,   the default behavior will be used, which corresponds to the IfHealthyBudget   policy.   IfHealthyBudget policy means that running pods (status.phase=\"Running\"), but   not yet healthy can be evicted only if the guarded application is not   disrupted (status.currentHealthy is at least equal to status.desiredHealthy).   Healthy pods will be subject to the PDB for eviction.   AlwaysAllow policy means that all running pods (status.phase=\"Running\"), but   not yet healthy are considered disrupted and can be evicted regardless of   whether the criteria in a PDB is met. This means perspective running pods of a   disrupted application might not get a chance to become healthy. Healthy pods   will be subject to the PDB for eviction.   Additional policies may be added in the future. Clients making eviction   decisions should disallow eviction of unhealthy pods if they encounter an   unrecognized policy in this field.   This field is beta-level. The eviction API uses this field when the feature   gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).</li> </ul>"},{"location":"models/policy_v1/#poddisruptionbudgetstatus","title":"PodDisruptionBudgetStatus","text":"class <code>lightkube.models.policy_v1.PodDisruptionBudgetStatus</code>(currentHealthy, desiredHealthy, disruptionsAllowed, expectedPods, conditions=None, disruptedPods=None, observedGeneration=None) <p>PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.</p> <p>parameters</p> <ul> <li>currentHealthy <code>int</code> - current number of healthy pods</li> <li>desiredHealthy <code>int</code> - minimum desired number of healthy pods</li> <li>disruptionsAllowed <code>int</code> - Number of pod disruptions that are currently allowed.</li> <li>expectedPods <code>int</code> - total number of pods counted by this disruption budget</li> <li>conditions <code>Optional[List[meta_v1.Condition]]</code> - Conditions contain conditions for PDB. The disruption controller sets the   DisruptionAllowed condition. The following are known values for the reason   field (additional reasons could be added in the future): - SyncFailed: The   controller encountered an error and wasn't able to compute                 the number of allowed disruptions. Therefore no disruptions are                 allowed and the status of the condition will be False.</li> <li>InsufficientPods: The number of pods are either at or below the number                       required by the PodDisruptionBudget. No disruptions are                       allowed and the status of the condition will be False.</li> <li>SufficientPods: There are more pods than required by the   PodDisruptionBudget.                     The condition will be True, and the number of allowed                     disruptions are provided by the disruptionsAllowed property.</li> <li>disruptedPods <code>Optional[dict]</code> - DisruptedPods contains information about pods whose eviction was processed by   the API server eviction subresource handler but has not yet been observed by   the PodDisruptionBudget controller. A pod will be in this map from the time   when the API server processed the eviction request to the time when the pod is   seen by PDB controller as having been marked for deletion (or after a   timeout). The key in the map is the name of the pod and the value is the time   when the API server processed the eviction request. If the deletion didn't   occur and a pod is still there it will be removed from the list automatically   by PodDisruptionBudget controller after some time. If everything goes smooth   this map should be empty for the most of the time. Large number of entries in   the map may indicate problems with pod deletions.</li> <li>observedGeneration <code>Optional[int]</code> - Most recent generation observed when updating this PDB status.   DisruptionsAllowed and other status information is valid only if   observedGeneration equals to PDB's object generation.</li> </ul>"},{"location":"models/rbac_v1/","title":"rbac_v1","text":""},{"location":"models/rbac_v1/#aggregationrule","title":"AggregationRule","text":"class <code>lightkube.models.rbac_v1.AggregationRule</code>(clusterRoleSelectors=None) <p>AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole</p> <p>parameters</p> <ul> <li>clusterRoleSelectors <code>Optional[List[meta_v1.LabelSelector]]</code> - ClusterRoleSelectors holds a list of selectors which will be used to find   ClusterRoles and create the rules. If any of the selectors match, then the   ClusterRole's permissions will be added</li> </ul>"},{"location":"models/rbac_v1/#clusterrole","title":"ClusterRole","text":"class <code>lightkube.models.rbac_v1.ClusterRole</code>(aggregationRule=None, apiVersion=None, kind=None, metadata=None, rules=None) <p>ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.</p> <p>parameters</p> <ul> <li>aggregationRule <code>Optional[AggregationRule]</code> - AggregationRule is an optional field that describes how to build the Rules for   this ClusterRole. If AggregationRule is set, then the Rules are controller   managed and direct changes to Rules will be stomped by the controller.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata.</li> <li>rules <code>Optional[List[PolicyRule]]</code> - Rules holds all the PolicyRules for this ClusterRole</li> </ul>"},{"location":"models/rbac_v1/#clusterrolebinding","title":"ClusterRoleBinding","text":"class <code>lightkube.models.rbac_v1.ClusterRoleBinding</code>(roleRef, apiVersion=None, kind=None, metadata=None, subjects=None) <p>ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.</p> <p>parameters</p> <ul> <li>roleRef <code>RoleRef</code> - RoleRef can only reference a ClusterRole in the global namespace. If the   RoleRef cannot be resolved, the Authorizer must return an error. This field is   immutable.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata.</li> <li>subjects <code>Optional[List[Subject]]</code> - Subjects holds references to the objects the role applies to.</li> </ul>"},{"location":"models/rbac_v1/#clusterrolebindinglist","title":"ClusterRoleBindingList","text":"class <code>lightkube.models.rbac_v1.ClusterRoleBindingList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ClusterRoleBindingList is a collection of ClusterRoleBindings</p> <p>parameters</p> <ul> <li>items <code>ClusterRoleBinding</code> - Items is a list of ClusterRoleBindings</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata.</li> </ul>"},{"location":"models/rbac_v1/#clusterrolelist","title":"ClusterRoleList","text":"class <code>lightkube.models.rbac_v1.ClusterRoleList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ClusterRoleList is a collection of ClusterRoles</p> <p>parameters</p> <ul> <li>items <code>ClusterRole</code> - Items is a list of ClusterRoles</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata.</li> </ul>"},{"location":"models/rbac_v1/#policyrule","title":"PolicyRule","text":"class <code>lightkube.models.rbac_v1.PolicyRule</code>(verbs, apiGroups=None, nonResourceURLs=None, resourceNames=None, resources=None) <p>PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.</p> <p>parameters</p> <ul> <li>verbs <code>List[str]</code> - Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this   rule. '' represents all verbs. <li>apiGroups <code>Optional[List[str]]</code> - APIGroups is the name of the APIGroup that contains the resources.  If   multiple API groups are specified, any action requested against one of the   enumerated resources in any API group will be allowed. \"\" represents the core   API group and \"\" represents all API groups.</li> <li>nonResourceURLs <code>Optional[List[str]]</code> - NonResourceURLs is a set of partial urls that a user should have access to.   s are allowed, but only as the full, final step in the path Since   non-resource URLs are not namespaced, this field is only applicable for   ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to   API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as   \"/api\"),  but not both. <li>resourceNames <code>Optional[List[str]]</code> - ResourceNames is an optional white list of names that the rule applies to.  An   empty set means that everything is allowed.</li> <li>resources <code>Optional[List[str]]</code> - Resources is a list of resources this rule applies to. '' represents all   resources.</li>"},{"location":"models/rbac_v1/#role","title":"Role","text":"class <code>lightkube.models.rbac_v1.Role</code>(apiVersion=None, kind=None, metadata=None, rules=None) <p>Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.</p> <p>parameters</p> <ul> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata.</li> <li>rules <code>Optional[List[PolicyRule]]</code> - Rules holds all the PolicyRules for this Role</li> </ul>"},{"location":"models/rbac_v1/#rolebinding","title":"RoleBinding","text":"class <code>lightkube.models.rbac_v1.RoleBinding</code>(roleRef, apiVersion=None, kind=None, metadata=None, subjects=None) <p>RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.</p> <p>parameters</p> <ul> <li>roleRef <code>RoleRef</code> - RoleRef can reference a Role in the current namespace or a ClusterRole in the   global namespace. If the RoleRef cannot be resolved, the Authorizer must   return an error. This field is immutable.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata.</li> <li>subjects <code>Optional[List[Subject]]</code> - Subjects holds references to the objects the role applies to.</li> </ul>"},{"location":"models/rbac_v1/#rolebindinglist","title":"RoleBindingList","text":"class <code>lightkube.models.rbac_v1.RoleBindingList</code>(items, apiVersion=None, kind=None, metadata=None) <p>RoleBindingList is a collection of RoleBindings</p> <p>parameters</p> <ul> <li>items <code>RoleBinding</code> - Items is a list of RoleBindings</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata.</li> </ul>"},{"location":"models/rbac_v1/#rolelist","title":"RoleList","text":"class <code>lightkube.models.rbac_v1.RoleList</code>(items, apiVersion=None, kind=None, metadata=None) <p>RoleList is a collection of Roles</p> <p>parameters</p> <ul> <li>items <code>Role</code> - Items is a list of Roles</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard object's metadata.</li> </ul>"},{"location":"models/rbac_v1/#roleref","title":"RoleRef","text":"class <code>lightkube.models.rbac_v1.RoleRef</code>(apiGroup, kind, name) <p>RoleRef contains information that points to the role being used</p> <p>parameters</p> <ul> <li>apiGroup <code>str</code> - APIGroup is the group for the resource being referenced</li> <li>kind <code>str</code> - Kind is the type of resource being referenced</li> <li>name <code>str</code> - Name is the name of resource being referenced</li> </ul>"},{"location":"models/rbac_v1/#subject","title":"Subject","text":"class <code>lightkube.models.rbac_v1.Subject</code>(kind, name, apiGroup=None, namespace=None) <p>Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - Kind of object being referenced. Values defined by this API group are \"User\",   \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind   value, the Authorizer should report an error.</li> <li>name <code>str</code> - Name of the object being referenced.</li> <li>apiGroup <code>Optional[str]</code> - APIGroup holds the API group of the referenced subject. Defaults to \"\" for   ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and   Group subjects.</li> <li>namespace <code>Optional[str]</code> - Namespace of the referenced object.  If the object kind is non-namespace, such   as \"User\" or \"Group\", and this value is not empty the Authorizer should report   an error.</li> </ul>"},{"location":"models/resource/","title":"resource","text":""},{"location":"models/resource/#quantity","title":"Quantity","text":""},{"location":"models/resource_v1alpha2/","title":"resource_v1alpha2","text":""},{"location":"models/resource_v1alpha2/#allocationresult","title":"AllocationResult","text":"class <code>lightkube.models.resource_v1alpha2.AllocationResult</code>(availableOnNodes=None, resourceHandles=None, shareable=None) <p>AllocationResult contains attributes of an allocated resource.</p> <p>parameters</p> <ul> <li>availableOnNodes <code>Optional[core_v1.NodeSelector]</code> - This field will get set by the resource driver after it has allocated the   resource to inform the scheduler where it can schedule Pods using the   ResourceClaim.   Setting this field is optional. If null, the resource is available everywhere.</li> <li>resourceHandles <code>Optional[List[ResourceHandle]]</code> - ResourceHandles contain the state associated with an allocation that should be   maintained throughout the lifetime of a claim. Each ResourceHandle contains   data that should be passed to a specific kubelet plugin once it lands on a   node. This data is returned by the driver after a successful allocation and is   opaque to Kubernetes. Driver documentation may explain to users how to   interpret this data if needed.   Setting this field is optional. It has a maximum size of 32 entries. If null   (or empty), it is assumed this allocation will be processed by a single   kubelet plugin with no ResourceHandle data attached. The name of the kubelet   plugin invoked will match the DriverName set in the ResourceClaimStatus this   AllocationResult is embedded in.</li> <li>shareable <code>Optional[bool]</code> - Shareable determines whether the resource supports more than one consumer at a   time.</li> </ul>"},{"location":"models/resource_v1alpha2/#podschedulingcontext","title":"PodSchedulingContext","text":"class <code>lightkube.models.resource_v1alpha2.PodSchedulingContext</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>PodSchedulingContext objects hold information that is needed to schedule a Pod with ResourceClaims that use \"WaitForFirstConsumer\" allocation mode.</p> <p>This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.</p> <p>parameters</p> <ul> <li>spec <code>PodSchedulingContextSpec</code> - Spec describes where resources for the Pod are needed.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata</li> <li>status <code>Optional[PodSchedulingContextStatus]</code> - Status describes where resources for the Pod can be allocated.</li> </ul>"},{"location":"models/resource_v1alpha2/#podschedulingcontextlist","title":"PodSchedulingContextList","text":"class <code>lightkube.models.resource_v1alpha2.PodSchedulingContextList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PodSchedulingContextList is a collection of Pod scheduling objects.</p> <p>parameters</p> <ul> <li>items <code>PodSchedulingContext</code> - Items is the list of PodSchedulingContext objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata</li> </ul>"},{"location":"models/resource_v1alpha2/#podschedulingcontextspec","title":"PodSchedulingContextSpec","text":"class <code>lightkube.models.resource_v1alpha2.PodSchedulingContextSpec</code>(potentialNodes=None, selectedNode=None) <p>PodSchedulingContextSpec describes where resources for the Pod are needed.</p> <p>parameters</p> <ul> <li>potentialNodes <code>Optional[List[str]]</code> - PotentialNodes lists nodes where the Pod might be able to run.   The size of this field is limited to 128. This is large enough for many   clusters. Larger clusters may need more attempts to find a node that suits all   pending resources. This may get increased in the future, but not reduced.</li> <li>selectedNode <code>Optional[str]</code> - SelectedNode is the node for which allocation of ResourceClaims that are   referenced by the Pod and that use \"WaitForFirstConsumer\" allocation is to be   attempted.</li> </ul>"},{"location":"models/resource_v1alpha2/#podschedulingcontextstatus","title":"PodSchedulingContextStatus","text":"class <code>lightkube.models.resource_v1alpha2.PodSchedulingContextStatus</code>(resourceClaims=None) <p>PodSchedulingContextStatus describes where resources for the Pod can be allocated.</p> <p>parameters</p> <ul> <li>resourceClaims <code>Optional[List[ResourceClaimSchedulingStatus]]</code> - ResourceClaims describes resource availability for each pod.spec.resourceClaim   entry where the corresponding ResourceClaim uses \"WaitForFirstConsumer\"   allocation mode.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaim","title":"ResourceClaim","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaim</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>ResourceClaim describes which resources are needed by a resource consumer. Its status tracks whether the resource has been allocated and what the resulting attributes are.</p> <p>This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.</p> <p>parameters</p> <ul> <li>spec <code>ResourceClaimSpec</code> - Spec describes the desired attributes of a resource that then needs to be   allocated. It can only be set once when creating the ResourceClaim.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata</li> <li>status <code>Optional[ResourceClaimStatus]</code> - Status describes whether the resource is available and with which attributes.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimconsumerreference","title":"ResourceClaimConsumerReference","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimConsumerReference</code>(name, resource, uid, apiGroup=None) <p>ResourceClaimConsumerReference contains enough information to let you locate the consumer of a ResourceClaim. The user must be a resource in the same namespace as the ResourceClaim.</p> <p>parameters</p> <ul> <li>name <code>str</code> - Name is the name of resource being referenced.</li> <li>resource <code>str</code> - Resource is the type of resource being referenced, for example \"pods\".</li> <li>uid <code>str</code> - UID identifies exactly one incarnation of the resource.</li> <li>apiGroup <code>Optional[str]</code> - APIGroup is the group for the resource being referenced. It is empty for the   core API. This matches the group in the APIVersion that is used when creating   the resources.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimlist","title":"ResourceClaimList","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ResourceClaimList is a collection of claims.</p> <p>parameters</p> <ul> <li>items <code>ResourceClaim</code> - Items is the list of resource claims.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimparametersreference","title":"ResourceClaimParametersReference","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimParametersReference</code>(kind, name, apiGroup=None) <p>ResourceClaimParametersReference contains enough information to let you locate the parameters for a ResourceClaim. The object must be in the same namespace as the ResourceClaim.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - Kind is the type of resource being referenced. This is the same value as in   the parameter object's metadata, for example \"ConfigMap\".</li> <li>name <code>str</code> - Name is the name of resource being referenced.</li> <li>apiGroup <code>Optional[str]</code> - APIGroup is the group for the resource being referenced. It is empty for the   core API. This matches the group in the APIVersion that is used when creating   the resources.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimschedulingstatus","title":"ResourceClaimSchedulingStatus","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimSchedulingStatus</code>(name=None, unsuitableNodes=None) <p>ResourceClaimSchedulingStatus contains information about one particular ResourceClaim with \"WaitForFirstConsumer\" allocation mode.</p> <p>parameters</p> <ul> <li>name <code>Optional[str]</code> - Name matches the pod.spec.resourceClaims[*].Name field.</li> <li>unsuitableNodes <code>Optional[List[str]]</code> - UnsuitableNodes lists nodes that the ResourceClaim cannot be allocated for.   The size of this field is limited to 128, the same as for   PodSchedulingSpec.PotentialNodes. This may get increased in the future, but   not reduced.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimspec","title":"ResourceClaimSpec","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimSpec</code>(resourceClassName, allocationMode=None, parametersRef=None) <p>ResourceClaimSpec defines how a resource is to be allocated.</p> <p>parameters</p> <ul> <li>resourceClassName <code>str</code> - ResourceClassName references the driver and additional parameters via the name   of a ResourceClass that was created as part of the driver deployment.</li> <li>allocationMode <code>Optional[str]</code> - Allocation can start immediately or when a Pod wants to use the resource.   \"WaitForFirstConsumer\" is the default.</li> <li>parametersRef <code>Optional[ResourceClaimParametersReference]</code> - ParametersRef references a separate object with arbitrary parameters that will   be used by the driver when allocating a resource for the claim.   The object must be in the same namespace as the ResourceClaim.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimstatus","title":"ResourceClaimStatus","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimStatus</code>(allocation=None, deallocationRequested=None, driverName=None, reservedFor=None) <p>ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are.</p> <p>parameters</p> <ul> <li>allocation <code>Optional[AllocationResult]</code> - Allocation is set by the resource driver once a resource or set of resources   has been allocated successfully. If this is not specified, the resources have   not been allocated yet.</li> <li>deallocationRequested <code>Optional[bool]</code> - DeallocationRequested indicates that a ResourceClaim is to be deallocated.   The driver then must deallocate this claim and reset the field together with   clearing the Allocation field.   While DeallocationRequested is set, no new consumers may be added to   ReservedFor.</li> <li>driverName <code>Optional[str]</code> - DriverName is a copy of the driver name from the ResourceClass at the time   when allocation started.</li> <li>reservedFor <code>Optional[List[ResourceClaimConsumerReference]]</code> - ReservedFor indicates which entities are currently allowed to use the claim. A   Pod which references a ResourceClaim which is not reserved for that Pod will   not be started.   There can be at most 32 such reservations. This may get increased in the   future, but not reduced.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimtemplate","title":"ResourceClaimTemplate","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimTemplate</code>(spec, apiVersion=None, kind=None, metadata=None) <p>ResourceClaimTemplate is used to produce ResourceClaim objects.</p> <p>parameters</p> <ul> <li>spec <code>ResourceClaimTemplateSpec</code> - Describes the ResourceClaim that is to be generated.   This field is immutable. A ResourceClaim will get created by the control plane   for a Pod when needed and then not get updated anymore.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimtemplatelist","title":"ResourceClaimTemplateList","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimTemplateList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ResourceClaimTemplateList is a collection of claim templates.</p> <p>parameters</p> <ul> <li>items <code>ResourceClaimTemplate</code> - Items is the list of resource claim templates.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclaimtemplatespec","title":"ResourceClaimTemplateSpec","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClaimTemplateSpec</code>(spec, metadata=None) <p>ResourceClaimTemplateSpec contains the metadata and fields for a ResourceClaim.</p> <p>parameters</p> <ul> <li>spec <code>ResourceClaimSpec</code> - Spec for the ResourceClaim. The entire content is copied unchanged into the   ResourceClaim that gets created from this template. The same fields as in a   ResourceClaim are also valid here.</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - ObjectMeta may contain labels and annotations that will be copied into the PVC   when creating it. No other fields are allowed and will be rejected during   validation.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclass","title":"ResourceClass","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClass</code>(driverName, apiVersion=None, kind=None, metadata=None, parametersRef=None, suitableNodes=None) <p>ResourceClass is used by administrators to influence how resources are allocated.</p> <p>This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.</p> <p>parameters</p> <ul> <li>driverName <code>str</code> - DriverName defines the name of the dynamic resource driver that is used for   allocation of a ResourceClaim that uses this class.   Resource drivers have a unique name in forward domain order   (acme.example.com).</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata</li> <li>parametersRef <code>Optional[ResourceClassParametersReference]</code> - ParametersRef references an arbitrary separate object that may hold parameters   that will be used by the driver when allocating a resource that uses this   class. A dynamic resource driver can distinguish between parameters stored   here and and those stored in ResourceClaimSpec.</li> <li>suitableNodes <code>Optional[core_v1.NodeSelector]</code> - Only nodes matching the selector will be considered by the scheduler when   trying to find a Node that fits a Pod when that Pod uses a ResourceClaim that   has not been allocated yet.   Setting this field is optional. If null, all nodes are candidates.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclasslist","title":"ResourceClassList","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>ResourceClassList is a collection of classes.</p> <p>parameters</p> <ul> <li>items <code>ResourceClass</code> - Items is the list of resource classes.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata</li> </ul>"},{"location":"models/resource_v1alpha2/#resourceclassparametersreference","title":"ResourceClassParametersReference","text":"class <code>lightkube.models.resource_v1alpha2.ResourceClassParametersReference</code>(kind, name, apiGroup=None, namespace=None) <p>ResourceClassParametersReference contains enough information to let you locate the parameters for a ResourceClass.</p> <p>parameters</p> <ul> <li>kind <code>str</code> - Kind is the type of resource being referenced. This is the same value as in   the parameter object's metadata.</li> <li>name <code>str</code> - Name is the name of resource being referenced.</li> <li>apiGroup <code>Optional[str]</code> - APIGroup is the group for the resource being referenced. It is empty for the   core API. This matches the group in the APIVersion that is used when creating   the resources.</li> <li>namespace <code>Optional[str]</code> - Namespace that contains the referenced resource. Must be empty for   cluster-scoped resources and non-empty for namespaced resources.</li> </ul>"},{"location":"models/resource_v1alpha2/#resourcehandle","title":"ResourceHandle","text":"class <code>lightkube.models.resource_v1alpha2.ResourceHandle</code>(data=None, driverName=None) <p>ResourceHandle holds opaque resource data for processing by a specific kubelet plugin.</p> <p>parameters</p> <ul> <li>data <code>Optional[str]</code> - Data contains the opaque data associated with this ResourceHandle. It is set   by the controller component of the resource driver whose name matches the   DriverName set in the ResourceClaimStatus this ResourceHandle is embedded in.   It is set at allocation time and is intended for processing by the kubelet   plugin whose name matches the DriverName set in this ResourceHandle.   The maximum size of this field is 16KiB. This may get increased in the future,   but not reduced.</li> <li>driverName <code>Optional[str]</code> - DriverName specifies the name of the resource driver whose kubelet plugin   should be invoked to process this ResourceHandle's data once it lands on a   node. This may differ from the DriverName set in ResourceClaimStatus this   ResourceHandle is embedded in.</li> </ul>"},{"location":"models/runtime/","title":"runtime","text":""},{"location":"models/runtime/#rawextension","title":"RawExtension","text":""},{"location":"models/scheduling_v1/","title":"scheduling_v1","text":""},{"location":"models/scheduling_v1/#priorityclass","title":"PriorityClass","text":"class <code>lightkube.models.scheduling_v1.PriorityClass</code>(value, apiVersion=None, description=None, globalDefault=None, kind=None, metadata=None, preemptionPolicy=None) <p>PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.</p> <p>parameters</p> <ul> <li>value <code>int</code> - value represents the integer value of this priority class. This is the actual   priority that pods receive when they have the name of this class in their pod   spec.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>description <code>Optional[str]</code> - description is an arbitrary string that usually provides guidelines on when   this priority class should be used.</li> <li>globalDefault <code>Optional[bool]</code> - globalDefault specifies whether this PriorityClass should be considered as the   default priority for pods that do not have any priority class. Only one   PriorityClass can be marked as <code>globalDefault</code>. However, if more than one   PriorityClasses exists with their <code>globalDefault</code> field set to true, the   smallest value of such global default PriorityClasses will be used as the   default priority.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>preemptionPolicy <code>Optional[str]</code> - preemptionPolicy is the Policy for preempting pods with lower priority. One of   Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.</li> </ul>"},{"location":"models/scheduling_v1/#priorityclasslist","title":"PriorityClassList","text":"class <code>lightkube.models.scheduling_v1.PriorityClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>PriorityClassList is a collection of priority classes.</p> <p>parameters</p> <ul> <li>items <code>PriorityClass</code> - items is the list of PriorityClasses</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/","title":"storage_v1","text":""},{"location":"models/storage_v1/#csidriver","title":"CSIDriver","text":"class <code>lightkube.models.storage_v1.CSIDriver</code>(spec, apiVersion=None, kind=None, metadata=None) <p>CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.</p> <p>parameters</p> <ul> <li>spec <code>CSIDriverSpec</code> - spec represents the specification of the CSI Driver.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata. metadata.Name indicates the name of the CSI driver   that this object refers to; it MUST be the same name returned by the CSI   GetPluginName() call for that driver. The driver name must be 63 characters or   less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with   dashes (-), dots (.), and alphanumerics between. More info</li> </ul>"},{"location":"models/storage_v1/#csidriverlist","title":"CSIDriverList","text":"class <code>lightkube.models.storage_v1.CSIDriverList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CSIDriverList is a collection of CSIDriver objects.</p> <p>parameters</p> <ul> <li>items <code>CSIDriver</code> - items is the list of CSIDriver</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/#csidriverspec","title":"CSIDriverSpec","text":"class <code>lightkube.models.storage_v1.CSIDriverSpec</code>(attachRequired=None, fsGroupPolicy=None, podInfoOnMount=None, requiresRepublish=None, seLinuxMount=None, storageCapacity=None, tokenRequests=None, volumeLifecycleModes=None) <p>CSIDriverSpec is the specification of a CSIDriver.</p> <p>parameters</p> <ul> <li>attachRequired <code>Optional[bool]</code> - attachRequired indicates this CSI volume driver requires an attach operation   (because it implements the CSI ControllerPublishVolume() method), and that the   Kubernetes attach detach controller should call the attach volume interface   which checks the volumeattachment status and waits until the volume is   attached before proceeding to mounting. The CSI external-attacher coordinates   with CSI volume driver and updates the volumeattachment status when the attach   operation is complete. If the CSIDriverRegistry feature gate is enabled and   the value is specified to false, the attach operation will be skipped.   Otherwise the attach operation will be called.   This field is immutable.</li> <li>fsGroupPolicy <code>Optional[str]</code> - fsGroupPolicy defines if the underlying volume supports changing ownership and   permission of the volume before being mounted. Refer to the specific   FSGroupPolicy values for additional details.   This field is immutable.   Defaults to ReadWriteOnceWithFSType, which will examine each volume to   determine if Kubernetes should modify ownership and permissions of the volume.   With the default policy the defined fsGroup will only be applied if a fstype   is defined and the volume's access mode contains ReadWriteOnce.</li> <li>podInfoOnMount <code>Optional[bool]</code> - podInfoOnMount indicates this CSI volume driver requires additional pod   information (like podName, podUID, etc.) during mount operations, if set to   true. If set to false, pod information will not be passed on mount. Default is   false.   The CSI driver specifies podInfoOnMount as part of driver deployment. If true,   Kubelet will pass pod information as VolumeContext in the CSI   NodePublishVolume() calls. The CSI driver is responsible for parsing and   validating the information passed in as VolumeContext.   The following VolumeContext will be passed if podInfoOnMount is set to true.   This list might grow, but the prefix will be used.   \"csi.storage.k8s.io/pod.name\": pod.Name \"csi.storage.k8s.io/pod.namespace\":   pod.Namespace \"csi.storage.k8s.io/pod.uid\": string(pod.UID)   \"csi.storage.k8s.io/ephemeral\": \"true\" if the volume is an ephemeral inline   volume                                   defined by a CSIVolumeSource, otherwise   \"false\"   \"csi.storage.k8s.io/ephemeral\" is a new feature in Kubernetes 1.16. It is only   required for drivers which support both the \"Persistent\" and \"Ephemeral\"   VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore   this field. As Kubernetes 1.15 doesn't support this field, drivers can only   support one mode when deployed on such a cluster and the deployment determines   which mode that is, for example via a command line parameter of the driver.   This field is immutable.</li> <li>requiresRepublish <code>Optional[bool]</code> - requiresRepublish indicates the CSI driver wants <code>NodePublishVolume</code> being   periodically called to reflect any possible change in the mounted volume. This   field defaults to false.   Note: After a successful initial NodePublishVolume call, subsequent calls to   NodePublishVolume should only update the contents of the volume. New mount   points will not be seen by a running container.</li> <li>seLinuxMount <code>Optional[bool]</code> - seLinuxMount specifies if the CSI driver supports \"-o context\" mount option.   When \"true\", the CSI driver must ensure that all volumes provided by this CSI   driver can be mounted separately with different <code>-o context</code> options. This is   typical for storage backends that provide volumes as filesystems on block   devices or as independent shared volumes. Kubernetes will call NodeStage /   NodePublish with \"-o context=xyz\" mount option when mounting a   ReadWriteOncePod volume used in Pod that has explicitly set SELinux context.   In the future, it may be expanded to other volume AccessModes. In any case,   Kubernetes will ensure that the volume is mounted only with a single SELinux   context.   When \"false\", Kubernetes won't pass any special SELinux mount options to the   driver. This is typical for volumes that represent subdirectories of a bigger   shared filesystem.   Default is \"false\".</li> <li>storageCapacity <code>Optional[bool]</code> - storageCapacity indicates that the CSI volume driver wants pod scheduling to   consider the storage capacity that the driver deployment will report by   creating CSIStorageCapacity objects with capacity information, if set to true.   The check can be enabled immediately when deploying a driver. In that case,   provisioning new volumes with late binding will pause until the driver   deployment has published some suitable CSIStorageCapacity object.   Alternatively, the driver can be deployed with the field unset or false and it   can be flipped later when storage capacity information has been published.   This field was immutable in Kubernetes &lt;= 1.22 and now is mutable.</li> <li>tokenRequests <code>Optional[List[TokenRequest]]</code> - tokenRequests indicates the CSI driver needs pods' service account tokens it   is mounting volume for to do necessary authentication. Kubelet will pass the   tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver   should parse and validate the following VolumeContext:   \"csi.storage.k8s.io/serviceAccount.tokens\": {     \"\": {       \"token\": ,       \"expirationTimestamp\": ,     },     ...   }   Note: Audience in each TokenRequest should be different and at most one token   is empty string. To receive a new token after expiry, RequiresRepublish can be   used to trigger NodePublishVolume periodically. <li>volumeLifecycleModes <code>Optional[List[str]]</code> - volumeLifecycleModes defines what kind of volumes this CSI volume driver   supports. The default if the list is empty is \"Persistent\", which is the usage   defined by the CSI specification and implemented in Kubernetes via the usual   PV/PVC mechanism.   The other mode is \"Ephemeral\". In this mode, volumes are defined inline inside   the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle   of that pod. A driver has to be aware of this because it is only going to get   a NodePublishVolume call for such a volume.   For more information about implementing this mode, see   https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver   can support one or more of these modes and more modes may be added in the   future.   This field is beta. This field is immutable.</li>"},{"location":"models/storage_v1/#csinode","title":"CSINode","text":"class <code>lightkube.models.storage_v1.CSINode</code>(spec, apiVersion=None, kind=None, metadata=None) <p>CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.</p> <p>parameters</p> <ul> <li>spec <code>CSINodeSpec</code> - spec is the specification of CSINode</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. metadata.name must be the Kubernetes node name.</li> </ul>"},{"location":"models/storage_v1/#csinodedriver","title":"CSINodeDriver","text":"class <code>lightkube.models.storage_v1.CSINodeDriver</code>(name, nodeID, allocatable=None, topologyKeys=None) <p>CSINodeDriver holds information about the specification of one CSI driver installed on a node</p> <p>parameters</p> <ul> <li>name <code>str</code> - name represents the name of the CSI driver that this object refers to. This   MUST be the same name returned by the CSI GetPluginName() call for that   driver.</li> <li>nodeID <code>str</code> - nodeID of the node from the driver point of view. This field enables   Kubernetes to communicate with storage systems that do not share the same   nomenclature for nodes. For example, Kubernetes may refer to a given node as   \"node1\", but the storage system may refer to the same node as \"nodeA\". When   Kubernetes issues a command to the storage system to attach a volume to a   specific node, it can use this field to refer to the node name using the ID   that the storage system will understand, e.g. \"nodeA\" instead of \"node1\". This   field is required.</li> <li>allocatable <code>Optional[VolumeNodeResources]</code> - allocatable represents the volume resources of a node that are available for   scheduling. This field is beta.</li> <li>topologyKeys <code>Optional[List[str]]</code> - topologyKeys is the list of keys supported by the driver. When a driver is   initialized on a cluster, it provides a set of topology keys that it   understands (e.g. \"company.com/zone\", \"company.com/region\"). When a driver is   initialized on a node, it provides the same topology keys along with values.   Kubelet will expose these topology keys as labels on its own node object. When   Kubernetes does topology aware provisioning, it can use this list to determine   which labels it should retrieve from the node object and pass back to the   driver. It is possible for different nodes to use different topology keys.   This can be empty if driver does not support topology.</li> </ul>"},{"location":"models/storage_v1/#csinodelist","title":"CSINodeList","text":"class <code>lightkube.models.storage_v1.CSINodeList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CSINodeList is a collection of CSINode objects.</p> <p>parameters</p> <ul> <li>items <code>CSINode</code> - items is the list of CSINode</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/#csinodespec","title":"CSINodeSpec","text":"class <code>lightkube.models.storage_v1.CSINodeSpec</code>(drivers) <p>CSINodeSpec holds information about the specification of all CSI drivers installed on a node</p> <p>parameters</p> <ul> <li>drivers <code>CSINodeDriver</code> - drivers is a list of information of all CSI Drivers existing on a node. If all   drivers in the list are uninstalled, this can become empty.</li> </ul>"},{"location":"models/storage_v1/#csistoragecapacity","title":"CSIStorageCapacity","text":"class <code>lightkube.models.storage_v1.CSIStorageCapacity</code>(storageClassName, apiVersion=None, capacity=None, kind=None, maximumVolumeSize=None, metadata=None, nodeTopology=None) <p>CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.</p> <p>For example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"</p> <p>The following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero</p> <p>The producer of these objects can decide which approach is more suitable.</p> <p>They are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.</p> <p>parameters</p> <ul> <li>storageClassName <code>str</code> - storageClassName represents the name of the StorageClass that the reported   capacity applies to. It must meet the same requirements as the name of a   StorageClass object (non-empty, DNS subdomain). If that object no longer   exists, the CSIStorageCapacity object is obsolete and should be removed by its   creator. This field is immutable.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>capacity <code>Optional[resource.Quantity]</code> - capacity is the value reported by the CSI driver in its GetCapacityResponse   for a GetCapacityRequest with topology and parameters that match the previous   fields.   The semantic is currently (CSI spec 1.2) defined as: The available capacity,   in bytes, of the storage that can be used to provision volumes. If not set,   that information is currently unavailable.</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>maximumVolumeSize <code>Optional[resource.Quantity]</code> - maximumVolumeSize is the value reported by the CSI driver in its   GetCapacityResponse for a GetCapacityRequest with topology and parameters that   match the previous fields.   This is defined since CSI spec 1.4.0 as the largest size that may be used in a   CreateVolumeRequest.capacity_range.required_bytes field to create a volume   with the same parameters as those in GetCapacityRequest. The corresponding   value in the Kubernetes API is ResourceRequirements.Requests in a volume   claim.</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. The name has no particular meaning. It must be a   DNS subdomain (dots allowed, 253 characters). To ensure that there are no   conflicts with other CSI drivers on the cluster, the recommendation is to use   csisc-, a generated name, or a reverse-domain name which ends with the   unique CSI driver name.   Objects are namespaced.   More info <li>nodeTopology <code>Optional[meta_v1.LabelSelector]</code> - nodeTopology defines which nodes have access to the storage for which capacity   was reported. If not set, the storage is not accessible from any node in the   cluster. If empty, the storage is accessible from all nodes. This field is   immutable.</li>"},{"location":"models/storage_v1/#csistoragecapacitylist","title":"CSIStorageCapacityList","text":"class <code>lightkube.models.storage_v1.CSIStorageCapacityList</code>(items, apiVersion=None, kind=None, metadata=None) <p>CSIStorageCapacityList is a collection of CSIStorageCapacity objects.</p> <p>parameters</p> <ul> <li>items <code>CSIStorageCapacity</code> - items is the list of CSIStorageCapacity objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/#storageclass","title":"StorageClass","text":"class <code>lightkube.models.storage_v1.StorageClass</code>(provisioner, allowVolumeExpansion=None, allowedTopologies=None, apiVersion=None, kind=None, metadata=None, mountOptions=None, parameters=None, reclaimPolicy=None, volumeBindingMode=None) <p>StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.</p> <p>StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.</p> <p>parameters</p> <ul> <li>provisioner <code>str</code> - provisioner indicates the type of the provisioner.</li> <li>allowVolumeExpansion <code>Optional[bool]</code> - allowVolumeExpansion shows whether the storage class allow volume expand.</li> <li>allowedTopologies <code>Optional[List[core_v1.TopologySelectorTerm]]</code> - allowedTopologies restrict the node topologies where volumes can be   dynamically provisioned. Each volume plugin defines its own supported topology   specifications. An empty TopologySelectorTerm list means there is no topology   restriction. This field is only honored by servers that enable the   VolumeScheduling feature.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>mountOptions <code>Optional[List[str]]</code> - mountOptions controls the mountOptions for dynamically provisioned   PersistentVolumes of this storage class. e.g. [\"ro\", \"soft\"]. Not validated -   mount of the PVs will simply fail if one is invalid.</li> <li>parameters <code>Optional[dict]</code> - parameters holds the parameters for the provisioner that should create volumes   of this storage class.</li> <li>reclaimPolicy <code>Optional[str]</code> - reclaimPolicy controls the reclaimPolicy for dynamically provisioned   PersistentVolumes of this storage class. Defaults to Delete.</li> <li>volumeBindingMode <code>Optional[str]</code> - volumeBindingMode indicates how PersistentVolumeClaims should be provisioned   and bound.  When unset, VolumeBindingImmediate is used. This field is only   honored by servers that enable the VolumeScheduling feature.</li> </ul>"},{"location":"models/storage_v1/#storageclasslist","title":"StorageClassList","text":"class <code>lightkube.models.storage_v1.StorageClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>StorageClassList is a collection of storage classes.</p> <p>parameters</p> <ul> <li>items <code>StorageClass</code> - items is the list of StorageClasses</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/#tokenrequest","title":"TokenRequest","text":"class <code>lightkube.models.storage_v1.TokenRequest</code>(audience, expirationSeconds=None) <p>TokenRequest contains parameters of a service account token.</p> <p>parameters</p> <ul> <li>audience <code>str</code> - audience is the intended audience of the token in \"TokenRequestSpec\". It will   default to the audiences of kube apiserver.</li> <li>expirationSeconds <code>Optional[int]</code> - expirationSeconds is the duration of validity of the token in   \"TokenRequestSpec\". It has the same default value of \"ExpirationSeconds\" in   \"TokenRequestSpec\".</li> </ul>"},{"location":"models/storage_v1/#volumeattachment","title":"VolumeAttachment","text":"class <code>lightkube.models.storage_v1.VolumeAttachment</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <p>VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.</p> <p>VolumeAttachment objects are non-namespaced.</p> <p>parameters</p> <ul> <li>spec <code>VolumeAttachmentSpec</code> - spec represents specification of the desired attach/detach volume behavior.   Populated by the Kubernetes system.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object metadata. More info</li> <li>status <code>Optional[VolumeAttachmentStatus]</code> - status represents status of the VolumeAttachment request. Populated by the   entity completing the attach or detach operation, i.e. the external-attacher.</li> </ul>"},{"location":"models/storage_v1/#volumeattachmentlist","title":"VolumeAttachmentList","text":"class <code>lightkube.models.storage_v1.VolumeAttachmentList</code>(items, apiVersion=None, kind=None, metadata=None) <p>VolumeAttachmentList is a collection of VolumeAttachment objects.</p> <p>parameters</p> <ul> <li>items <code>VolumeAttachment</code> - items is the list of VolumeAttachments</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/storage_v1/#volumeattachmentsource","title":"VolumeAttachmentSource","text":"class <code>lightkube.models.storage_v1.VolumeAttachmentSource</code>(inlineVolumeSpec=None, persistentVolumeName=None) <p>VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.</p> <p>parameters</p> <ul> <li>inlineVolumeSpec <code>Optional[core_v1.PersistentVolumeSpec]</code> - inlineVolumeSpec contains all the information necessary to attach a persistent   volume defined by a pod's inline VolumeSource. This field is populated only   for the CSIMigration feature. It contains translated fields from a pod's   inline VolumeSource to a PersistentVolumeSpec. This field is beta-level and is   only honored by servers that enabled the CSIMigration feature.</li> <li>persistentVolumeName <code>Optional[str]</code> - persistentVolumeName represents the name of the persistent volume to attach.</li> </ul>"},{"location":"models/storage_v1/#volumeattachmentspec","title":"VolumeAttachmentSpec","text":"class <code>lightkube.models.storage_v1.VolumeAttachmentSpec</code>(attacher, nodeName, source) <p>VolumeAttachmentSpec is the specification of a VolumeAttachment request.</p> <p>parameters</p> <ul> <li>attacher <code>str</code> - attacher indicates the name of the volume driver that MUST handle this   request. This is the name returned by GetPluginName().</li> <li>nodeName <code>str</code> - nodeName represents the node that the volume should be attached to.</li> <li>source <code>VolumeAttachmentSource</code> - source represents the volume that should be attached.</li> </ul>"},{"location":"models/storage_v1/#volumeattachmentstatus","title":"VolumeAttachmentStatus","text":"class <code>lightkube.models.storage_v1.VolumeAttachmentStatus</code>(attached, attachError=None, attachmentMetadata=None, detachError=None) <p>VolumeAttachmentStatus is the status of a VolumeAttachment request.</p> <p>parameters</p> <ul> <li>attached <code>bool</code> - attached indicates the volume is successfully attached. This field must only   be set by the entity completing the attach operation, i.e. the   external-attacher.</li> <li>attachError <code>Optional[VolumeError]</code> - attachError represents the last error encountered during attach operation, if   any. This field must only be set by the entity completing the attach   operation, i.e. the external-attacher.</li> <li>attachmentMetadata <code>Optional[dict]</code> - attachmentMetadata is populated with any information returned by the attach   operation, upon successful attach, that must be passed into subsequent   WaitForAttach or Mount calls. This field must only be set by the entity   completing the attach operation, i.e. the external-attacher.</li> <li>detachError <code>Optional[VolumeError]</code> - detachError represents the last error encountered during detach operation, if   any. This field must only be set by the entity completing the detach   operation, i.e. the external-attacher.</li> </ul>"},{"location":"models/storage_v1/#volumeerror","title":"VolumeError","text":"class <code>lightkube.models.storage_v1.VolumeError</code>(message=None, time=None) <p>VolumeError captures an error encountered during a volume operation.</p> <p>parameters</p> <ul> <li>message <code>Optional[str]</code> - message represents the error encountered during Attach or Detach operation.   This string may be logged, so it should not contain sensitive information.</li> <li>time <code>Optional[meta_v1.Time]</code> - time represents the time the error was encountered.</li> </ul>"},{"location":"models/storage_v1/#volumenoderesources","title":"VolumeNodeResources","text":"class <code>lightkube.models.storage_v1.VolumeNodeResources</code>(count=None) <p>VolumeNodeResources is a set of resource limits for scheduling of volumes.</p> <p>parameters</p> <ul> <li>count <code>Optional[int]</code> - count indicates the maximum number of unique volumes managed by the CSI driver   that can be used on a node. A volume that is both attached and mounted on a   node is considered to be used once, not twice. The same rule applies for a   unique volume that is shared among multiple pods on the same node. If this   field is not specified, then the supported number of volumes on this node is   unbounded.</li> </ul>"},{"location":"models/storage_v1alpha1/","title":"storage_v1alpha1","text":""},{"location":"models/storage_v1alpha1/#volumeattributesclass","title":"VolumeAttributesClass","text":"class <code>lightkube.models.storage_v1alpha1.VolumeAttributesClass</code>(driverName, apiVersion=None, kind=None, metadata=None, parameters=None) <p>VolumeAttributesClass represents a specification of mutable volume attributes defined by the CSI driver. The class can be specified during dynamic provisioning of PersistentVolumeClaims, and changed in the PersistentVolumeClaim spec after provisioning.</p> <p>parameters</p> <ul> <li>driverName <code>str</code> - Name of the CSI driver This field is immutable.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ObjectMeta]</code> - Standard object's metadata. More info</li> <li>parameters <code>Optional[dict]</code> - parameters hold volume attributes defined by the CSI driver. These values are   opaque to the Kubernetes and are passed directly to the CSI driver. The   underlying storage provider supports changing these attributes on an existing   volume, however the parameters field itself is immutable. To invoke a volume   update, a new VolumeAttributesClass should be created with new parameters, and   the PersistentVolumeClaim should be updated to reference the new   VolumeAttributesClass.   This field is required and must contain at least one key/value pair. The keys   cannot be empty, and the maximum number of parameters is 512, with a   cumulative max size of 256K. If the CSI driver rejects invalid parameters, the   target PersistentVolumeClaim will be set to an \"Infeasible\" state in the   modifyVolumeStatus field.</li> </ul>"},{"location":"models/storage_v1alpha1/#volumeattributesclasslist","title":"VolumeAttributesClassList","text":"class <code>lightkube.models.storage_v1alpha1.VolumeAttributesClassList</code>(items, apiVersion=None, kind=None, metadata=None) <p>VolumeAttributesClassList is a collection of VolumeAttributesClass objects.</p> <p>parameters</p> <ul> <li>items <code>VolumeAttributesClass</code> - items is the list of VolumeAttributesClass objects.</li> <li>apiVersion <code>Optional[str]</code> - APIVersion defines the versioned schema of this representation of an object.   Servers should convert recognized schemas to the latest internal value, and   may reject unrecognized values. More info</li> <li>kind <code>Optional[str]</code> - Kind is a string value representing the REST resource this object represents.   Servers may infer this from the endpoint the client submits requests to.   Cannot be updated. In CamelCase. More info</li> <li>metadata <code>Optional[meta_v1.ListMeta]</code> - Standard list metadata More info</li> </ul>"},{"location":"models/util_intstr/","title":"util_intstr","text":""},{"location":"models/util_intstr/#intorstring","title":"IntOrString","text":""},{"location":"models/version/","title":"version","text":""},{"location":"models/version/#info","title":"Info","text":"class <code>lightkube.models.version.Info</code>(buildDate, compiler, gitCommit, gitTreeState, gitVersion, goVersion, major, minor, platform) <p>Info contains versioning information. how we'll want to distribute that information.</p> <p>parameters</p> <ul> <li>buildDate <code>str</code> -</li> <li>compiler <code>str</code> -</li> <li>gitCommit <code>str</code> -</li> <li>gitTreeState <code>str</code> -</li> <li>gitVersion <code>str</code> -</li> <li>goVersion <code>str</code> -</li> <li>major <code>str</code> -</li> <li>minor <code>str</code> -</li> <li>platform <code>str</code> -</li> </ul>"},{"location":"resources/","title":"All resources","text":"Resource name Available versions APIService apiregistration_v1 Binding core_v1 CSIDriver storage_v1 CSINode storage_v1 CSIStorageCapacity storage_v1 CertificateSigningRequest certificates_v1 ClusterRole rbac_authorization_v1 ClusterRoleBinding rbac_authorization_v1 ClusterTrustBundle certificates_v1alpha1 ComponentStatus core_v1 ConfigMap core_v1 ControllerRevision apps_v1 CronJob batch_v1 CustomResourceDefinition apiextensions_v1 DaemonSet apps_v1 Deployment apps_v1 EndpointSlice discovery_v1 Endpoints core_v1 Event core_v1, events_v1 FlowSchema flowcontrol_apiserver_v1, flowcontrol_apiserver_v1beta3 HorizontalPodAutoscaler autoscaling_v2, autoscaling_v1 IPAddress networking_v1alpha1 Ingress networking_v1 IngressClass networking_v1 Job batch_v1 Lease coordination_v1 LimitRange core_v1 LocalSubjectAccessReview authorization_v1 MutatingWebhookConfiguration admissionregistration_v1 Namespace core_v1 NetworkPolicy networking_v1 Node core_v1 PersistentVolume core_v1 PersistentVolumeClaim core_v1 Pod core_v1 PodDisruptionBudget policy_v1 PodSchedulingContext resource_v1alpha2 PodTemplate core_v1 PriorityClass scheduling_v1 PriorityLevelConfiguration flowcontrol_apiserver_v1, flowcontrol_apiserver_v1beta3 ReplicaSet apps_v1 ReplicationController core_v1 ResourceClaim resource_v1alpha2 ResourceClaimTemplate resource_v1alpha2 ResourceClass resource_v1alpha2 ResourceQuota core_v1 Role rbac_authorization_v1 RoleBinding rbac_authorization_v1 RuntimeClass node_v1 Secret core_v1 SelfSubjectAccessReview authorization_v1 SelfSubjectReview authentication_v1, authentication_v1beta1, authentication_v1alpha1 SelfSubjectRulesReview authorization_v1 Service core_v1 ServiceAccount core_v1 ServiceCIDR networking_v1alpha1 StatefulSet apps_v1 StorageClass storage_v1 StorageVersion internal_apiserver_v1alpha1 SubjectAccessReview authorization_v1 TokenReview authentication_v1 ValidatingAdmissionPolicy admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingAdmissionPolicyBinding admissionregistration_v1beta1, admissionregistration_v1alpha1 ValidatingWebhookConfiguration admissionregistration_v1 VolumeAttachment storage_v1 VolumeAttributesClass storage_v1alpha1"},{"location":"resources/admissionregistration_v1/","title":"admissionregistration_v1","text":""},{"location":"resources/admissionregistration_v1/#mutatingwebhookconfiguration","title":"MutatingWebhookConfiguration","text":"class <code>lightkube.resources.admissionregistration_v1.MutatingWebhookConfiguration</code>(apiVersion=None, kind=None, metadata=None, webhooks=None) <ul> <li>Extends: <code>models.admissionregistration_v1.MutatingWebhookConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/admissionregistration_v1/#validatingwebhookconfiguration","title":"ValidatingWebhookConfiguration","text":"class <code>lightkube.resources.admissionregistration_v1.ValidatingWebhookConfiguration</code>(apiVersion=None, kind=None, metadata=None, webhooks=None) <ul> <li>Extends: <code>models.admissionregistration_v1.ValidatingWebhookConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/admissionregistration_v1alpha1/","title":"admissionregistration_v1alpha1","text":""},{"location":"resources/admissionregistration_v1alpha1/#validatingadmissionpolicystatus","title":"ValidatingAdmissionPolicyStatus","text":"class <code>lightkube.resources.admissionregistration_v1alpha1.ValidatingAdmissionPolicyStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.admissionregistration_v1alpha1.ValidatingAdmissionPolicy</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/admissionregistration_v1alpha1/#validatingadmissionpolicy","title":"ValidatingAdmissionPolicy","text":"class <code>lightkube.resources.admissionregistration_v1alpha1.ValidatingAdmissionPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.admissionregistration_v1alpha1.ValidatingAdmissionPolicy</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ValidatingAdmissionPolicyStatus</code></li> </ul>"},{"location":"resources/admissionregistration_v1alpha1/#validatingadmissionpolicybinding","title":"ValidatingAdmissionPolicyBinding","text":"class <code>lightkube.resources.admissionregistration_v1alpha1.ValidatingAdmissionPolicyBinding</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.admissionregistration_v1alpha1.ValidatingAdmissionPolicyBinding</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/admissionregistration_v1beta1/","title":"admissionregistration_v1beta1","text":""},{"location":"resources/admissionregistration_v1beta1/#validatingadmissionpolicystatus","title":"ValidatingAdmissionPolicyStatus","text":"class <code>lightkube.resources.admissionregistration_v1beta1.ValidatingAdmissionPolicyStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.admissionregistration_v1beta1.ValidatingAdmissionPolicy</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/admissionregistration_v1beta1/#validatingadmissionpolicy","title":"ValidatingAdmissionPolicy","text":"class <code>lightkube.resources.admissionregistration_v1beta1.ValidatingAdmissionPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.admissionregistration_v1beta1.ValidatingAdmissionPolicy</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ValidatingAdmissionPolicyStatus</code></li> </ul>"},{"location":"resources/admissionregistration_v1beta1/#validatingadmissionpolicybinding","title":"ValidatingAdmissionPolicyBinding","text":"class <code>lightkube.resources.admissionregistration_v1beta1.ValidatingAdmissionPolicyBinding</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.admissionregistration_v1beta1.ValidatingAdmissionPolicyBinding</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/apiextensions_v1/","title":"apiextensions_v1","text":""},{"location":"resources/apiextensions_v1/#customresourcedefinitionstatus","title":"CustomResourceDefinitionStatus","text":"class <code>lightkube.resources.apiextensions_v1.CustomResourceDefinitionStatus</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.apiextensions_v1.CustomResourceDefinition</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apiextensions_v1/#customresourcedefinition","title":"CustomResourceDefinition","text":"class <code>lightkube.resources.apiextensions_v1.CustomResourceDefinition</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.apiextensions_v1.CustomResourceDefinition</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>CustomResourceDefinitionStatus</code></li> </ul>"},{"location":"resources/apiregistration_v1/","title":"apiregistration_v1","text":""},{"location":"resources/apiregistration_v1/#apiservicestatus","title":"APIServiceStatus","text":"class <code>lightkube.resources.apiregistration_v1.APIServiceStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apiregistration_v1.APIService</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apiregistration_v1/#apiservice","title":"APIService","text":"class <code>lightkube.resources.apiregistration_v1.APIService</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apiregistration_v1.APIService</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>APIServiceStatus</code></li> </ul>"},{"location":"resources/apps_v1/","title":"apps_v1","text":""},{"location":"resources/apps_v1/#controllerrevision","title":"ControllerRevision","text":"class <code>lightkube.resources.apps_v1.ControllerRevision</code>(revision, apiVersion=None, data=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.apps_v1.ControllerRevision</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/apps_v1/#daemonsetstatus","title":"DaemonSetStatus","text":"class <code>lightkube.resources.apps_v1.DaemonSetStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.DaemonSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#daemonset","title":"DaemonSet","text":"class <code>lightkube.resources.apps_v1.DaemonSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.DaemonSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>DaemonSetStatus</code></li> </ul>"},{"location":"resources/apps_v1/#deploymentscale","title":"DeploymentScale","text":"class <code>lightkube.resources.apps_v1.DeploymentScale</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.Scale</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#deploymentstatus","title":"DeploymentStatus","text":"class <code>lightkube.resources.apps_v1.DeploymentStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.Deployment</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#deployment","title":"Deployment","text":"class <code>lightkube.resources.apps_v1.Deployment</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.Deployment</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Scale: <code>DeploymentScale</code></li> <li>Status: <code>DeploymentStatus</code></li> </ul>"},{"location":"resources/apps_v1/#replicasetscale","title":"ReplicaSetScale","text":"class <code>lightkube.resources.apps_v1.ReplicaSetScale</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.Scale</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#replicasetstatus","title":"ReplicaSetStatus","text":"class <code>lightkube.resources.apps_v1.ReplicaSetStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.ReplicaSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#replicaset","title":"ReplicaSet","text":"class <code>lightkube.resources.apps_v1.ReplicaSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.ReplicaSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Scale: <code>ReplicaSetScale</code></li> <li>Status: <code>ReplicaSetStatus</code></li> </ul>"},{"location":"resources/apps_v1/#statefulsetscale","title":"StatefulSetScale","text":"class <code>lightkube.resources.apps_v1.StatefulSetScale</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.Scale</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#statefulsetstatus","title":"StatefulSetStatus","text":"class <code>lightkube.resources.apps_v1.StatefulSetStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.StatefulSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/apps_v1/#statefulset","title":"StatefulSet","text":"class <code>lightkube.resources.apps_v1.StatefulSet</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.apps_v1.StatefulSet</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Scale: <code>StatefulSetScale</code></li> <li>Status: <code>StatefulSetStatus</code></li> </ul>"},{"location":"resources/authentication_v1/","title":"authentication_v1","text":""},{"location":"resources/authentication_v1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.resources.authentication_v1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authentication_v1.SelfSubjectReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authentication_v1/#tokenreview","title":"TokenReview","text":"class <code>lightkube.resources.authentication_v1.TokenReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authentication_v1.TokenReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authentication_v1alpha1/","title":"authentication_v1alpha1","text":""},{"location":"resources/authentication_v1alpha1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.resources.authentication_v1alpha1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authentication_v1alpha1.SelfSubjectReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authentication_v1beta1/","title":"authentication_v1beta1","text":""},{"location":"resources/authentication_v1beta1/#selfsubjectreview","title":"SelfSubjectReview","text":"class <code>lightkube.resources.authentication_v1beta1.SelfSubjectReview</code>(apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authentication_v1beta1.SelfSubjectReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authorization_v1/","title":"authorization_v1","text":""},{"location":"resources/authorization_v1/#localsubjectaccessreview","title":"LocalSubjectAccessReview","text":"class <code>lightkube.resources.authorization_v1.LocalSubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authorization_v1.LocalSubjectAccessReview</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authorization_v1/#selfsubjectaccessreview","title":"SelfSubjectAccessReview","text":"class <code>lightkube.resources.authorization_v1.SelfSubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authorization_v1.SelfSubjectAccessReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authorization_v1/#selfsubjectrulesreview","title":"SelfSubjectRulesReview","text":"class <code>lightkube.resources.authorization_v1.SelfSubjectRulesReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authorization_v1.SelfSubjectRulesReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/authorization_v1/#subjectaccessreview","title":"SubjectAccessReview","text":"class <code>lightkube.resources.authorization_v1.SubjectAccessReview</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authorization_v1.SubjectAccessReview</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/autoscaling_v1/","title":"autoscaling_v1","text":""},{"location":"resources/autoscaling_v1/#horizontalpodautoscalerstatus","title":"HorizontalPodAutoscalerStatus","text":"class <code>lightkube.resources.autoscaling_v1.HorizontalPodAutoscalerStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.HorizontalPodAutoscaler</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/autoscaling_v1/#horizontalpodautoscaler","title":"HorizontalPodAutoscaler","text":"class <code>lightkube.resources.autoscaling_v1.HorizontalPodAutoscaler</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.HorizontalPodAutoscaler</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>HorizontalPodAutoscalerStatus</code></li> </ul>"},{"location":"resources/autoscaling_v2/","title":"autoscaling_v2","text":""},{"location":"resources/autoscaling_v2/#horizontalpodautoscalerstatus","title":"HorizontalPodAutoscalerStatus","text":"class <code>lightkube.resources.autoscaling_v2.HorizontalPodAutoscalerStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v2.HorizontalPodAutoscaler</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/autoscaling_v2/#horizontalpodautoscaler","title":"HorizontalPodAutoscaler","text":"class <code>lightkube.resources.autoscaling_v2.HorizontalPodAutoscaler</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v2.HorizontalPodAutoscaler</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>HorizontalPodAutoscalerStatus</code></li> </ul>"},{"location":"resources/batch_v1/","title":"batch_v1","text":""},{"location":"resources/batch_v1/#cronjobstatus","title":"CronJobStatus","text":"class <code>lightkube.resources.batch_v1.CronJobStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.batch_v1.CronJob</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/batch_v1/#cronjob","title":"CronJob","text":"class <code>lightkube.resources.batch_v1.CronJob</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.batch_v1.CronJob</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>CronJobStatus</code></li> </ul>"},{"location":"resources/batch_v1/#jobstatus","title":"JobStatus","text":"class <code>lightkube.resources.batch_v1.JobStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.batch_v1.Job</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/batch_v1/#job","title":"Job","text":"class <code>lightkube.resources.batch_v1.Job</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.batch_v1.Job</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>JobStatus</code></li> </ul>"},{"location":"resources/certificates_v1/","title":"certificates_v1","text":""},{"location":"resources/certificates_v1/#certificatesigningrequestapproval","title":"CertificateSigningRequestApproval","text":"class <code>lightkube.resources.certificates_v1.CertificateSigningRequestApproval</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.certificates_v1.CertificateSigningRequest</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/certificates_v1/#certificatesigningrequeststatus","title":"CertificateSigningRequestStatus","text":"class <code>lightkube.resources.certificates_v1.CertificateSigningRequestStatus</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.certificates_v1.CertificateSigningRequest</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/certificates_v1/#certificatesigningrequest","title":"CertificateSigningRequest","text":"class <code>lightkube.resources.certificates_v1.CertificateSigningRequest</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.certificates_v1.CertificateSigningRequest</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Approval: <code>CertificateSigningRequestApproval</code></li> <li>Status: <code>CertificateSigningRequestStatus</code></li> </ul>"},{"location":"resources/certificates_v1alpha1/","title":"certificates_v1alpha1","text":""},{"location":"resources/certificates_v1alpha1/#clustertrustbundle","title":"ClusterTrustBundle","text":"class <code>lightkube.resources.certificates_v1alpha1.ClusterTrustBundle</code>(spec, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.certificates_v1alpha1.ClusterTrustBundle</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/coordination_v1/","title":"coordination_v1","text":""},{"location":"resources/coordination_v1/#lease","title":"Lease","text":"class <code>lightkube.resources.coordination_v1.Lease</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.coordination_v1.Lease</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/","title":"core_v1","text":""},{"location":"resources/core_v1/#componentstatus","title":"ComponentStatus","text":"class <code>lightkube.resources.core_v1.ComponentStatus</code>(apiVersion=None, conditions=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.core_v1.ComponentStatus</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>list</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#configmap","title":"ConfigMap","text":"class <code>lightkube.resources.core_v1.ConfigMap</code>(apiVersion=None, binaryData=None, data=None, immutable=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.core_v1.ConfigMap</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#endpoints","title":"Endpoints","text":"class <code>lightkube.resources.core_v1.Endpoints</code>(apiVersion=None, kind=None, metadata=None, subsets=None) <ul> <li>Extends: <code>models.core_v1.Endpoints</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#event","title":"Event","text":"class <code>lightkube.resources.core_v1.Event</code>(involvedObject, metadata, action=None, apiVersion=None, count=None, eventTime=None, firstTimestamp=None, kind=None, lastTimestamp=None, message=None, reason=None, related=None, reportingComponent=None, reportingInstance=None, series=None, source=None, type=None) <ul> <li>Extends: <code>models.core_v1.Event</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#limitrange","title":"LimitRange","text":"class <code>lightkube.resources.core_v1.LimitRange</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.core_v1.LimitRange</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#namespacefinalize","title":"NamespaceFinalize","text":"class <code>lightkube.resources.core_v1.NamespaceFinalize</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Namespace</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#namespacestatus","title":"NamespaceStatus","text":"class <code>lightkube.resources.core_v1.NamespaceStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Namespace</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#namespace","title":"Namespace","text":"class <code>lightkube.resources.core_v1.Namespace</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Namespace</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Finalize: <code>NamespaceFinalize</code></li> <li>Status: <code>NamespaceStatus</code></li> </ul>"},{"location":"resources/core_v1/#binding","title":"Binding","text":"class <code>lightkube.resources.core_v1.Binding</code>(target, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.core_v1.Binding</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/core_v1/#persistentvolumeclaimstatus","title":"PersistentVolumeClaimStatus","text":"class <code>lightkube.resources.core_v1.PersistentVolumeClaimStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.PersistentVolumeClaim</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#persistentvolumeclaim","title":"PersistentVolumeClaim","text":"class <code>lightkube.resources.core_v1.PersistentVolumeClaim</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.PersistentVolumeClaim</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PersistentVolumeClaimStatus</code></li> </ul>"},{"location":"resources/core_v1/#podbinding","title":"PodBinding","text":"class <code>lightkube.resources.core_v1.PodBinding</code>(target, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.core_v1.Binding</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/core_v1/#podephemeralcontainers","title":"PodEphemeralcontainers","text":"class <code>lightkube.resources.core_v1.PodEphemeralcontainers</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Pod</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#podeviction","title":"PodEviction","text":"class <code>lightkube.resources.core_v1.PodEviction</code>(apiVersion=None, deleteOptions=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.policy_v1.Eviction</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/core_v1/#podlog","title":"PodLog","text":"class <code>lightkube.resources.core_v1.PodLog</code>() <ul> <li>Extends: <code>models.mespacedSubResource</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code></li> </ul>"},{"location":"resources/core_v1/#podstatus","title":"PodStatus","text":"class <code>lightkube.resources.core_v1.PodStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Pod</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#pod","title":"Pod","text":"class <code>lightkube.resources.core_v1.Pod</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Pod</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Binding: <code>PodBinding</code></li> <li>Ephemeralcontainers: <code>PodEphemeralcontainers</code></li> <li>Eviction: <code>PodEviction</code></li> <li>Log: <code>PodLog</code></li> <li>Status: <code>PodStatus</code></li> </ul>"},{"location":"resources/core_v1/#podtemplate","title":"PodTemplate","text":"class <code>lightkube.resources.core_v1.PodTemplate</code>(apiVersion=None, kind=None, metadata=None, template=None) <ul> <li>Extends: <code>models.core_v1.PodTemplate</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#replicationcontrollerscale","title":"ReplicationControllerScale","text":"class <code>lightkube.resources.core_v1.ReplicationControllerScale</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.autoscaling_v1.Scale</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#replicationcontrollerstatus","title":"ReplicationControllerStatus","text":"class <code>lightkube.resources.core_v1.ReplicationControllerStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.ReplicationController</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#replicationcontroller","title":"ReplicationController","text":"class <code>lightkube.resources.core_v1.ReplicationController</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.ReplicationController</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Scale: <code>ReplicationControllerScale</code></li> <li>Status: <code>ReplicationControllerStatus</code></li> </ul>"},{"location":"resources/core_v1/#resourcequotastatus","title":"ResourceQuotaStatus","text":"class <code>lightkube.resources.core_v1.ResourceQuotaStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.ResourceQuota</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#resourcequota","title":"ResourceQuota","text":"class <code>lightkube.resources.core_v1.ResourceQuota</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.ResourceQuota</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ResourceQuotaStatus</code></li> </ul>"},{"location":"resources/core_v1/#secret","title":"Secret","text":"class <code>lightkube.resources.core_v1.Secret</code>(apiVersion=None, data=None, immutable=None, kind=None, metadata=None, stringData=None, type=None) <ul> <li>Extends: <code>models.core_v1.Secret</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/core_v1/#serviceaccounttoken","title":"ServiceAccountToken","text":"class <code>lightkube.resources.core_v1.ServiceAccountToken</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.authentication_v1.TokenRequest</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>create</code></li> </ul>"},{"location":"resources/core_v1/#serviceaccount","title":"ServiceAccount","text":"class <code>lightkube.resources.core_v1.ServiceAccount</code>(apiVersion=None, automountServiceAccountToken=None, imagePullSecrets=None, kind=None, metadata=None, secrets=None) <ul> <li>Extends: <code>models.core_v1.ServiceAccount</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Token: <code>ServiceAccountToken</code></li> </ul>"},{"location":"resources/core_v1/#servicestatus","title":"ServiceStatus","text":"class <code>lightkube.resources.core_v1.ServiceStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Service</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#service","title":"Service","text":"class <code>lightkube.resources.core_v1.Service</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Service</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ServiceStatus</code></li> </ul>"},{"location":"resources/core_v1/#nodestatus","title":"NodeStatus","text":"class <code>lightkube.resources.core_v1.NodeStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Node</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#node","title":"Node","text":"class <code>lightkube.resources.core_v1.Node</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.Node</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>NodeStatus</code></li> </ul>"},{"location":"resources/core_v1/#persistentvolumestatus","title":"PersistentVolumeStatus","text":"class <code>lightkube.resources.core_v1.PersistentVolumeStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.PersistentVolume</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/core_v1/#persistentvolume","title":"PersistentVolume","text":"class <code>lightkube.resources.core_v1.PersistentVolume</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.core_v1.PersistentVolume</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PersistentVolumeStatus</code></li> </ul>"},{"location":"resources/discovery_v1/","title":"discovery_v1","text":""},{"location":"resources/discovery_v1/#endpointslice","title":"EndpointSlice","text":"class <code>lightkube.resources.discovery_v1.EndpointSlice</code>(addressType, endpoints, apiVersion=None, kind=None, metadata=None, ports=None) <ul> <li>Extends: <code>models.discovery_v1.EndpointSlice</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/events_v1/","title":"events_v1","text":""},{"location":"resources/events_v1/#event","title":"Event","text":"class <code>lightkube.resources.events_v1.Event</code>(eventTime, action=None, apiVersion=None, deprecatedCount=None, deprecatedFirstTimestamp=None, deprecatedLastTimestamp=None, deprecatedSource=None, kind=None, metadata=None, note=None, reason=None, regarding=None, related=None, reportingController=None, reportingInstance=None, series=None, type=None) <ul> <li>Extends: <code>models.events_v1.Event</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1/","title":"flowcontrol_apiserver_v1","text":""},{"location":"resources/flowcontrol_apiserver_v1/#flowschemastatus","title":"FlowSchemaStatus","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1.FlowSchemaStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1.FlowSchema</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1/#flowschema","title":"FlowSchema","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1.FlowSchema</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1.FlowSchema</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>FlowSchemaStatus</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1/#prioritylevelconfigurationstatus","title":"PriorityLevelConfigurationStatus","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1.PriorityLevelConfigurationStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1.PriorityLevelConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1/#prioritylevelconfiguration","title":"PriorityLevelConfiguration","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1.PriorityLevelConfiguration</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1.PriorityLevelConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PriorityLevelConfigurationStatus</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1beta3/","title":"flowcontrol_apiserver_v1beta3","text":""},{"location":"resources/flowcontrol_apiserver_v1beta3/#flowschemastatus","title":"FlowSchemaStatus","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1beta3.FlowSchemaStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1beta3.FlowSchema</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1beta3/#flowschema","title":"FlowSchema","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1beta3.FlowSchema</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1beta3.FlowSchema</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>FlowSchemaStatus</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1beta3/#prioritylevelconfigurationstatus","title":"PriorityLevelConfigurationStatus","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1beta3.PriorityLevelConfigurationStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1beta3.PriorityLevelConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/flowcontrol_apiserver_v1beta3/#prioritylevelconfiguration","title":"PriorityLevelConfiguration","text":"class <code>lightkube.resources.flowcontrol_apiserver_v1beta3.PriorityLevelConfiguration</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.flowcontrol_v1beta3.PriorityLevelConfiguration</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PriorityLevelConfigurationStatus</code></li> </ul>"},{"location":"resources/internal_apiserver_v1alpha1/","title":"internal_apiserver_v1alpha1","text":""},{"location":"resources/internal_apiserver_v1alpha1/#storageversionstatus","title":"StorageVersionStatus","text":"class <code>lightkube.resources.internal_apiserver_v1alpha1.StorageVersionStatus</code>(spec, status, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.apiserverinternal_v1alpha1.StorageVersion</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/internal_apiserver_v1alpha1/#storageversion","title":"StorageVersion","text":"class <code>lightkube.resources.internal_apiserver_v1alpha1.StorageVersion</code>(spec, status, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.apiserverinternal_v1alpha1.StorageVersion</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>StorageVersionStatus</code></li> </ul>"},{"location":"resources/networking_v1/","title":"networking_v1","text":""},{"location":"resources/networking_v1/#ingressclass","title":"IngressClass","text":"class <code>lightkube.resources.networking_v1.IngressClass</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.networking_v1.IngressClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/networking_v1/#ingressstatus","title":"IngressStatus","text":"class <code>lightkube.resources.networking_v1.IngressStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.networking_v1.Ingress</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/networking_v1/#ingress","title":"Ingress","text":"class <code>lightkube.resources.networking_v1.Ingress</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.networking_v1.Ingress</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>IngressStatus</code></li> </ul>"},{"location":"resources/networking_v1/#networkpolicy","title":"NetworkPolicy","text":"class <code>lightkube.resources.networking_v1.NetworkPolicy</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.networking_v1.NetworkPolicy</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/networking_v1alpha1/","title":"networking_v1alpha1","text":""},{"location":"resources/networking_v1alpha1/#ipaddress","title":"IPAddress","text":"class <code>lightkube.resources.networking_v1alpha1.IPAddress</code>(apiVersion=None, kind=None, metadata=None, spec=None) <ul> <li>Extends: <code>models.networking_v1alpha1.IPAddress</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/networking_v1alpha1/#servicecidrstatus","title":"ServiceCIDRStatus","text":"class <code>lightkube.resources.networking_v1alpha1.ServiceCIDRStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.networking_v1alpha1.ServiceCIDR</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/networking_v1alpha1/#servicecidr","title":"ServiceCIDR","text":"class <code>lightkube.resources.networking_v1alpha1.ServiceCIDR</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.networking_v1alpha1.ServiceCIDR</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ServiceCIDRStatus</code></li> </ul>"},{"location":"resources/node_v1/","title":"node_v1","text":""},{"location":"resources/node_v1/#runtimeclass","title":"RuntimeClass","text":"class <code>lightkube.resources.node_v1.RuntimeClass</code>(handler, apiVersion=None, kind=None, metadata=None, overhead=None, scheduling=None) <ul> <li>Extends: <code>models.node_v1.RuntimeClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/policy_v1/","title":"policy_v1","text":""},{"location":"resources/policy_v1/#poddisruptionbudgetstatus","title":"PodDisruptionBudgetStatus","text":"class <code>lightkube.resources.policy_v1.PodDisruptionBudgetStatus</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.policy_v1.PodDisruptionBudget</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/policy_v1/#poddisruptionbudget","title":"PodDisruptionBudget","text":"class <code>lightkube.resources.policy_v1.PodDisruptionBudget</code>(apiVersion=None, kind=None, metadata=None, spec=None, status=None) <ul> <li>Extends: <code>models.policy_v1.PodDisruptionBudget</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PodDisruptionBudgetStatus</code></li> </ul>"},{"location":"resources/rbac_authorization_v1/","title":"rbac_authorization_v1","text":""},{"location":"resources/rbac_authorization_v1/#clusterrolebinding","title":"ClusterRoleBinding","text":"class <code>lightkube.resources.rbac_authorization_v1.ClusterRoleBinding</code>(roleRef, apiVersion=None, kind=None, metadata=None, subjects=None) <ul> <li>Extends: <code>models.rbac_v1.ClusterRoleBinding</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/rbac_authorization_v1/#clusterrole","title":"ClusterRole","text":"class <code>lightkube.resources.rbac_authorization_v1.ClusterRole</code>(aggregationRule=None, apiVersion=None, kind=None, metadata=None, rules=None) <ul> <li>Extends: <code>models.rbac_v1.ClusterRole</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/rbac_authorization_v1/#rolebinding","title":"RoleBinding","text":"class <code>lightkube.resources.rbac_authorization_v1.RoleBinding</code>(roleRef, apiVersion=None, kind=None, metadata=None, subjects=None) <ul> <li>Extends: <code>models.rbac_v1.RoleBinding</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/rbac_authorization_v1/#role","title":"Role","text":"class <code>lightkube.resources.rbac_authorization_v1.Role</code>(apiVersion=None, kind=None, metadata=None, rules=None) <ul> <li>Extends: <code>models.rbac_v1.Role</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/resource_v1alpha2/","title":"resource_v1alpha2","text":""},{"location":"resources/resource_v1alpha2/#podschedulingcontextstatus","title":"PodSchedulingContextStatus","text":"class <code>lightkube.resources.resource_v1alpha2.PodSchedulingContextStatus</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.resource_v1alpha2.PodSchedulingContext</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/resource_v1alpha2/#podschedulingcontext","title":"PodSchedulingContext","text":"class <code>lightkube.resources.resource_v1alpha2.PodSchedulingContext</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.resource_v1alpha2.PodSchedulingContext</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>PodSchedulingContextStatus</code></li> </ul>"},{"location":"resources/resource_v1alpha2/#resourceclaimstatus","title":"ResourceClaimStatus","text":"class <code>lightkube.resources.resource_v1alpha2.ResourceClaimStatus</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.resource_v1alpha2.ResourceClaim</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/resource_v1alpha2/#resourceclaim","title":"ResourceClaim","text":"class <code>lightkube.resources.resource_v1alpha2.ResourceClaim</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.resource_v1alpha2.ResourceClaim</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>ResourceClaimStatus</code></li> </ul>"},{"location":"resources/resource_v1alpha2/#resourceclaimtemplate","title":"ResourceClaimTemplate","text":"class <code>lightkube.resources.resource_v1alpha2.ResourceClaimTemplate</code>(spec, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.resource_v1alpha2.ResourceClaimTemplate</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/resource_v1alpha2/#resourceclass","title":"ResourceClass","text":"class <code>lightkube.resources.resource_v1alpha2.ResourceClass</code>(driverName, apiVersion=None, kind=None, metadata=None, parametersRef=None, suitableNodes=None) <ul> <li>Extends: <code>models.resource_v1alpha2.ResourceClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/scheduling_v1/","title":"scheduling_v1","text":""},{"location":"resources/scheduling_v1/#priorityclass","title":"PriorityClass","text":"class <code>lightkube.resources.scheduling_v1.PriorityClass</code>(value, apiVersion=None, description=None, globalDefault=None, kind=None, metadata=None, preemptionPolicy=None) <ul> <li>Extends: <code>models.scheduling_v1.PriorityClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/storage_v1/","title":"storage_v1","text":""},{"location":"resources/storage_v1/#csidriver","title":"CSIDriver","text":"class <code>lightkube.resources.storage_v1.CSIDriver</code>(spec, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.storage_v1.CSIDriver</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/storage_v1/#csinode","title":"CSINode","text":"class <code>lightkube.resources.storage_v1.CSINode</code>(spec, apiVersion=None, kind=None, metadata=None) <ul> <li>Extends: <code>models.storage_v1.CSINode</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/storage_v1/#csistoragecapacity","title":"CSIStorageCapacity","text":"class <code>lightkube.resources.storage_v1.CSIStorageCapacity</code>(storageClassName, apiVersion=None, capacity=None, kind=None, maximumVolumeSize=None, metadata=None, nodeTopology=None) <ul> <li>Extends: <code>models.storage_v1.CSIStorageCapacity</code></li> <li>Type: Namespaced Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code> all, <code>watch</code> all, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/storage_v1/#storageclass","title":"StorageClass","text":"class <code>lightkube.resources.storage_v1.StorageClass</code>(provisioner, allowVolumeExpansion=None, allowedTopologies=None, apiVersion=None, kind=None, metadata=None, mountOptions=None, parameters=None, reclaimPolicy=None, volumeBindingMode=None) <ul> <li>Extends: <code>models.storage_v1.StorageClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"},{"location":"resources/storage_v1/#volumeattachmentstatus","title":"VolumeAttachmentStatus","text":"class <code>lightkube.resources.storage_v1.VolumeAttachmentStatus</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.storage_v1.VolumeAttachment</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>get</code>, <code>patch</code>, <code>replace</code></li> </ul>"},{"location":"resources/storage_v1/#volumeattachment","title":"VolumeAttachment","text":"class <code>lightkube.resources.storage_v1.VolumeAttachment</code>(spec, apiVersion=None, kind=None, metadata=None, status=None) <ul> <li>Extends: <code>models.storage_v1.VolumeAttachment</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul> <p>Subresources:</p> <ul> <li>Status: <code>VolumeAttachmentStatus</code></li> </ul>"},{"location":"resources/storage_v1alpha1/","title":"storage_v1alpha1","text":""},{"location":"resources/storage_v1alpha1/#volumeattributesclass","title":"VolumeAttributesClass","text":"class <code>lightkube.resources.storage_v1alpha1.VolumeAttributesClass</code>(driverName, apiVersion=None, kind=None, metadata=None, parameters=None) <ul> <li>Extends: <code>models.storage_v1alpha1.VolumeAttributesClass</code></li> <li>Type: Global Resource</li> <li>Accepted client methods: <code>delete</code>, <code>deletecollection</code>, <code>get</code>, <code>list</code>, <code>patch</code>, <code>create</code>, <code>replace</code>, <code>watch</code></li> </ul>"}]}